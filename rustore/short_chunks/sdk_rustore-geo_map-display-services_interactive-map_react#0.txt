Создайте функцию, которая будет сохранять новые широту, долготу и масштаб, когда пользователь взаимодействует с картой. Напишите функцию MMR GL JS map.on('move'), которая устанавливает значения в состояние, когда пользователь перемещает карту. В useEffect — если вы используете хуки, или в componentDidMount() — если вы используете классы, добавьте следующий код.Вариант с хуками (hooks)map.on( 'move' , () => {    setLng(map.getCenter().lng.toFixed(4));    setLat(map.getCenter().lat.toFixed(4));    setZoom(map.getZoom().toFixed(2));});Вариант с классами (classes)map.on( 'move' , () => {    this .setState({        lng: map.getCenter().lng.toFixed(4),        lat: map.getCenter().lat.toFixed(4),        zoom: map.getZoom().toFixed(2)    });});В этой функции используется useState() — если вы используете хуки (hooks), или setState() — если вы используете классы (classes), чтобы сбросить значения lng, lat и zoom при перемещении карты. В функции используются следующие методы (см. ниже).getCenter() — метод MMR GL JS, чтобы получить новую долготу и широту точки в центре карты.
getZoom() — метод MMR GL JS, чтобы определить уровень масштабирования, на который установлена карта.
toFixed() — метод JavaScript, позволяющий усечь результирующее число с плавающей запятой до заданного числа цифр.