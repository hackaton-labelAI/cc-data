В вашем Application.kt реализуйте интерфейс HasTracerConfiguration (см. ниже).class MyApplication : Application(), HasTracerConfiguration {    override val tracerConfiguration: List<TracerConfiguration>        get() = listOf(            CoreTracerConfiguration.build {                // опции ядра трейсера            },            CrashReportConfiguration.build {                // опции сборщика крэшей            },            CrashFreeConfiguration.build {                // опции подсчета crash free            },            HeapDumpConfiguration.build {                // опции сборщика хипдампов при ООМ            },            DiskUsageConfiguration.build {                // опции анализатора дискового пространства            },            SystraceProfilerConfiguration.build {                // опции systrace-профайлера в продакшене            },            SamplingProfilerConfiguration.build {                // опции семплирующего профайлера            },        )}Свойство HasTracerConfiguration.tracerConfiguration будет запрошена ровно один раз при старте процесса до вызова Application.onCreate но после Application.attachBaseContext. В геттере уже можно обращаться к контексту приложения, но еще рано обращаться к тому, что проинициализируется в onCreate.Ниже представлено подробное описание опций:.CoreTracerConfiguration — смотрите ниже на этой странице.
CrashReportConfiguration и CrashFreeConfiguration — на странице Crash и ANR.
HeapDumpConfiguration — на странице Heap Dumps.
DiskUsageConfiguration — на странице Disk Usage.
SystraceProfilerConfiguration — на странице Systrace Profiler.
SamplingProfilerConfiguration — на странице Sampling Profiler.