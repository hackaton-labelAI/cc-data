[
  {
    "shortName": "/developers_publishing-and-verifying-apps_declare-app-permissions_how-to-declare-permissions.txt",
    "summary": "Эта статья представляет руководство для разработчиков в RuStore по декларированию разрешений при публикации приложений. Оно объясняет, как заполнять разделы \"Безопасность данных пользователя\", включая \"Чувствительные разрешения\" и \"Категории и типы данных\", и описывает последствия неверной декларации. Статья также подчеркивает необходимость соблюдения требований к приложениям и мониторинга соответствия Правилам программы для разработчиков."
  },
  {
    "shortName": "/work-with-rustore-api_api-feedback-process_feedback-answer.txt",
    "summary": "Статья посвящена работе с отзывами в API RuStore. В ней подробно описывается метод \"Оставить ответ на отзыв\", включая его URL, параметры взаимодействия и ответа, а также приводится пример кода для его использования. Важными ключевыми моментами статьи являются: получение токена авторизации, атрибуты взаимодействия и ответа, а также примеры кода. Эта страница будет полезна разработчикам для работы с отзывами приложений через API RuStore."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_app-publication_setting-up-publication_step-by-step-publication.txt",
    "summary": "\"Эта статья излагает процесс поэтапной публикации приложений в RuStore и объясняет, как управлять этой публикацией в различных стадиях: от загрузки новой версии до модерации и после. Статья также описывает различные проценты пользователей, которые могут быть выбраны для поэтапной публикации и управлять процессом после модерации. Включает руководство по управлению публикацией при загрузке новой версии, управлению во время и после модерации, и подробно описывает процесс остановки поэтапной публикации.\""
  },
  {
    "shortName": "/sdk_updates_flutter_6-0-0.txt",
    "summary": "Статья посвящена документации об интеграции и использовании SDK обновлений от RuStore для мобильных приложений на различных платформах (Android, iOS, Unity, Godot, React Native, Flutter и Unreal Engine). В ней обсуждаются ключевые моменты, такие как типы обновлений (отложенное, тихое и принудительное), процесс включения SDK в проект, проверка наличия обновлений, скачивание и установка обновлений, а также обработка ошибок. Статья содержит инструкции и примеры кода для каждого из этих аспектов и описывает, как вести себя при нажатии пользователем на кнопки обновления."
  },
  {
    "shortName": "/developers_tools_app-tracer_android_start_migration.txt",
    "summary": "Статья \"Миграция на новую версию - Обновление с 0.2.2 до 0.2.7 | Документация RuStore\" подробно описывает процесс миграции на новые версии платформы RuStore: от версии 0.2.2 до 0.2.7. Обсуждаются обновления и изменения в API профилирования, устаревшие классы и методы, а также изменения в подключении плагина Tracer. В статье предоставляются инструкции по обновлению и применению новых функций для разработчиков. Эта информация может быть использована для переноса приложений на новые версии платформы и улучшения их производительности."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_app-publication_upload-aab_.txt",
    "summary": "Статья посвящена инструкции по загрузке приложений в формате Android App Bundle (ААВ) в консоль RuStore. Она объясняет, как аутентифицироваться на платформе и загружать приложения в формате ААВ, включая процедуры загрузки подписи приложения и файла ААВ. Описывается, как создать и загрузить новую подпись для приложений в формате AAB, а также как загрузить существующую подпись. Статья заканчивается инструкцией по загрузке файла AAB и настройке публикации приложения."
  },
  {
    "shortName": "/sdk_push-notifications_react_6-0-0.txt",
    "summary": "Статья посвящена интеграции Push-уведомлений в приложение на платформе React Native с использованием SDK от RuStore. В ней описываются условия для работы Push-уведомлений, такие как наличие актуальной версии RuStore, поддержка функциональности push-уведомлений приложением и разрешение на работу в фоновом режиме. \n\nВ статье представлены шаги по подключению пакета SDK к проекту, редактированию манифеста приложения для настройки отображения уведомлений, запрашивания разрешения на показ уведомлений в Android 13 и инициализации SDK. Также описано как проверить возможность получать push-уведомления, а также функции для работы с push-токеном и push-топиком, включая получение, удаление токена и подписку на топики. \n\nСтруктура статьи включает разделы по методам для работы с push-уведомлениями в контексте React Native, включая получение данных от SDK, создание эмиттера, получение информации о push-уведомлениях и структуру уведомления. Также приводится информация о тестировании интеграции SDK и обработке ошибок. \n\nВ конце статьи содержатся ссылки на дополнительную информацию, а также упоминается об условиях использования и конфиденциальности."
  },
  {
    "shortName": "/legal_privacy-policy-users.txt",
    "summary": "Статья описывает политику конфиденциальности сервиса RuStore, которую пользователи должны прочитать и принять перед использованием сервиса. Политика регулирует сбор, обработку и использование персональной и иной информации пользователя, включая номера телефонов, электронные адреса, данные об устройстве и местоположении, для предоставления функциональных возможностей сервиса. \n\nПользователи также дают согласие на передачу своих данных партнерам и аффилированным лицам для улучшения сервиса, предоставления персонализированных услуг и рекламы. Политика также учитывает использование файлов cookies и сбор информации о местоположении пользователя.\n\nПользователи имеют право доступа к своим персональным данным, возможности их правильности и актуальности, а также право на их удаление. Сервис гарантирует защиту пользовательских данных от неправомерного доступа и уничтожения.\n\nПользователи могут обращаться в службу поддержки с запросами о своих данных. Политика регулируется законодательством Российской Федерации и может быть изменена и обновлена без предварительного уведомления пользователей."
  },
  {
    "shortName": "/developers_tools_remote-config_ab-testing.txt",
    "summary": "Эта документация посвящена использованию функции A/B-тестирования в системе RuStore. Включает обзор принципов работы, процесса подключения MyTracker, создания и работы с экспериментами, создание и управление метриками, а также инструкции по работе с параметрами и условиями в Remote Config."
  },
  {
    "shortName": "/sdk_push-notifications_send-push-notifications.txt",
    "summary": "Статья \"Отправка push-уведомлений (API)\" изложена в формате документации для разработчиков и посвящена API, используемому для отправки push-уведомлений в приложениях. Она подробно описывает, как необходимо форматировать и отправить запрос для отправки уведомления, какие параметры должны быть включены в запрос, включая токены пользователя, данные уведомления, шаблон уведомления, специфические параметры для платформы Android и возможные ошибки, которые могут возникнуть при отправке уведомлений. Также приведены примеры успешной и неуспешной отправки уведомлений, включая использование deep link и intent action."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_declare-app-permissions_permission-types.txt",
    "summary": "Статья \"Типы разрешений в RuStore: подробный обзор\" касается вопроса о типах разрешений, которые используются в приложениях для платформы RuStore. Освещается подробный список разрешений, включая их категории (Безопасные, Опасные, Специальные, Требующие особой подписи и Запрещенные), а также описание того, как эти разрешения управляются и проверяются при загрузке приложений в консоль RuStore. Пользователям рекомендуется быть осведомленными о использовании этих разрешений, особенно для разрешений типа \"Опасные\", \"Специальные\" и \"Требующие особой подписи\", которые относятся к чувствительным разрешениям."
  },
  {
    "shortName": "/sdk_rustore-geo_general_intro.txt",
    "summary": "Статья \"Общие сведения\" в документации RuStore посвящена картографическим продуктам и высоконагруженным сервисам на базе данных OpenStreetMap, известным как RuStore Geo. Для работы с этими сервисами требуется ключ доступа. Документация упоминает поддерживаемые языки и ограничение скорости запросов, а также указывает на возможность менеджера RuStore Geo вносить изменения в эти параметры. Ограничение скорости запросов по умолчанию составляет 10 запросов в секунду для отображения карты и 10 запросов в секунду для сервисов расчёта матрицы расстояний и решения задачи коммивояжёра."
  },
  {
    "shortName": "/work-with-rustore-api_api-upload-publication-app_apk-file-upload_.txt",
    "summary": "Статья \"Загрузка APK/AAB-файлов\" из документации RuStore API посвящена методам загрузки приложений в форматах APK и AAB через API. Статья подробно описывает процесс загрузки этих файлов, предупреждает о возможных проблемах с чувствительными и запрещенными разрешениями и предлагает решения для их обработки."
  },
  {
    "shortName": "/developers_developer-account_user-roles.txt",
    "summary": "Статья описывает функции управления доступом в системе RuStore, включая добавление, редактирование и удаление пользователей. Приведены инструкции по добавлению пользователей с указанием VK ID и выбору роли (владелец, администратор, релиз-менеджер и т.д.). Указывается, что выбор роли определяет доступные для пользователя функции (рассмотрены разрешения на публикацию приложений, монетизацию, управление платежами и т.д.). Кроме того, статья описывает, как редактировать роль пользователя и как удалить пользователя из системы."
  },
  {
    "shortName": "/sdk_rustore-geo_search-and-geocoding-services_geocoding-service.txt",
    "summary": "Эта статья представляет собой документацию о сервисе геокодирования в продуктовой линейке RuStore. Сервис обеспечивает прямое и обратное геокодирование, преобразуя адреса в географические координаты и наоборот, и работает на территории всего мира на всех доступных языках.\n\nДетали включают в себя подробное описание параметров запроса и ответа, включая обязательные и общие дополнительные поля. Также приведены примеры запросов и ответов. Статья также описывает JSON-формат ответа и структуру полей этих ответов, включая детальную информацию о найденном адресе, координаты, границы местонахождения и тип объекта. \n\nВ целом, статья предоставляет полное руководство по использованию сервиса геокодирования от RuStore, включая спецификации API, примеры и разъяснения о различных полях и форматах ответа."
  },
  {
    "shortName": "/sdk_payments_unity_5-0-0.txt",
    "summary": "Статья посвящена интеграции платежей в мобильное приложение с использованием сервиса RuStore. Она подробно объясняет процесс установки и настройки SDK платежей, включая инициализацию библиотеки, работу с deeplink, и обработку ошибок. \n\nВсе этапы интеграции описаны с использованием примеров кода. Статья также предоставляет информацию о возможных ошибках и их обработке, включая автоматическую обработку некоторых типов ошибок. Важные параметры и конфигурации, такие как consoleApplicationId и deeplinkPrefix, подробно описаны и демонстрируются с использованием кодовых примеров. \n\nКлючевые разделы включают: подготовку к работе с SDK, инициализацию SDK, обработку deeplink, процесс оплаты, подтверждение покупки, отмена покупки, обработка незавершённых платежей и смену темы интерфейса. \n\nСодержимое статьи полезно для разработчиков, которые хотят интегрировать платежи в свое мобильное приложение с использованием сервиса RuStore."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_app-publication_upload-aab.txt",
    "summary": "Статья \"Руководство по загрузке приложений в формате ААВ в RuStore Консоль\" подробно описывает процесс загрузки приложений в формате Android App Bundle (ААВ) через консоль RuStore. Основной упор делается на два ключевых момента: загрузка подписи приложения и загрузка самого файла AAB. Статья предоставляет пошаговый руководство по загрузке подписи приложения, включая подготовку и загрузку ZIP-архива подписи и сертификата ключа загрузки. Далее, описывается процесс загрузки файла AAB, уточняются требования к файлу и описывается процедура его загрузки. В конце статьи приводится финальная инструкция по отправке загруженного файла на модерацию."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_collect-har-logs_google-chrome.txt",
    "summary": "Статья носит практический характер и посвящена инструкциям по сбору HAR-логов и консольных логов в Google Chrome. Она содержит шаги для открытия инструментов разработчика, настройки параметров логов, сбора и сохранения соответствующей информации. В статье также есть сноска для перехода к аналогичной информации для других браузеров. В оглавлении этой статью можно разместить в разделе \"Инструменты\" или \"Руководства по сбору данных\"."
  },
  {
    "shortName": "/users_purchases-and-returns_payment-method_sberpay.txt",
    "summary": "Статья посвящена способам оплаты через платформу SberPay в сервисе RuStore. Описывается процесс оплаты приложений и товаров, включая подключение SberPay и использование данного способа оплаты. Статья также указывает, что оплата через SberPay доступна только при наличии приложения \"СберБанк Онлайн\"."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_aso-recommendations.txt",
    "summary": "Статья \"ASO в RuStore: эффективные стратегии для повышения видимости приложения\" посвящена методам и советам по увеличению видимости и улучшению рейтинга приложений в RuStore. Она раскрывает роль рейтинга, количества установок, переходов в установку и оценок в формировании позиций приложений в поисковой выдаче и каталогах. Статья подчеркивает важность активного взаимодействия с пользователями и которых включает процесс получения отзывов и оценок с использованием SDK RuStore и предупреждает об опасности накруток."
  },
  {
    "shortName": "/users_app-management_where-downloads-apps.txt",
    "summary": "Статья обсуждает, где на Android хранятся приложения, скачанные из RuStore. Важные мысли: на Android приложения из RuStore обычно хранятся в папке «Android» в внутренней памяти устройства, внутри которой есть папки «Data» и «Obb» для хранения данных и кэша игр соответственно. Эти папки не отображаются и не содержат apk-файлы."
  },
  {
    "shortName": "/developers_tools_remote-config_sdk.txt",
    "summary": "Статья \"Интеграция SDK и настройка приложения - Руководство для Unreal и Kotlin\" включает в себя подробные инструкции по интеграции SDK и настройке приложений для платформ Unreal и Kotlin. Она предназначена для пользователей, желающих узнать, как шаг за шагом интегрировать SDK и настроить свое приложение. Статья включает руководства по интеграции и конфигурации для этих платформ и оказывает поддержку пользователям в процессе настройки своих приложений."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_collect-har-logs_firefox.txt",
    "summary": "Статья \"Сбор HAR и консольных логов в Mozilla Firefox - Подробное Руководство\" описывает процесс сбора двух типов логов в браузере Mozilla Firefox: HAR (HTTP Archive) и консольных логов. Для сбора HAR-логов следует открыть окно инструментов разработчика, перейти на вкладку \"Сеть\", активировать опцию \"Непрерывные логи\", воспроизвести проблему, затем сохранить логи как HAR-файл. Такой лог может быть полезен для анализа сетевой активности при работе с веб-сайтами. Для сбора консольных логов аналогичный процесс, но в окне инструментов разработчика следует перейти на вкладку \"Консоль\". Инструкция иллюстрируется шаги, и подсказывает, куда и как сохранить полученные файлы."
  },
  {
    "shortName": "/work-with-rustore-api_api-feedback-process_get-feedbacks-statuses.txt",
    "summary": "Статья описывает метод, предоставляемый API RuStore, который позволяет получить статус модерации ответов на отзывы или конкретный ответ на отзыв. Приведены параметры вхождения и выхода, а также примеры запросов и ответов. Ограничения включают количество отзывов, которое можно получить на одной странице и совместное использование параметров пагинации и фильтрации. Текст содержит сведения о параметрах взаимодействия, параметрах ответа и примеры запросов с ответами."
  },
  {
    "shortName": "/developers_developer-statistics_.txt",
    "summary": "Статья посвящена разделу статистики в RuStore Консоль, где представлены ключевые данные о популярности и эффективности приложения разработчика: просмотры и скачивания, прибыль, возвраты, количество push-уведомлений. Данные позволяют оценить динамику продаж, улучшить приложение и пересмотреть стратегию монетизации."
  },
  {
    "shortName": "/users_app-management_update-failure.txt",
    "summary": "Статья \"Сбой обновления приложения в RuStore - Как исправить ошибки\" предлагает методы решения проблем при обновлении приложений в магазине RuStore. Основные проблемы, которые обсуждаются в статье, включают проблемы с подключением к интернету, нехватку свободной памяти, разрешение установки из неизвестных источников, версию Android и несовместимость версий. Статья предлагает ряд решений, включая проверку подключения к интернету, удаление лишних файлов, разрешение установки из неизвестных источников, обновление Android до последней версии и удаление старой версии приложения для последующей установки из RuStore. Если проблемы не решаются, предлагается обратиться в службу поддержки."
  },
  {
    "shortName": "/developers_tools_remote-config_general.txt",
    "summary": "Статья \"RuStore Remote Config: основы, быстрый старт и руководство по управлению конфигурацией\" посвящена инструменту управления конфигурацией мобильных приложений от RuStore. \n\nВ статье подробно описаны основные функции и принципы работы RuStore Remote Config, включая возможность реализации feature toggle (или feature switcher) и управление ими через удобный графический интерфейс. Также расписаны шаги по подключению SDK и конфигурации приложения, использование A/B-тестирования, подключение приложений на платформе IOS, работа с параметрами и условиями и настройка обязательного подтверждения. \n\nСтатья содержит подробные инструкции и кодовые примеры по настройке параметров и условий в Remote Config, добавлению их в код приложения и проведению A/B-тестов. В конце статьи приведен процесс настройки параметров и условий, подключения MyTracker для отслеживания кликов по кнопкам, создания метрики, запуска экспериментов и анализа результатов.\n\nСтатья подходит для разработчиков и руководствуется не только техническим контентом, но и включает информацию о необходимости зарегистрированной учетной записи разработчика, подсказки и уточнения по алгоритмам и процедурам."
  },
  {
    "shortName": "/sdk_updates_unity_0-2-0.txt",
    "summary": "Статья посвящена документации для инструмента обновления приложений в системе RuStore. Она разбита на разные разделы: общие сведения, примеры сценариев использования, условия для корректной работы SDK, подключение к проекту, создание менеджера обновлений, проверка наличия обновлений, выбор способа обновления, скачивание и установка обновлений, обработка ошибок. Статья также включает в себя список доступных SDK, платежей в ин-猷е и подписок, push-уведомлений, подключения отзывов и оценок, обновления приложения, а также историю изменений SDK."
  },
  {
    "shortName": "/developers_faq_payments-faq.txt",
    "summary": "Статья \"Работа с платежами\" содержит информацию о настройках и деталях работы с платежами в приложениях на платформе RuStore. Освещены вопросы бесплатного периода подписки, проблемы с подписью на монетизацию, возможности изменения типа аккаунта для самозанятых, запросы на возвраты, создание и удаление товаров, отмена подписок и использование API для отслеживания монетизации."
  },
  {
    "shortName": "/developers_tools_remote-config_ab-testing_experiments.txt",
    "summary": "Эта статья из документации описывает раздел \"A/B эксперименты\" в сервисе Remote Config от RuStore. Основные темы включают создание и редактирование экспериментов, просмотр результатов, а также работа с метриками и подключение MyTracker. Статья содержит руководства по основным функциям раздела A/B эксперименты и ссылки на дополнительную информацию."
  },
  {
    "shortName": "/sdk_rustore-geo_map-display-services_interactive-map_sources#canvassource.txt",
    "summary": "Статья \"Sources (источники)\" изучает различные типы источников данных для карт в контексте SDK и API RuStore. Страница посвящена обсуждению различных типов источников, включая GeoJSONSource, VideoSource, ImageSource и CanvasSource, а также их методы и параметры. Также освещаются CanvasSourceOptions и как добавить и обновить данные для каждого типа источника."
  },
  {
    "shortName": "/developers_tools_remote-config_sdk_kotlin.txt",
    "summary": "Статья посвящена работе с Kotlin Remote Config в SDK RuStore, включая создание и инициализацию RemoteConfigClient, получение конфигурации, фоновую синхронизацию и обработку ошибок SDK."
  },
  {
    "shortName": "/work-with-rustore-api_api-feedback-process_get-feedback-status.txt",
    "summary": "Статья описывает метод получения статуса ответа на отзыв в API RuStore. Она подробно объясняет, как форматировать запросы и интерпретировать ответы, используя HTTP-метод GET для получения информации о конкретном ответе на отзыв или статусов ответов на отзывы в целом. Представлены примеры запросов и ответов, а также объяснение структуры ответов, включая коды ответов, информацию о конкретном ответе на отзыв и дату последнего изменения."
  },
  {
    "shortName": "/sdk_rustore-geo_map-display-services_interactive-map_main.txt",
    "summary": "Статья посвящена использованию интерактивных карт в приложениях с использованием SDK от RuStore. Основные темы включают: формирование данных для отображения (тайлы), стили отображения, добавление объектов на карту - точек, линий и полигонов, а также методы инициализации и встраивания карт в проект. Документация подробно описывает различные стили и методы добавления различных элементов на карту, позволяя разработчикам создавать интерактивные карты для своих приложений."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_responses-to-reviews.txt",
    "summary": "Статья \"Эффективное взаимодействие с оценками и отзывами в RuStore\" описывает процесс взаимодействия с пользователями посредством оценок и отзывов в приложении RuStore. Рассматриваются способы просмотра и фильтрации отзывов, ответов на отзывы, а также особенности работы с негативными отзывами. Эта информация может быть полезной для разработчиков приложений, которые хотят улучшить качество своих продуктов и установить более продуктивное общение с пользователями."
  },
  {
    "shortName": "/sdk_rustore-geo_additional-services_height-determination.txt",
    "summary": "Статья посвящена сервису определения высоты, предоставляющему возможность получать данные о высоте над уровнем моря для отдельной точки на карте, набора точек или маршрута. В ней подробно описаны параметры и форматы запросов, а также ответов сервиса, включая обязательные и необязательные поля запросов. Структурированы примеры запросов и ответов на них. Ключевыми темами статьи являются: методы определения высоты, форматы передачи данных, параметры запроса и ответа сервиса."
  },
  {
    "shortName": "/developers_monetization_payment-callback_server-set-up.txt",
    "summary": "Статья \"Настройка сервера для получения уведомлений\" подробно описывает процесс создания безопасного сервера для обработки уведомлений от RuStore. Статья включает в себя следующие разделы: подготовка сервера, добавление IP-адреса RuStore в белый список, привязка домена и выпустка сертификата, настройка расшифровки уведомления, а также пример кода для расшифровки уведомления на языке Java. В конце статьи есть ссылка на следующий раздел - \"Включение отправки уведомлений\"."
  },
  {
    "shortName": "/sdk_push-notifications_defold_2-0-0.txt",
    "summary": "Эта статья представляет собой документацию по интеграции RuStore SDK push-уведомлений в проект на платформе Defold. Содержание включает инструкции по установке и настройке SDK, требования к устройству и приложению для корректной работы push-уведомлений, а также методы и примеры кода для работы с push-уведомлениями, включая получение и отключение push-токенов, подписку и отписку на топики, и получение информации из push-уведомлений. Статья также упоминает о необходимости запросить разрешение на показ уведомлений в Android 13+ и описывает основные методы и константы для интеграции SDK в приложение."
  },
  {
    "shortName": "/users_purchases-and-returns_without-rustore-app.txt",
    "summary": "Статья обсуждает функцию \"Покупки без установки RuStore\" в документации к платформе RuStore. Она разъясняет, как оплачивать покупки и подписки в приложениях, не имея RuStore установленным на устройстве, используя авторизацию через VK ID и поддерживаемые способы оплаты. Освещены особенности такой оплаты: способы оплаты запоминаются, доступны даже после удаления RuStore, и предоставляется возможность управления покупками и подписками при установке RuStore."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_app-publication_apk-signature?utm_source=direct_none.txt",
    "summary": "Статья \"Подписи APK-файлов в RuStore: инструкции и рекомендации\" посвящена вопросам работы с цифровыми подписями приложений в формате APK и ААВ, загружаемых в магазин приложений RuStore. В ней подробно описывается, что такое цифровая подпись приложения, как работает процесс проверки подписей Android, и почему это важно, особенно в контексте публикации приложений и их обновления между разными магазинами приложений. Статья также обсуждает, когда и почему разработчики могут столкнуться с проблемами при обновлении приложений из-за использования разных подписей для разных магазинов приложений, и предлагает решения этих проблем, включая использование однородной подписи для всех версий приложения, обращение в поддержку RuStore для обновления подписи и использование различных подключений для публикации приложений в разных магазинах."
  },
  {
    "shortName": "/sdk_updates_react_2-0-0.txt",
    "summary": "Статья \"RuStore In-app updates SDK\" посвящена инструменту управления обновлениями приложений для платформы RuStore. SDK поддерживает актуальную версию приложения на устройствах пользователей, что позволяет улучшить производительность и исправить ошибки. Статья описывает различные методы обновления, включая отложенное, тихое и принудительное. \n\nВыбор метода обновления зависит от сценария использования: отложенные обновления показываются пользователю, ему предоставляется возможность принять или отклонить обновление; принудительное обновление блокирует использование приложения до установки обновления; тихое обновление не требует вмешательства пользователя. \n\nSDK также обеспечивает проверку наличия обновления, методы скачивания и установки обновлений, а также обработку ошибок. Здесь представлены методы получения статуса скачивания обновления и удаления слушателя статуса. Кроме того, статья объясняет, как и когда вызывать методы для начала скачивания и установки обновления. \n\nВсего в SDK есть 11 методов, каждый из которых выполняет определенную функцию в процессе обновления приложений. Каждый метод снабжен подробными комментариями и примерами использования, что помогает разработчикам легко интегрировать и использовать SDK в своих проектах. \n\nСтатья подходит для оглавления раздела \"Руководство по SDK обновлений RuStore\"."
  },
  {
    "shortName": "/developers_developer-account_registration-developer_registration.txt",
    "summary": "Эта статья является инструкцией по регистрации юридических лиц и индивидуальных предпринимателей в системе RuStore Консоль. В ней подробно описан процесс создания аккаунта, включая шаги от открытия системы и ввода данных через VK ID до подтверждения аккаунта с помощью плагина КриптоПро для электронной подписи. Статья также содержит информацию о монетизации и рекламе, а в конце перечислены дополнительные инструкции по установке плагина КриптоПро и возможные вопросы, связанные с регистрацией."
  },
  {
    "shortName": "/developers_tools_remote-config_sdk_unreal.txt",
    "summary": "Статья \"Руководство по использованию Unreal - инициализация, RemoteConfig и обработка ошибок\" дает обзор основных процедур и концепций Unreal Engine. Оно объясняет, как инициализировать Unreal Engine, использовать RemoteConfigClient для получения конфигурации проекта и как структурировать RemoteConfig. Также включено описание способов подключения к проекту и решения возможных ошибок. Эта статья подходит для раздела \"Инструменты\" в оглавлении, подраздела \"RuStore Remote Config\"."
  },
  {
    "shortName": "/developers_faq_legal-faq.txt",
    "summary": "Статья обсуждает вопросы отчетности и монетизации в платформе RuStore. Обсуждаются вопросы связанные с работой с платежами, включая чарджбэки (отмененные платежи), и коммуникацию с поддержкой. Также рассмотрены вопросы монетизации приложений, включая подключение к монетизации и отчеты о прибыли. \n\nВ статье описываются процедуры работы с отчетами, включая предоставление отчетов за отчетный период, и получение актов выполненных работ. Также подробно обсуждается процесс выплаты вознаграждений разработчикам, включая условия для выплаты и необходимость предоставления актов. \n\nСтатья также затрагивает вопросы учета и отражения в \"Мой налог\" дохода и уплаты налогов. \n\nВ целом, статья предоставляет подробную информацию для разработчиков о процессах и процедурах, связанных с отчетностью и монетизацией в RuStore."
  },
  {
    "shortName": "/sdk_general-push-notifications_kotlin_1-0-0.txt",
    "summary": "Эта статья описывает SDK универсальных push-уведомлений от RuStore, разработанное для работы с несколькими провайдерами одновременно (RuStore, Firebase Cloud Messaging (FCM) и Huawei Mobile Services (HMS)). Статья содержит инструкции о подключении и настройки SDK для работы с этими провайдерами, включая примеры кода для подключения в проект и инициализации провайдеров. Также описаны методы для работы с push-токенами и push-топиками, а также обработка уведомлений и ошибок."
  },
  {
    "shortName": "/developers_tools_remote-config_ab-testing_experiment-result_detailed-results.txt",
    "summary": "Статья \"Подробная информация по результатам эксперимента\" в документации RuStore посвящена функциям и инструкциям по работе с Remote Config, включающим A/B-тестирование и A/B-эксперименты. Описывается процесс просмотра подробных сведений по результатам экспериментов в виде графиков, а также дается руководство по работе с графиками, настройке параметров, созданию метрик, установке временного интервала, а также описанию понятий \"минимального детектируемого эффекта (MDE)\", \"доверительного интервала\", \"P-Value\" и \"значения\". Статья предоставляет информацию по использованию функций Remote Config для анализа и улучшения результатов A/B-тестирования в приложениях RuStore."
  },
  {
    "shortName": "/users_start_install-on-tv_tv-app-interface.txt",
    "summary": "Статья \"Интерфейс RuStore для ТВ - Установка, удаление, обновление приложений и служба поддержки\" описывает процесс установки, удаления и обновления приложений в магазине приложений RuStore на ТВ. В ней также есть информация о функционале интерфейса, просмотрах приложений, описаниях, обновлении и поддержке. Ключевые мысли включают установку приложения, удаление, обновление, автообновление, онлайн-поддержку и управление приложениями в магазине RuStore. Этот обзор может быть включён в раздел \"Инструкции по использованию\" или \"Управление приложениями\" в оглавлении документации."
  },
  {
    "shortName": "/sdk_updates_flutter_1-0-0.txt",
    "summary": "Статья посвящена документации по интеграции и использованию RuStore In-app updates SDK для автоматизированного обновления приложений. Обсуждаются сценарии работы SDK (отложенное, тихое и принудительное обновление), условия для корректной работы, инструкции по подключению пакета к проекту, методы проверки и скачивания обновлений, а также обработка ошибок. SDK поддерживает различные языки и фреймворки разработки, включая Flutter, Kotlin/Java, Unity, Godot, React Native и другие."
  },
  {
    "shortName": "/sdk_payments.txt",
    "summary": "Статья \"Платежи in-app и подписки - Руководство по работе, покупкам и обновлениям\" в Руководстве по документации RuStore, рассказывает о процессах работы с платежами в приложениях (in-app) и подписками. Оно покрывает такие темы, как список продуктов, покупка товаров, обработка ошибок, и обновление версий. В статье также представлены полезные советы и ответы на часто задаваемые вопросы для обеспечения эффективных платежей."
  },
  {
    "shortName": "/sdk_payments_unity_2-2-1.txt",
    "summary": "Эта статья представляет собой руководство пользователя для интеграции платежей в приложение с использованием сервиса RuStore. Основные разделы статьи включают описание базового функционала RuStore, инструкции по настройке и подключению SDK на различных платформах, а также детальные панели для различных функций, включая инициализацию, получение списка продуктов и покупок, проверку доступности платежей, подтверждение и отмену покупок, обработку ошибок и сценарии работы с платежами. Статья написана на двух языках - русском и английском."
  },
  {
    "shortName": "/developers_monetization_payment-callback_enable-notifications#testing.txt",
    "summary": "Статья \"Включение отправки уведомлений\" в ruStore SDK,focuses on the steps of enabling notification sending for payment status changes in your application. It starts by outlining the prerequisite steps for server setup and ensuring your company is monetized, has purchasing capabilities in the app, and is not blocked. It then guides users through setting up notification sending in the ruStore console, including specifying the URL for the server to receive notifications and adding the decryption key. It also includes testing the server's ability to receive notifications and details on the response codes and errors that might be encountered. The article further explains how to enable the notification sending and highlights the status changes for payments that trigger these notifications. The 'What's next' section provides advice on testing the decryption of notification payloads, temporarily disabling notifications during server issues, updating the URL for receiving notifications, and regenerating the encryption key if lost or compromised."
  },
  {
    "shortName": "/sdk_rustore-geo_search-and-geocoding-services_search-places-of-interest.txt",
    "summary": "Статья посвящена сервису поиска мест интереса в платформе RuStore. В ней подробно описывается, как использовать методы для поиска и получения дополнительной информации о местах, их характеристиках и координатах. Также статья объясняет, как формировать запросы, какими параметрами можно управлять и что включает в себя ответ на запрос. Кроме того, в тексте подробно описаны поля и значения ответа на запрос."
  },
  {
    "shortName": "/work-with-rustore-api_api-authorization-process.txt",
    "summary": "Статья посвящена описанию процесса авторизации и принципов работы с API RuStore. В ней описываются шаги по генерации ключевой пары (открытый и закрытый ключи), получению JWE-токена с помощью метода POST на адрес /public/auth и использованию полученного токена для авторизации в API."
  },
  {
    "shortName": "/legal_privacy-policy-non-resident-developers.txt",
    "summary": "Статья \"RuStore Privacy Policy for Non-resident Developers\" определяет политику конфиденциальности для не-резидентных разработчиков, использующих сервис RuStore. В ней описывается, как компания VK LLC собирает и использует информацию, предоставленную пользователями, включая личную информацию. Важно учесть, что Политика конфиденциальности применима только к не-резидентам, и не применяется к пользователям из стран Европейского Союза. \n\nСервис собирает и обрабатывает данные, включая имя, адрес электронной почты, мобильный номер и другие сведения, предоставляемые пользователями, с целью предоставления и улучшения сервиса. Также упоминается необходимость соблюдения правил конфиденциальности при использовании социальных сетей и аккаунтов. \n\nСбор и обработка данных осуществляются для выполнения обязательств по Соглашению о распространении программного обеспечения и в соответствии с действующим законодательством. Все данные хранятся на территории России на электронных носителях и обрабатываются с использованием автоматизированных систем.\n\nПолитика безопасности включает в себя технические, организационные и юридические меры для защиты личной информации от несанкционированного доступа и утечки. \n\nВ конце статьи приводятся инструкции по обновлению и изменению Политики конфиденциальности, а также способы связи с поддержкой сервиса."
  },
  {
    "shortName": "/developers_tools_remote-config_sdk_react_1-0-0.txt",
    "summary": "Документация по SDK Remote Config от RuStore - облачного сервиса для изменения поведения и визуального вида приложения без необходимости обновления приложения. \n\nИзучение документации показывает, что SDK Remote Config инкапсулирует запрос конфигурации с сервера, кэширование и фоновое обновление. Он предлагает удобное API для получения данных. \n\nВключена информация о примере реализации и приложении-примере, который помогает правильно интегрировать SDK Remote Config. \n\nСоответствующие разделы описывают ключевые особенности, подключение в проект, инициализацию RemoteConfigClient, опциональные параметры RemoteConfigClientBuilder, различные значения UpdateBehaviour, RemoteConfigClientEventListener, процесс получения конфигурации, проверку доступности ключа, получение типизированных данных, фоновую синхронизацию конфигурации и возможные ошибки. \n\nВ конце статьи размещены ссылки на следующую и предыдущую страницы и пользовательское соглашение, а также политика конфиденциальности."
  },
  {
    "shortName": "/work-with-rustore-api_api-upload-publication-app_send-draft-app-for-moderation.txt",
    "summary": "Статья описывает метод отправки черновика версии приложения на модерацию в API RuStore. В ней также обсуждаются основные параметры взаимодействия, включая обязательные атрибуты (например, токен доступа, имя пакета приложения и идентификатор версии), а также возможные параметры приоритета обновления. Статья упоминает предусловия, включая проверку на отсутствие новых чувствительных и запрещённых разрешений в файле. Текст также перечисляет возможные коды ошибки и их значения, которые могут возникнуть при попытке отправки черновика версии."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_app-publication_.txt",
    "summary": "Статья описывает процесс публикации приложений в RuStore, включая подготовку и загрузку приложений, указание информации, связанной с приложением, и его проверку. Процесс начинается с регистрации в консоли RuStore, настройки приложения и добавления его на сайт. Текст документации подробно описывает, как загружать версии приложений в форматах APK и AAB, проверять требования к загружаемым файлам, управлять информацией о приложении, включая его характеристики, скриншоты и ссылки на видео. Также описывается процесс добавления новых разработчиков и создание черновиков версий приложения."
  },
  {
    "shortName": "/users_start_app-page.txt",
    "summary": "Статья \"Страница приложения в RuStore\" предоставляет полное руководство по работе с страницей приложения в магазине приложений RuStore. Освещаются такие темы, как просмотр иконки, названия, разработчика, возрастных ограничений, размера приложения, установки и обновления, а также интерактивные элементы, такие как категории, видео, скриншоты и отзывы. Статья также включает ссылки на другие руководства по использованию RuStore, такие как управление приложениями и политики магазина."
  },
  {
    "shortName": "/developers_tools_remote-config_ios-apps_add-ios-apps.txt",
    "summary": "Статья посвящена процессу добавления iOS приложений в сервис RuStore Remote Config. Процесс включает в себя создание имени приложения, выбор типа платформы (IOS), включение функции предварительной проверки и добавление приложения в систему. Помимо этого, статья объясняет, что при включении предварительной проверки, все эксперименты автоматически переходят в статус \"Pending\", ожидая тестирования вариантов, а подтверждение параметров становится обязательным. В конце статьи указаны дополнительные релевантные статьи для более глубокого понимания работы с сервисом."
  },
  {
    "shortName": "/developers_advertising-and-promotion_vk-marketing.txt",
    "summary": "Статья посвящена инструкции по использованию VK Рекламы для продвижения приложений в RuStore. В ней расписаны шаги по созданию рекламной кампании, включая подключение приложения и настройку интеграции с трекером. Кроме того, приводятся указания о том, как реклама отображается для пользователей в различных разделах RuStore и поисковой выдаче."
  },
  {
    "shortName": "/sdk_general-push-notifications.txt",
    "summary": "Статья \"Универсальные push-уведомления\" подробно описывает процесс работы с push-уведомлениями на платформе RuStore. Включает инструкции по публикации приложения, проверке возможности работы с уведомлениями, обработке событий и ошибок. Предназначена для разработчиков и технических специалистов."
  },
  {
    "shortName": "/work-with-rustore-api_api-access-control_revoke-access.txt",
    "summary": "Статья посвящена методу отзыва доступа в RuStore API, позволяющему отменить доступ пользователя к определенному приложению. В ней подробно описывается формат запроса, включая необходимые параметры и URL- адрес, а также возможные ответы API и ошибки. Структурированная информация делится на ключевые разделы: параметры взаимодействия, ответы API, возможные ошибки и пример запроса и ответа."
  },
  {
    "shortName": "/sdk_reviews-ratings_flutter_2-0-0.txt",
    "summary": "Документация по инструменту интеграции отзывов и оценки пользователей в приложение через SDK RuStore. Описывается процесс установки, настройки и функционирования плагина Flutter_rustore_review. Документация включает основные условия работы SDK, рекомендации по дизайну и обработке ошибок."
  },
  {
    "shortName": "/work-with-rustore-api_api-subscription-payment_api-token-substatus-method.txt",
    "summary": "Статья \"Получение статуса подписки\" изучаются API-методы в платформе RuStore, которые позволяют получить информацию о статусе подписки, используя токен подписки. Статья включает в себя информацию о параметрах взаимодействия и ответа, а также обсуждает валидацию запроса и предоставляет примеры успешного и ошибочного ответа API."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_app-publication_new-version-app.txt",
    "summary": "Эта статья, \"Обновление приложения в RuStore: полный гайд по загрузке и публикации новой версии\", представляет собой руководство по обновлению приложения в магазине RuStore. Оно включает шаги по загрузке и публикации новой версии приложения, настройки публикации, указания о ключах подписи APK-файлов, обновлении подписи в Google Play и предупреждения об ошибке обновления при нераспределяемых ключах подписи. Также оно упоминает об обработке файлов в формате ААВ, проверке приложения на соответствие требованиям и комиссию RuStore в платных приложениях."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_declare-app-permissions_.txt",
    "summary": "Статья \"Прозрачность и безопасность в RuStore - декларация разрешений\" описывает важность прозрачности и безопасности в приложениях, опубликованных в магазине RuStore. Система проверяет все запрашиваемые разрешения приложений и предоставляет информацию о типах пользовательских данных, собираемых и передаваемых приложениями. Декларация разрешений и информация об этих данных повышают прозрачность и помогают пользователям понять, как их данные обрабатываются."
  },
  {
    "shortName": "/users_authorization_.txt",
    "summary": "Справочная статья по использованию RuStore, охватывает процесс авторизации и установки приложений. Описывается, как авторизоваться через различные идентификаторы (VK ID, Сбер ID, Яндекс, Тинькофф ID, Госуслуги, Альфа Банк), а также что можно делать без авторизации и доверие к системе."
  },
  {
    "shortName": "/sdk_push-notifications_flutter_1-0-0.txt",
    "summary": "Статья посвящена документации по использованию SDK push-уведомлений от RuStore для Flutter. Основные разделы включают условия работы push-уведомлений, процесс подключения в проект, инициализацию сервиса push-уведомлений, настройки ProGuard, проверку возможности получения push-уведомлений, методы работы с push-токеном, методы работы с push-уведомлениями, структуру уведомления и создание канала для отправки уведомления. В статье также приведены примеры реализации и ссылки на дополнительные ресурсы по API и сегментам пользователей."
  },
  {
    "shortName": "/work-with-rustore-api_api-upload-publication-app_create-draft-version.txt",
    "summary": "Статья \"Создание черновика версии\" излагает процедуру создания черновика версии в API RuStore, включая его основные ограничения и параметры взаимодействия. Основная цель - позволить разработчикам создавать и обрабатывать черновые версии своих приложений, не отображая их в веб-версии консоли разработчика до момента модерации и публикации. Статья описывает требования и параметры для заполнения черновика, определения типа и ценности приложения, категории и возрастной категории, а также краткое, полное описание и описание \"Что нового\" в версии. Заключается в предоставлении примеров запросов и ответов, а также указания на возможность частичной публикации приложения в определенных случаях."
  },
  {
    "shortName": "/sdk_updates_flutter_history.txt",
    "summary": "Статья \"История обновлений\" включает в себя подробный список обновлений от SDK версии 6.0.0 до 0.0.1, включая внутренние обновления и внесение функционала обновлений в SDK 0.0.1. Обновления представлены в хронологическом порядке, начиная от последней версии до самой первой."
  },
  {
    "shortName": "/work-with-rustore-api_api-subscription-payment_api-id-payment-method-v3.txt",
    "summary": "Статья \"Получение данных подписки (V3)\" в русскоязычной документации RuStore API посвящена методу получения информации о подписках для приложений, использующих Rustore SDK. Она предлагает информацию о параметрах взаимодействия для получения данных о реальных и тестовых подписках, а также об атрибутах содержимого успешного ответа и ошибок. Статья включает в себя описание ключевых параметров, вводится концепция \"V3\", что указывает на версию метода. В статье также приведены примеры успешного ответа и ошибки."
  },
  {
    "shortName": "/users_app-management_vk-mini-apps.txt",
    "summary": "Статья посвящена описанию и инструкциям по работе с мини-приложениями VK в оболочке RuStore. Она объясняет, что мини-приложения - это веб-версии приложений VK, которые не требуют установки на устройство и можно запустить в интерфейсе VK. С помощью RuStore пользователи могут просматривать каталог мини-приложений, запускать их в приложении VK и добавлять ярлыки на главный экран устройства. Статья также содержит информацию о том, как установить ярлык мини-приложения с помощью вкладки «Мини» в RuStore и о плюсах использования мини-приложений."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_app-publication_app-publication-aurora_dev-certificate_.txt",
    "summary": "Статья описывает процесс получения и подачи заявки на сертификат разработчика для ОС Аврора в системе RuStore. Процесс включает открытие RuStore Консоли, переход на вкладку \"Компания\", выбор \"Сертификат для ОС Аврора\" и загрузку файла csr-запроса. Затем требуется указание электронной почты для связи и согласование с условиями. После отправки заявки, пользователю предстоит ожидание ответа по электронной почте."
  },
  {
    "shortName": "/sdk_updates_kotlin-java_2-0-0.txt",
    "summary": "Статья посвящена документации SDK обновлений для приложений RuStore. Обсуждаются основные функции и сценарии использования SDK, такие как отложенное, тихое и принудительное обновление приложений. Обращается внимание на условия работы SDK, процесс подключения в проект и создание менеджера обновлений. В статье также приводится информация о статусах обновлений и методах установки обновлений, а также обсуждаются возможные ошибки и их обработка."
  },
  {
    "shortName": "/users_app-management_app-review.txt",
    "summary": "Статья \"Как написать отзыв к приложению - Руководство по оценкам и отзывам в RuStore | Документация RuStore\" объясняет процесс создания отзывов и оценок в приложении RuStore. Идет разъяснение о том, как авторизоваться, оставлять отзывы и оценки к приложениям, как поставить оценку на уже написанные отзывы, как отсортировать отзывы, как изменить или удалить свои отзывы. Статья подходит для раздела \"Руководства по использованию\" или \"Особенности работы с функцией отзывов\" в оглавлении."
  },
  {
    "shortName": "/sdk_general-push-notifications_kotlin_2-2-0.txt",
    "summary": "Эта статья о документации по использованию SDK универсальных push-уведомлений от RusStore для разработчиков на языке Kotlin. Статья содержит подробное руководство по интеграции SDK в проект, настройке и работе с различными провайдерами push-уведомлений (RuStore, Firebase Cloud Messaging, Huawei Mobile Services), а также описание методов взаимодействия с push-токенами и уведомлениями. Кроме того, в ней приведены примеры реализации, настройки и код для работы с различными провайдерами и инструкция по обработке событий и ошибок."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_paid-app_.txt",
    "summary": "Статья \"Монетизация в RuStore - платные приложения и управление ценами\" в документации RuStore, посвящена процессу монетизации при помощи платных приложений и управлению ценами в системе RuStore. В ней описаны шаги добавления нового платного приложения, выбор типа приложения (универсальный или только для ТВ), изменение и обновление цены приложения. Также представлены инструкции по настройке цены на товары и подписки в приложении, и информация о том, что комиссия RuStore составляет 15% от дохода разработчика. Статья включена в раздел \"Руководство по платным приложениям в RuStore\"."
  },
  {
    "shortName": "/users_purchases-and-returns_foreign-apps.txt",
    "summary": "Статья \"Безопасная оплата в иностранных приложениях через RuStore - Инструкции и советы\" излагает процесс безопасной покупки в иностранных приложениях с использованием платформы RuStore. Основными моментами в статье являются: установка и использование приложения AppCoins Wallet, оплата покупок через VK Pay, управление банковскими картами и возврат средств за покупки. В статье приводятся шаги по использованию этих функций и полезные советы по устранению возникающих проблем, а также представлены ссылки на юридические документы."
  },
  {
    "shortName": "/developers_tools_remote-config_sdk_kotlin_6-0-0.txt",
    "summary": "Эта статья описывает SDK для приложений от RuStore, с акцентом на сервис Remote Config. Сервис Remote Config - это облачное решение для динамического изменения поведения и визуального вида приложения без необходимости обновлять его. Сервис включает в себя инструменты для кэширования и асинхронного обновления, а также удобный API для получения данных, с возможностью получения актуальных подключений.\n\nСтатья также включает информацию о подключении SDK к проекту, инициализации `RemoteConfigClient`, опциональных параметрах для конфигурации, разрешающих различные виды обновления и передачу дополнительной информации, а также о `RemoteConfigClientEventListener` для слежения за состоянием SDK. \n\nБудучи нацелена на разработчиков, статья также включает информацию о возможных ошибках и обработке ошибок. Использование SDK Remote Config включает в себя создание экземпляра `RemoteConfigClient` и получение конфигурации, которая может быть проверена на наличие определённых ключей и может быть приведена к определённым типам данных. \n\nСтруктурированная информация в статье обеспечивает четкое понимание инструментов и процессов, необходимых для эффективного использования SDK Remote Config."
  },
  {
    "shortName": "/sdk_general-push-notifications_kotlin_2-1-0.txt",
    "summary": "Эта статья описывает документацию для SDK универсальных push-уведомлений от RuStore, версии 2.1.0. Статья содержит инструкции по интеграции SDK в проекты, использующие различные провайдеры push уведомлений (RuStore, Firebase Cloud Messaging и Huawei Mobile Services), а также по работе с SDK после его подключения. В статье подробно описаны шаги по подключению SDK к проекту, настройке push-уведомлений для каждого провайдера, инициализации, проверки работоспособности провайдеров, а также методы работы с push-токенами и push-топиками. Статья также содержит примеры реализации и ссылки на другие страницы документации."
  },
  {
    "shortName": "/sdk_.txt",
    "summary": "Статья \"Список доступных SDK для разработчиков\" включает в себя подробный список поддерживаемых разработчиками SDK, включая Kotlin, Java, Unity, Godot, React Native и другие. Статья также описывает различные функции и возможности каждого SDK, такие как платежи in-app и подписки, push-уведомления, подключение отзывов и оценок, обновление приложений, карты и геосервисы, и Install Referrer. В целом, целью статьи является предоставить разработчикам подробную информацию о том, какие инструменты доступны для интеграции в их приложения, и как это можно реализовать."
  },
  {
    "shortName": "/developers_advertising-and-promotion_vk-link.txt",
    "summary": "Статья посвящена инструкции по настройке ссылки на приложение из RuStore в группе ВКонтакте. Она описывает шаги по изменению настроек кнопки \"Действия\" в сообществе ВК для удобной загрузки приложений через RuStore. Основные ключевые мысли связаны с переходом к управлению сообществом, внесением изменений в настройки кнопки действия, выбором типа действия \"Открыть мобильное приложение\", вставкой ссылки на приложение из RuStore и сохранением настроек."
  },
  {
    "shortName": "/sdk_payments_defold_5-1-1.txt",
    "summary": "Статья описывает интеграцию платежной системы RuStore в мобильные приложения различных платформ (Kotlin/Java, Unity, Godot, React Native, Flutter, Unreal Engine, Defold) и предоставляет подробную инструкцию по этому процессу с использованием SDK и API. \n\nВ статье описаны принципы работы платежей, их основные условия и требования, а также шаги по подключению в проект и инициализации SDK. Представлены сценарии использования SDK, включая взаимодействие с платежами, обработку deeplink, работу с API и обработку ошибок. \n\nСтруктура документа включает различные разделы и сценарии, такие как подключение в проект, обработка deeplink, инициализация, проверка доступности работы с платежами, работа с SDK, покупка продуктов, получение списка покупок, подтверждение покупок и другие. \n\nОсобое внимание уделено документации для разработчиков, включающей примеры кода и сценарии. \n\nСтатья подходит для оглавления раздела \"Интеграция платежной системы RuStore в мобильные приложения\", подраздела \"SDK и API интеграция\"."
  },
  {
    "shortName": "/developers_tools_remote-config_privacy-policy.txt",
    "summary": "Статья \"Политика конфиденциальности сервиса RuStore Remote Config\" описывает правила обработки и защиты персональной информации пользователей и представителей компаний, использующих сервис RuStore Remote Config. Политика включает следующие ключевые мысли:\n\n1. Объяснение политики конфиденциальности и ее место в общем наборе бизнес-правил (Лицензионное соглашение) компании, использующей сервис. \n\n2. Указание на обязательное принятие Политики и условия Лицензионного соглашения для использования сервиса.\n\n3. Определение сферы действия Политики, включая сбор и использование персональных данных в процессе использования Сервиса.\n\n4. Раскрытие состава обрабатываемой персональной информации, включая учетные данные, не персональные данные и технические данные.\n\n5. Указание на сохранение конфиденциальности и безопасность данных, а также на соблюдение законодательства о персональных данных.\n\n6. Определение прав и обязанностей пользователей в отношении их персональных данных.\n\n7. Указание на обеспечение мер по защите персональной информации и ответственность пользователей за сохранность своих учетных данных.\n\n8. Применение данной Политики не остановится даже в случае прекращения действия Лицензионного соглашения компании с сервисом.\n\nТаким образом, данная статья, наряду с прочими документами, составляет важную часть в обеспечении конфиденциальности и безопасности персональных данных пользователей сервиса RuStore Remote Config."
  },
  {
    "shortName": "/sdk_payments_kotlin-java_history.txt",
    "summary": "Статья \"История обновлений\" содержит информацию о всех версиях SDK (Software Development Kit) RuStore, включая подробное описание внесенных изменений и исправлений с каждой обновлением. Это позволяет пользователям и разработчикам отслеживать историю изменений и понимать, какие функциональные или технические улучшения были внесены в SDK с момента его первого релиза до последнего обновления."
  },
  {
    "shortName": "/sdk_rustore-geo_map-display-services_static-map_main.txt",
    "summary": "Эта статья является частью документации по использованию сервиса \"Рисование статичных карт\" от сервиса RuStore. Основной функционал сервиса - это получение изображения карты с определенными параметрами на основе запроса пользователя. \n\nВ статье подробно описаны действия и параметры, необходимые для выполнения запроса. Это включает в себя обязательные параметры, такие как api_key для аутентификации, latlon для указания геометрического центра требуемого изображения, а также дополнительные параметры, такие как zoom, width, height, style и другие, которые позволяют адаптировать изображение по желанию пользователя. \n\nСтруктурированная информация включает в себя обе части запроса: GET и POST, с подробными примерами для каждого. В конце статьи представлены примеры запросов и ответов, дабы упростить понимание реализации сервиса.\n\nСледовательно, этот раздел документации может быть отнесен к разделу \"API RuStore SDK\" или \"Сервисы поиска и геокодирования\", в зависимости от его цели и контекста использования - предоставление инструкций для разработчиков по использованию API для рисования карт или предоставление инструкций для пользователей по получению статичных карт с использованием определенных параметров."
  },
  {
    "shortName": "/sdk_payments_kotlin-java_migration_3-2-0-migration.txt",
    "summary": "Статья \"RuStore SDK 3.2.0 - Обновление платежей и миграция SDK для Kotlin и Java\" описывает обновление версии платежей в SDK RuStore до версии 3.2.0, включая миграцию для Kotlin и Java. Статья включает подробное руководство по миграции, обновление зависимости в файле build.gradle, изменения в моделях результата покупки и получения списка продуктов, обновление моделей результата потребления и отмены покупки. Описаны ключевые сценарии использования и изменения в логике процесса подтверждения и отмены покупки."
  },
  {
    "shortName": "/developers_monetization_payment-callback_update-key.txt",
    "summary": "Статья \"Обновление ключа шифрования\" излагает инструкции по процессу изменения ключа шифрования в случае его потери или компрометации. Процесс включает в себя переадресацию в \"RuStore Консоль\", отключение отправки уведомлений, обновление ключа шифрования, внесение нового ключа в механизм симметричного шифрования на сервере и включение подновленной функции отправки уведомлений."
  },
  {
    "shortName": "/guides_payments.txt",
    "summary": "Статья \"Работа с платежами в RuStore\" описывает процесс монетизации приложений через платные покупки в RuStore. Основные методы монетизации включают продажу приложений, добавление платных товаров и подписок, и создание непотребляемых товаров. Статья также объясняет, как начать работу с платежами, зарегистрировав заявление на подключение монетизации и создав платные приложения или продукты через систему RuStore Консоль. Далее описывается интеграция SDK для встраивания платежей в приложение, получение уведомлений о платежах на сервер, использование API для управления платежами и тестирование платежей. В конце статьи приведены инструкции по управлению платежами в системе RuStore Консоль."
  },
  {
    "shortName": "/sdk_rustore-geo_general_access-services.txt",
    "summary": "Статья \"Доступ к сервисам\" излагает инструкции по получению и использованию ключа доступа для сервисов RuStore Geo. Ключ доступа необходим для обращения к геосервисам и отслеживания запросов. Например, ключ доступа вставляется в URL запроса в формате `https://geo.rustore.ru/api/[endpoint]?[api_key]&[query]`. Процесс регистрации и получения ключа описан подробно. Важно отметить автоматическое продление ключа при обновлении приложения и ограниченный срок действия ключа (90 дней), который регулируется пользовательским соглашением. В случае проблем с получением ключа, рекомендуется обратиться в службу поддержки."
  },
  {
    "shortName": "/developers_tools_remote-config_sdk_defold_1-1-0.txt",
    "summary": "Эта статья посвящена документации SDK и конфигурации приложений для сервиса RuStore Remote Config, предназначенного для изменения поведения и внешнего вида приложений без необходимости в обновлении приложений самими пользователями. Статья подробно описывает возможные методы подключения SDK в проект, ключевые особенности сервиса, подробное руководство по инициализации, различные параметры и настройки, а также поддержку Lua. В статье также освещены темы динамической передачи параметров, обратных вызовов о работе SDK, получение конфигурации и возможные ошибки."
  },
  {
    "shortName": "/developers_monetization_sandbox_test-bank-cards#%D0%BA%D0%B0%D1%80%D1%82%D0%B0-%D1%81-%D0%B1%D0%B0%D0%BB%D0%B0%D0%BD%D1%81%D0%BE%D0%BC-1-%D0%BA%D0%BE%D0%BF%D0%B5%D0%B9%D0%BA%D0%B0.txt",
    "summary": "Статья описывает функцию тестовых банковских карт в сервисе RuStore, предназначенную для проверки платежей. Представлены различные типы карт с разными результатами оплаты: всегда успешная оплата, возвращающие ошибки и карта с балансом в 1 копейку. Целью функции служит обеспечение стабильности и безопасности процесса оплаты в сервисе."
  },
  {
    "shortName": "/developers_tools_remote-config_sdk_godot_1-0-0.txt",
    "summary": "Статья описывает функции и использование облачного сервиса SDK Remote Config от RuStore для модификации поведения и внешнего вида приложений без необходимости обновления приложения. В ней подробно описаны такие ключевые аспекты как:\n\n1. **Основные характеристики** - сервис позволяет изменять конфигурацию приложения в реальном времени.\n\n2. **Способы подключения** - для интеграции сервиса в проект, предоставляются подробное руководство и примеры для различных версий Godot Engine, Flutter, React Native и Unreal.\n\n3. **Инициализация SDK** - описывается процесс инициализации библиотеки в приложении. Представлены примеры кода на Java и GDScript.\n\n4. **UpdateBehaviour** - описываются различные варианты поведения SDK при обновлении конфигурации.\n\n5. **Опциональные параметры инициализации** - объясняется, как изменять параметры инициализации SDK, например, использовать определённые параметры устройства и пользователя.\n\n6. **Получение конфигурации** - описывается как получить конфигурацию на основе текущих параметров и запросов.\n\n7. **Возможные ошибки** - перечислены возможные ошибки, которые могут возникнуть при использовании SDK и как с ними обращаться.\n\n8. **Содержание этой страницы** - перечень разделов и сущностей SDK Remote Config, который позволяет найти нужную информацию быстрее.\n\nЭта статья идеально подходит для раздела \"Управление и настройка SDK\" в оглавлении руководства пользователя или справочника по разработке приложений для RuStore."
  },
  {
    "shortName": "/users_purchases-and-returns.txt",
    "summary": "Статья \"Управление финансами в мобильном мире - Покупки, возвраты, карты и оплата\" анализирует различные аспекты финансового управления в контексте мобильных приложений. Она охватывает процессы покупок и возвратов, привязку банковских карт, подключение карт VK ID и Сбер ID, настройку способов оплаты, управление платными приложениями и подписками, историю платежей, оплату покупок в инострang приложениях, а также покупки без установки RuStore."
  },
  {
    "shortName": "/users_app-management_update-app-from-rustore.txt",
    "summary": "Эта статья представляет собой инструкцию для пользователей RuStore, обучающую процессу обновления приложений в магазине. Она описывает различные этапы обновления приложений, включая доступ к обновлениям в разделе \"Моё\", выбор приложения из списка и нажатие \"Обновить\". Статья также включает сведения о возможном сбое обновления и ссылки на другие разделы документации."
  },
  {
    "shortName": "/developers_monetization_payment-callback_enable-notifications.txt",
    "summary": "Статья описывает процесс активации и настройки функции отправки уведомлений в приложении с использованием сервиса RuStore. Процесс включает в себя настройку сервера для приёма уведомлений, подключение и тестирование отправки уведомлений, а также включение активации функции. В статье подробно описаны шаги, необходимые для настройки отправки уведомлений, включая выбор URL-адреса для сервера, указание ключа шифрования и тестирование конфигурации сервера. Также уточняются ситуации, в которых уведомления отправляются и что делать при проблемах в работе уведомлений. В конце описывается, что делать после активации функции и описывается процедура для временного отключения отсылки уведомлений, изменения адреса сервера и получения нового ключа шифрования."
  },
  {
    "shortName": "/sdk_general-push-notifications_push-notifications-topics_examples.txt",
    "summary": "Эта статья из Documentacion RuStore описывает API для отправки универсальных push-уведомлений по топикам. В ней представлены примеры успешной отправки уведомления, невалидного провайдера, невалидного сообщения и ошибки провайдера. Ключевые мысли включают подключение к разным провайдерам (rustore и fcm), формирование сообщения с заголовком и телом, и отправку запроса POST."
  },
  {
    "shortName": "/developers_advertising-and-promotion_events.txt",
    "summary": "Статья \"Подача заявок на события в RuStore Консоль - Как оптимизировать продвижение приложения\" подробно описывает процесс создания и подачи заявок на различные события в пользовательском интерфейсе RuStore Консоль для продвижения приложений. Основные разделы включают шаги по созданию заявки (включая настройку настройки типа события, даты начала и окончания, краткого и развёрнутого описания, обложки и других параметров), а также процесс просмотра уже созданных заявок. Статья также подчеркивает важность правильного использования deeplinks и предоставляет рекомендации по настройке параметров для оптимизации продвижения. В конце статьи приводится информация о том, как получить обратную связь и что ожидать после подачи заявки."
  },
  {
    "shortName": "/users_policies_protect-device.txt",
    "summary": "Статья \"Советы по безопасности - Как защитить свое устройство от вирусов и мошенничества\" описывает основные меры для защиты мобильного устройства от вирусов и мошеннических действий. В ней предлагается не только установка приложений только из надежных источников, но и регулярное обновление операционной системы, использование сложных паролей, отсутствие перехода по ненадежным ссылкам, отказ от установки программ по просьбе незнакомцев и использование двухфакторной аутентификации. Эта статья может быть расположена в разделе \"Рекомендации по безопасности\" или \"Пользовательская документация\"."
  },
  {
    "shortName": "/users_authorization_how-to-get-out.txt",
    "summary": "Статья посвящена инструкции по выходу из аккаунта в сервисе RuStore. Процесс описан через простые шаги: открытие домашнего экрана устройства, переход в нижнее меню, выбор имени аккаунта и последующее нажатие на \"Выйти из аккаунта\". Данный процесс подразумевает завершение сеанса пользователя в сервисе."
  },
  {
    "shortName": "/developers_developer-account_registration-developer.txt",
    "summary": "Эта статья описывает процесс регистрации разработчиков в системе RuStore Консоль, а также различия между регистрацией юридических лиц и физических лиц. Регистрация юридических лиц и индивидуальных предпринимателей подразумевает использование квалифицированной электронной подписи, а физических лиц - прохождение удаленной верификации личности."
  },
  {
    "shortName": "/work-with-rustore-api_api-upload-publication-app_apk-screens-upload.txt",
    "summary": "Эта статья из документации RuStore API обсуждает процесс загрузки скриншотов приложений с помощью API. Она обстоятельно описывает ограничения для загружаемых скриншотов (состав и размер), а также определяет параметры взаимодействия API, включая методы запросов и ответов. Статья включает в себя пример запроса к API для загрузки скриншотов."
  },
  {
    "shortName": "/sdk_updates_kotlin-java_1-0-1.txt",
    "summary": "Статья описывает функционал и инструкции по интеграции и использованию RuStore In-app updates SDK для обновления приложений на устройствах с операционной системой Android, включая поддержку отложенного, тихого и принудительного обновлений. Текст подробно раскрывает основные сведения о SDK, условия его корректной работы, процесс подключения к проекту, создание менеджера обновлений, проверку наличия обновлений, а также процедуры скачивания и установки обновлений. Кроме того, приводятся примеры сценариев использования и указываются возможные ошибки и их коды."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_app-publication_setting-up-publication_delayed-publication.txt",
    "summary": "Статья посвящена процессу отложенной публикации версий приложений в RuStore. Описывается, как использовать функции управления отложенной публикации при загрузке новой версии приложения, изменении настроек и управлении публикацией приложения во время и после модерации. В статье также представлено описание условий и возможностей изменения настроек отложенной публикации."
  },
  {
    "shortName": "/users_authorization.txt",
    "summary": "Суммари: \n\nСтатья описывает процесс авторизации и установки приложений в RuStore. Она включает в себя подробные инструкции по входу через различные идентификаторы (VK ID, Сбер ID, Яндекс, Тинькофф ID, Госуслуги, Альфа Банк), обсуждает возможности использования без авторизации и подчеркивает важность безопасности."
  },
  {
    "shortName": "/developers_monetization_sandbox_testing.txt",
    "summary": "Статья \"Тестирование платежей в RuStore Консоль\" описывает процесс тестирования платежей в среде RuStore Консоль. В ней излагаются шаги по включению и отключению тестового режима, уведомления на сервер, использование тестовых банковских карт, а также представлена информация о проверке прохождения тестируемых платежей в приложении. Кроме того, в статье рассказывается о методах серверной валидации тестовых платежей и подписок через API-запросы. Статья содержит рекомендации по обработке проблем с тестированием и указывает на возможности просмотра истории тестовых платежей в RuStore Консоль."
  },
  {
    "shortName": "/users_start_notification.txt",
    "summary": "Статья \"Уведомления в RuStore: Разрешение обновлений приложений\" определяет процесс настройки уведомлений об обновлениях приложений в системе RuStore. Основные ключевые мысли включают: возможность настроить получение уведомлений об обновлениях приложений сразу после входа в аккаунт RuStore, открытие приложения, поиск опции \"Разрешить\" на главном экране и нажатие на нее для активации уведомлений."
  },
  {
    "shortName": "/developers_tools_app-tracer_android_additional-features_add-info.txt",
    "summary": "Статья посвящена описанию функции HasTracerSystemInfo в SDK Tracer от ruStore. Функция используется для добавления дополнительной информации к событиям, таким как сбои и ANR, и позволяет включить в них данные о приложении, пользователе и вспомогательную информацию. Также обсуждается возможность добавления пользовательских логов с помощью метода TracerCrashReport.log."
  },
  {
    "shortName": "/developers_monetization_sandbox_.txt",
    "summary": "Статья \"Тестовые платежи в RuStore - инструкции и возможности\" посвящена процессу тестирования платежей в мобильном приложении RuStore. Основные ключевые мысли включают руководство по включению тестового режима, способность тестировать сценарии оплаты покупок в приложении, возможность просмотра истории тестовых платежей, а также технические особенности и ограничения тестирования. Подробности включают возможность тестирования до публикации приложения, возможность многократно тестировать нерасходуемые товары, и специальные параметры для тестирования подписок."
  },
  {
    "shortName": "/developers_monetization_create-app-subscription_.txt",
    "summary": "Статья посвящена инструкции по созданию подписки в системе RuStore. В ней подробно описываются шаги по созданию подписки в Консоли RuStore, включая выбор и настройку пользовательской и технической информации. Также даны разъяснения по настройке бесплатного периода, стартового периода, грэйс-периода и холд-периода, а также информации о повторных попытках списания средств и их последствиях. В конце статьи есть раздел «Дополнительные настройки» и ссылки на другие страницы документации."
  },
  {
    "shortName": "/sdk_general-push-notifications_push-notifications-topics_api.txt",
    "summary": "Статья описывает API для отправки универсальных push-уведомлений через несколько push-провайдеров одновременно, включая RuStore, FCM и HMS. Она подробно описывает формат и содержимое запросов для отправки push-уведомлений, а также структуру тела ответа и возможные ошибки. Важными моментами являются указание ID проекта и авторизационного токена для каждого провайдера, а также описание структуры запроса и ответа. Статья также включает информацию об ограничениях и валидации запросов."
  },
  {
    "shortName": "/work-with-rustore-api_api-upload-publication-app_publishing-change-settings.txt",
    "summary": "Статья \"Изменение настроек публикации\" в документации RuStore API посвящена методам изменения параметров публикации приложений. Основные темы статьи включают изменение типа публикации, даты отложенной публикации и процента для частичной публикации версии приложения. Статья подробно описывает параметры взаимодействия и ответа, а также демонстрирует примеры запроса и ответа для изменения % частичной публикации. Статья подходит для раздела \"Изменение настроек публикации\" в оглавлении документации RuStore API."
  },
  {
    "shortName": "/work-with-rustore-api_api-feedback-process.txt",
    "summary": "Статья посвящена работе с отзывами приложений через API RuStore. Описывается общий процесс обработки отзывов - от их получения до ответа на них. Включены методы получения отзывов в различных форматах, оставления ответов, обновления и удаления ответов, а также получение рейтинга приложения."
  },
  {
    "shortName": "/users_authorization_login-sber-id.txt",
    "summary": "Суммари: \nСтатья предоставляет подробную инструкцию по входу в RuStore с помощью Сбер ID и добавлению карт. В статье описываются шаги по авторизации с помощью приложения Сбербанка и разрешению привязки карт из Сбер ID к профилю RuStore. В конце статьи приведен способ редактирования данных карт и перенаправление к следующей статье о другом методе входа через Яндекс."
  },
  {
    "shortName": "/work-with-rustore-api_api-upload-publication-app_app-category-list.txt",
    "summary": "Список содержит разделы документации RuStore, включающей информацию для пользователей и разработчиков. Основные ключевые мысли включают: методы авторизации и работы с API RuStore для загрузки и публикации приложений, обновления версий, обработки отзывов и управления категориями приложений. Документация также охватывает разные категории приложений, такие как бизнес-сервисы, игры, образование и другие, с возможностью выбора типа версии приложения."
  },
  {
    "shortName": "/sdk_rustore-geo_map-display-services_interactive-map_options#animationoptions-%D0%B3%D1%80%D1%83%D0%BF%D0%BF%D0%B0-%D0%BF%D0%B0%D1%80%D0%B0%D0%BC%D0%B5%D1%82%D1%80%D0%BE%D0%B2.txt",
    "summary": "Эта статья является частью документации для RuStore SDK, обучающей разработчиков использованию различных свойств и функций платформы. Основной контент статьи сосредоточен на описании различных объектов и функций, касающихся карт и геосервисов, включая accessToken, baseApiUrl, workerCount, maxParallelImageRequests и другие. Кроме того, статья включает в себя информацию о различных параметрах и методах, таких как AnimationOptions, CameraOptions и PaddingOptions, а также об объектах RequestParameters и StyleImageInterface, которые важны для настройки и визуализации данных на картах. Помимо этого, статья обсуждает спецификации для разработчиков, такие как CustomLayerInterface и методы prewarm и clearPrewarmedResources для управления ресурсами."
  },
  {
    "shortName": "/developers_developer-account_registration-developer_foreign-company-developer-account.txt",
    "summary": "Статья \"Регистрация иностранной компании в RuStore Консоли - подробная инструкция\" пошагово описывает процесс регистрации иностранной компании в системе RuStore. Обеспечивает инструкции для создания аккаунта, включая выбор типа организации, ввод VK ID, заполнение полей профиля (торговое, юридическое названия, контактное лицо), прикрепление необходимых документов и отправку заявки на модерацию. Статья также подчеркивает важность правильного указания информации и соответствия документов требованиям RuStore."
  },
  {
    "shortName": "/sdk_rustore-geo_map-display-services_main.txt",
    "summary": "Статья \"Сервисы отображения карт\" изложена в рамках документации RuStore, описывает возможности интеграции интерактивных и статичных карт в продукты с помощью картографических сервисов от RuStore. Содержит различия и характеристики интерактивной и статичной карт, а также стили карт и маршрутизации. Описана процедура вызова сервисов через точку вызова и перечислены дополнительные сервисы."
  },
  {
    "shortName": "/users_policies_installation-from-an-unknown-source.txt",
    "summary": "Статья обсуждает безопасность установки приложений из неизвестных источников, в данном случае RuStore, и важность разрешения установки из неизвестного источника для доступа к приложениям на официальном сайте RuStore. Освещены причины разрешения работы RuStore в фоновом режиме и ответы на вопрос о модерации отзывов."
  },
  {
    "shortName": "/developers_monetization_monetization-self-employed.txt",
    "summary": "Содержание статьи описывает процесс подключения и настройки монетизации для самозанятых на платформе RuStore. Оно включает в себя пошаговую инструкцию по подключению \"VK Pay для самозанятых\", добавлению карты для выплат и настройку разрешений доступа через приложение \"Госуслуги\". Материал также обсуждает порядок выплат, их условия и последствия несвоевременных выплат. Статья предназначена для разработчиков и пользователей, желающих включить монетизацию в приложениях на платформе RuStore."
  },
  {
    "shortName": "/sdk_push-notifications_defold_2-3-0.txt",
    "summary": "Эта статья описывает процесс интеграции и использования SDK push-уведомлений в проекте на платформе Defold от системы управления приложениями RuStore. Она содержит информацию о технических требованиях для корректной работы SDK, включая версии приложения и системные настройки. В статье подробно описывается процесс подключения SDK, установки пакета, редактирования манифеста приложения, а также получение и обработка push-уведомлений. Статья также включает информацию об обновлениях и дополнительных функциях SDK, а также указывает на документацию для более подробного изучения."
  },
  {
    "shortName": "/sdk_rustore-geo_search-and-geocoding-services_adress-and-places-of-interest-prompter.txt",
    "summary": "Статья portrays документацию по сервису \"Подсказчик адреса и мест интереса\" в приложении RuStore. Сервис предлагает подсказки для автозаполнения адреса и названий мест при вводе в строку поиска. Документация описывает API-интерфейс сервиса, включая обязательные и дополнительные параметры запроса и ответа. Запрос может содержать такие параметры, как api_key, q, fields, types, lang, location, radius и admin_level. Ответ возвращается в формате JSON и содержит детальную информацию о найденном объекте и его типе. Документация также включает примеры запросов и ответов."
  },
  {
    "shortName": "/sdk_reviews-ratings_flutter_2-0-1.txt",
    "summary": "Статья \"Общие сведения о RuStore In-app Review SDK\" описывает функционал пакета SDK, разработанного для сбора отзывов и оценок пользователей в приложении внутри RuStore. Структурированная информация включает в себя общие сведения, примеры реализации, условия корректной работы, моменты, когда можно запрашивать оценку и отзыв, рекомендации по дизайну, инструкции по подключению пакета к проекту, работу с оценками, обработку возможных ошибок и примеры кода."
  },
  {
    "shortName": "/developers_monetization_payment-callback_notification.txt",
    "summary": "Статья описывает структуру уведомлений для API RuStore, включая уведомления о изменении статуса платежей и тестовые уведомления. Документация включает в себя подробное описание каждого атрибута, включая его тип, обязательность, расположение и примеры значений. Атрибуты уведомления включают ID уведомления, время отправки, строку данных в Base64, а также информацию о типе уведомления и параметры, специфичные для каждого типа уведомления, например, ID приложения, статус платежа и другие детали. Документация также включает примеры запросов и ответов в формате JSON."
  },
  {
    "shortName": "/sdk_reviews-ratings_kotlin-java_history.txt",
    "summary": "Статья представляет историю обновлений для продуктов RuStore, включая SDK и API. Она подробно описывает каждое обновление, начиная от внутренних улучшений до исправления уязвимостей и внесения изменений в методы и классы. Ключевые мысли включают улучшенную совместимость, исправление ошибок, внедрение функциональности и улучшение структуры кода. Статья может быть отнесена к разделу \"История обновлений\" в оглавлении."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_collect-har-logs_.txt",
    "summary": "Сбор HAR-логов в RuStore: практическое руководство и сетевая диагностика. Статья описывает, как собирать HTTP-архивы (HAR-логи), которые содержат записи обо всех сетевых запросах и ответах при загрузке веб-страницы, и их применение для диагностики проблем загрузки, выявления ресурсов с медленной скоростью загрузки, сетевых ошибок, мониторинга производительности и оптимизации веб-сайта."
  },
  {
    "shortName": "/developers_tools_remote-config_sdk_unreal_1-0-0.txt",
    "summary": "Статья \"SDK Remote Config для Unreal Engine (версия 1.0.0)\" описывает облачный сервис RuStore SDK Remote Config, который позволяет изменять поведение и внешний вид приложений без необходимости для пользователей в обновлении приложения. Обсуждаются ключевые особенности сервиса, инструкции по подключению и настройке SDK в проекте Unreal Engine, а также методы работы с конфигурацией, включая инициализацию, получение конфигурации и обработку событий. В статье также упоминаются разные варианты обновления конфигурации, указание на процент распространения конфигурации и возможность передачи дополнительной информации. Структура статьи включает разные подразделы, охватывающие все аспекты использования SDK Remote Config для Unreal Engine."
  },
  {
    "shortName": "/users_start_interface.txt",
    "summary": "Статья знакомит с интерфейсом RuStore, мобильным приложением. Описывается структура приложения и его основные разделы: \"Интересное\", \"Приложения\", \"Игры\" и \"Моё\". В разделе \"Моё\" освещается управление профилем пользователя, доступ к обновлениям приложений и информация о приложении RuStore. Завершается обзор функцией управления уведомлениями в приложении."
  },
  {
    "shortName": "/users_authorization_login-tinkoff-id.txt",
    "summary": "Статья об описании процесса авторизации в сервисе RuStore через Тинькофф ID. Процесс представлен пошагово с подробными инструкциями."
  },
  {
    "shortName": "/sdk_push-notifications_ads-push-notification.txt",
    "summary": "Статья в RuStore документации обсуждает новую функцию монетизации при помощи рекламных пуш-уведомлений. Суть в том, что разработчики могут включить рекламу в свои пуш-уведомления, что приводит к дополнительному доходу. Для реализации этой функции необходимо интегрировать SDK и настроить рассылку. Инструкция включает шаги по интеграции SDK, расположению библиотек, инициализации SDK, а также настройку рекламной рассылки через API. В конце статьи указаны необходимые ссылки на консоль приложения и API для настройки рассылки."
  },
  {
    "shortName": "/sdk_rustore-geo_general_terms.txt",
    "summary": "Статья \"Условия использования\" регулирует использование ресурса RuStore Geo от ООО \"ВК\". Основные моменты включают: доступ к функционалу базы данных \"OpenStreetMap\" при определенных условиях; предоставление доступа к программному обеспечению от Компании на условиях использования; гарантии доступности и функционирования сервиса; ответственность за недоступность сервиса в определенных случаях; ограничения использования контента от Компании; право Компании на техническую поддержку и изменение условий; информация о соблюдении авторских прав и иных видов интеллектуальной собственности; ограничения использования функционала для обеспечения безопасности и защиты от нежелательного контента; отсутствие гарантий от Компании в отношении сервиса и его функциональности; ответственность Разработчика за нарушение условий и законодательства при использовании функционала сервиса; правила использования контента в рамках функционала сервиса, включая запрет на определенные действия и нарушения; обязанности Разработчика по отображению атрибуции и уведомлений об авторских правах; право Компании на изменение условий и ответственность Разработчика за самостоятельную проверку изменений; и возможность обращения по вопросам с поддержкой."
  },
  {
    "shortName": "/work-with-rustore-api_api-upload-publication-app_apk-file-upload_file-upload-apk.txt",
    "summary": "Статья посвящена методу загрузки APK-файлов в API RuStore. Разделена на следующие ключевые пункты: обязательное условие загрузки файла с расширением .apk, ограничения на размер файла и версию APK-файла, возможность загрузки сразу двух файлов с различными характеристиками для исключения ошибок обновления и обеспечения поддержки разных сервисов. Кроме того, статья описывает параметры взаимодействия и форм данных, ответа, а также приводит пример запроса."
  },
  {
    "shortName": "/sdk_rustore-geo_routing-services_decoding-polyline-route.txt",
    "summary": "Статья \"Декодирование ломаной маршрута\" входит в документацию RuStore и описывает процесс декодирования ломаной маршрута используя кодированный формат полилинии. Полилинейное кодирование значительно уменьшает размер ответа, и в статье приведены примеры кода на JavaScript, C++ 11 и Python для декодирования полилинии в серию координат."
  },
  {
    "shortName": "/sdk_push-notifications_user-segments_segments-api#post-project.txt",
    "summary": "Суммируя содержание статьи, мы видим, что она демонстрирует процедуры работы с сегментами в API RuStore, включая создание проекта экспорта, настройку сегментов для выгрузки, отправку push-уведомлений в сегменты и управление настройками экспорта. Статья подробно обсуждает необходимость артефактов, необходимых для работы с сегментами, а также определяет API-запросы и ответы для различных операций, таких как создание проекта экспорта, получение настроек проекта и отправка push-уведомлений в сегменты. Статья предназначена для разработчиков и технических специалистов, которые работают с RUStore SDK и API и нуждаются в понимании процессов управления сегментами пользователей."
  },
  {
    "shortName": "/sdk_push-notifications_work-with-segments-push-api.txt",
    "summary": "Эта статья из документации RuStore посвящена работе с сегментами пользователей через API. Основные темы включают подключение MyTracker для создания сегментов, работу с сегментами с использованием API, а также показ рекламных объявлений в пуш-уведомлениях. Документация предназначена для разработчиков и включает информацию о поддерживаемых SDK и API для интеграции с различными платформами."
  },
  {
    "shortName": "/developers_tools_app-tracer_android_modules.txt",
    "summary": "Статья \"Эффективное решение проблем с модулями Tracer - Crash, ANR, Heap-dumps и профилирование\" представляет собой руководство по использованию модулей Tracer для анализа и решения проблем в приложениях. Оно объясняет, как использовать функции Crash и ANR, анализировать heap-dumps, управлять Disk Usage и проводить профилирование с помощью Systrace Profiler и Sampling Profiler. Текст предназначен для разработчиков и пользователей RuStore SDK и API."
  },
  {
    "shortName": "/developers_developer-account_add-developer.txt",
    "summary": "В статье изложены инструкции для добавления дополнительных разработчиков в RuStore Консоль по их VK ID. Процесс включает в себя регистрацию разработчика по его VK ID, передачу этого ID владельцу компании, который затем добавляет его к соответствующему приложению в системе RuStore Консоль. Добавленные разработчики получают доступ к приложению и могут менять его данные и публиковать новые версии, но не могут регистрировать компании, создавать новые приложения или добавлять других разработчиков."
  },
  {
    "shortName": "/users_app-management_app-search.txt",
    "summary": "Статья \"Как найти приложение в RuStore\" включает инструкции по поиску приложений в магазине RuStore. Она начинается с указания, как открыть приложение и перейти к поисковой функции. Далее предлагается метод поиска названия приложения в поле поиска, а также как перейти на страницу приложения для установки или обновления. В статье также описывается, как найти список установленных приложений в разделе \"Моё\" в приложении RuStore. Для поиска приложений, установленных на других устройствах под учётной записью RuStore, предлагается пошаговый алгоритм действий."
  },
  {
    "shortName": "/users_authorization_why-vk-id.txt",
    "summary": "Статья посвящена объяснению концепции VK ID и его использования в RuStore. Она обсуждает, что такое VK ID, его преимущества, такие как упрощенная авторизация для пользователей и централизованное управление различными сервисами. Статья также касается функционала личного кабинета VK ID, а также перечисляет услуги, которые могут быть доступны для авторизации через VK ID."
  },
  {
    "shortName": "/developers_developer-statistics_versions-download-stat.txt",
    "summary": "Эта статья из документации RuStore обсуждает функционал Консоли RuStore, который позволяет пользователям просматривать статистику загрузки версий их приложений в магазине. Основные ключевые моменты:\n1. Вкладка \"Статистика по приложениям\" в Консоли RuStore отображает общий объем просмотров и скачиваний приложения.\n2. Предоставляется статистика по версиям ОС и моделям устройств пользователей.\n3. Таблицы статистики могут быть отсортированы и фильтрованы для упрощения анализа.\n4. Статистика доступна только авторизованным пользователям. \n5. Статья также упоминает возможность просмотра статистики по монетизации в следующем разделе документации."
  },
  {
    "shortName": "/sdk_rustore-geo_map-display-services_interactive-map_additional-objects.txt",
    "summary": "Статья \"Описание дополнительных объектов карты\" включает описания различных компонентов и объектов, используемых в картографических сервисах, включая AttributionControl и LngLatBoundsLike. AttributionControl - это элемент управления, который отображает информацию об авторском праве и других атрибутах карты. LngLatBoundsLike - это объект или массив, представляющий географические границы карты в формате широты и долготы. Оба объекта имеют различные атрибуты и методы для управления их функциями и поведением."
  },
  {
    "shortName": "/sdk_rustore-geo_additional-services_location-determination-by-ip.txt",
    "summary": "Статья \"Определение местоположения по IP-адресу\" включает в себя подробное описание API сервиса определения местоположения по IP-адресу, используемого в системе RuStore. В ней приведены обязательные и дополнительные параметры запроса, форматы данных, обсуждается содержание ответа и представлены пример запроса и ответа. Эта статья подходит для раздела \"Документация разработчиков\" в подразделе \"Карты и геосервисы\" в оглавлении."
  },
  {
    "shortName": "/developers_monetization_payment-callback_edit-server-name.txt",
    "summary": "Статья посвящена процедуре изменения адреса сервера для получения уведомлений в системе RuStore. Она включает шаги по переключению уведомлений на новый сервер и тестированию отправки уведомлений. Важно учитывать, что адрес должен начинаться с \"https://\", а ключ шифрования остается неизменным. Статья также предлагает возможность обновления ключа шифрования при необходимости."
  },
  {
    "shortName": "/users_authorization_login-vk-id.txt",
    "summary": "Статья посвящена процессу входа в сервис приложений RuStore с аккаунтом VK ID. В ней подробно описаны шаги для входа через VK ID, а также представлены альтернативные способы входа через Сбер ID, Яндекс, Тинькофф ID и Госуслуги. Также приведена инструкция по входу с другим аккаунтом VK ID."
  },
  {
    "shortName": "/sdk_rustore-geo_map-display-services_interactive-map_quick-start.txt",
    "summary": "Статья описывает процесс установки и интеграции JavaScript-библиотеки MMR GL JS для создания и управления интерактивными географическими картами в веб-приложениях. В ней подробно изложены шаги по подключению библиотеки к HTML-странице, созданию токена для авторизации, установке пакета в проекте с использованием NPM или Yarn и инициализации карты в приложении. Также приведены примеры кода для инициализации и управления картой на примере React-приложения."
  },
  {
    "shortName": "/sdk_reviews-ratings_kotlin-java_6-0-0.txt",
    "summary": "\"Статья описывает интеграцию и использование RuStore In-app Review SDK для получения отзывов и оценок пользователей внутри приложения, включая сценарии использования и рекомендации по дизайну. Она подробно описывает основные условия и процедуры работы SDK, а также предоставляет информацию по подключению SDK в проект, его интеграции и управлению зависимостями с помощью BOM файла. Статья также объясняет, как работать с оценками, как запустить процесс оценки и как обрабатывать возможные ошибки.\""
  },
  {
    "shortName": "/users_purchases-and-returns_payment-method.txt",
    "summary": "Статья направлена на объяснение процесса настройки способов оплаты в приложении RuStore для покупки подписок и товаров. Основные ключевые мысли включают: доступность различных способов оплаты, инструкции по привязке банковских карт, карт Сбер ID и других способов оплаты, а также пошаговое руководство по оплате через приложение. Эта информация может быть сгодится для включения в раздел \"Управление приложениями\" или \"Покупки и возвраты\" в оглавлении."
  },
  {
    "shortName": "/legal_add-agreement-form_.txt",
    "summary": "Статья описывает Дополнительное соглашение между ООО \"ВК\" (Российской компанией) и нерезидентами, планирующими сотрудничество с RuStore, сервисом по распространению программных продуктов. Оно включает детальные условия сотрудничества и взаимодействия, включая оплату услуг, выплату дохода, методы и сроки расчета, валюту расчета, отчетность и налоговые вопросы. \n\nСоглашение определяет порядок расчетов по 15% от Дохода Разработчика за соответствующий отчетный период, включая стоимость услуг платежных систем. Оплата производится ежемесячно путем удержания от Дохода Разработчика. \n\nДоход Разработчика, выплачиваемый в рублях, подлежит перечислению на его счет в течение 30 календарных дней после подписания акта. Если сумма не достигает минимального порога в 100 000 рублей, выплата будет произведена в следующем отчетном периоде.\n\nСоглашение также устанавливает порядок обработки иностранных валют в расчетах с учетом курсов ЦБ РФ, а также условия оплаты через третьих лиц и предоставления ими дополнительного вознаграждения. \n\nСтороны согласовали условия приема платежей и порядок предоставления банковских реквизитов Разработчиком для осуществления расчетов.\n\nТекст Дополнительного соглашения считается неотъемлемой частью основного Соглашения о распространении программных продуктов от RuStore."
  },
  {
    "shortName": "/sdk_updates_react_3-0-0.txt",
    "summary": "Статья описывает документацию по интеграции и использованию RuStore In-app updates SDK для обновления приложений на устройствах пользователей. SDK поддерживает различные способы обновления, включая отложенное, тихое и принудительное обновление. Статья приводит примеры интеграции, описывает условия для корректной работы SDK, шаги по подключению и инициализации SDK, а также процесс проверки наличия обновлений, скачивания и установки обновлений. Также описаны сценарии обновления с использованием слушателей и обработка ошибок."
  },
  {
    "shortName": "/users_purchases-and-returns_subscription-management.txt",
    "summary": "Статья \"Управление подписками в RuStore - Выбор, проверка оплаты, отмена и возобновление\" подробно описывает процесс управления подписками в приложении RuStore. Она объясняет, как выбрать варианты подписок, проверить способ оплаты, отменить и возобновить подписку. Статья также дает инструкции по изменению способа оплаты для текущей подписки. В целом, она представляет собой руководство для пользователей по эффективному управлению подписками в RuStore."
  },
  {
    "shortName": "/legal_privacy-policy-developers_.txt",
    "summary": "Статья обсуждает политику конфиденциальности для разработчиков в сервисе RuStore. Политика регулирует отношения между RuStore и разработчиками по обработке персональной информации. Она включает в себя соблюдение законов РФ, условиями соглашения с разработчиком и пользовательским соглашением. \n\nСтатья детально разбирает, какие данные собираются и обрабатываются (такие как VKID, данные о устройстве и местоположении, учетные данные и другие данные), цели обработки этих данных (включая управление сервисом, обеспечение безопасности и улучшение пользовательского опыта) и способы обработки (включая сбор, запись, систематизацию и хранение данных). \n\nТакже в статье описаны права разработчика на обработку своих данных, включая доступ к своим учетным данным, изменение и удаление этих данных, а также требование уточнения, блокирования или уничтожения неполной, устаревшей или недостоверной информации.\n\nИспользование cookies и обработка геопозиции также подробно описаны. Статья также обсуждает меры по защите данных, включая технические и организационно-правовые меры. \n\nНаконец, статья объясняет процесс изменений в политике и последствия отказа от принятия изменений."
  },
  {
    "shortName": "/users_purchases-and-returns_sber-id-connect.txt",
    "summary": "Статья посвящена процессу подключения и использования банковских карт Сбер ID в приложении RuStore для платежей. Объясняются шаги по авторизации через Сбер ID, добавлению и удалению карт после начала использования приложения. Также указано, как в случае отсутствия приложения Сбер Банк Онлайн, авторизоваться через Сбер ID для подключения карт. В конце описывается процедура удаления карт и рекомендуется обратиться в службу поддержки в случае возникновения проблем."
  },
  {
    "shortName": "/work-with-rustore-api_api-upload-publication-app_manual-publishing.txt",
    "summary": "Статья посвящена процессу ручной публикации приложений через API RuStore. Она подробно описывает структуру запроса и ответа, включая необходимые параметры и примеры. Главные концепции, изложенные в статье, включают: методы публикации приложений, устанавливаемые ограничения, а также грамотное форматирование и отправка запросов с использованием API."
  },
  {
    "shortName": "/sdk_reviews-ratings_react_6-0-0.txt",
    "summary": "Статья описывает функционал встраиваемого_SDK_для_RuStore, который позволяет пользователям приложения оставлять оценки и отзывы в RuStore, не покидая приложение. Основные элементы включают:\n\n- Подробности о процессе оценки и отзыва пользователя, и подробности об условиях для корректной работы SDK.\n- Советы по интеграции SDK в ваше приложение.\n- Инструкции по работе с оценками в SDK, включая инициализацию плагина, запуск оценок и обработку возможных ошибок.\n\nВ контексте оглавления, данная статья подходит для раздела \"RuStore SDK\" или \"Работа с оценками\", однако ее основной контент оценивается как часть раздела \"Документация разработчиков\"."
  },
  {
    "shortName": "/work-with-rustore-api_api-upload-publication-app_.txt",
    "summary": "Статья посвящена процессу загрузки и публикации приложений с помощью API RuStore. Основные темы включают создание черновика версии, загрузку APK и иконки приложения, загрузку скриншотов, изменение настроек публикации и отправку на модерацию. Процесс начинается с создания черновика версии, далее следует загрузка APK и иконки, а также загрузка скриншотов. После заполнения всей информации версию отправляют на модерацию, после чего она может быть опубликована вручную. Ключевыми моментами статьи являются описание процедур загрузки и публикации приложений, а также требования к их использованию."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_collect-har-logs_internet-explorer.txt",
    "summary": "Статья посвящена практическому руководству по сбору HAR-логов и консольных логов в Internet Explorer, что полезно для разработчиков при отладке и анализе работы веб-приложений. В ней подробно описаны шаги по проведению этих действий и сохранению собранных данных, которые могут быть использованы для исследования и устранения проблем."
  },
  {
    "shortName": "/users_about-rustore.txt",
    "summary": "Статья \"Что такое RuStore и как использовать - Полное руководство\" представляет собой обучающий материал для пользователей российского магазина мобильных приложений RuStore. Она подробно описывает основы работы с платформой, включая процесс регистрации, управление приложениями, покупки и возвраты. Основное внимание уделяется безопасности и проверке приложений на вирусы. В конце статьи представлены инструкции для выполнения различных действий в приложении и способы авторизации."
  },
  {
    "shortName": "/developers_tools_mytracker_quick-start_.txt",
    "summary": "Статья \"MyTracker в RuStore - подключение нового аккаунта и настройка\" пошагово описывает процесс подключения и настройки аккаунта MyTracker в RuStore. Включает инструкции для создания нового аккаунта, подключения существующего аккаунта и подключения SDK MyTracker к приложению RuStore. Предоставлены указания для работы с различными платформами (Android, Unity, Flutter) и даны ссылки на подробную инструкцию на портале документации MyTracker."
  },
  {
    "shortName": "/legal_add-agreement-form.txt",
    "summary": "Саммари:\n\nСтатья представляет собой Дополнительное соглашение к Соглашению RuStore о распространении программных продуктов, касающееся сотрудничества между ООО «ВК» и нерезидентом-разработчиком. \n\nСоглашение определяет детали вознаграждения разработчика (15% от его дохода за определенный период без учета НДС), его выплаты (в рублях РФ), порядок конвертации и учета иностранных валют, а также обязанности сторон. \n\nРазработчик обязан указывать цены на свои продукты в рублях РФ, оплата производится путем удержания вознаграждения от дохода разработчика. Разработчик также должен предоставить сертификат о налоговом резидентстве, а при отсутствии возражений по актам, они считаются принятыми.\n\nВажными моментами статьи являются условия сотрудничества и взаимодействия между ООО «ВК» и нерезидентом-разработчиком, а также особенности выплаты вознаграждения и бухгалтерского учета."
  },
  {
    "shortName": "/sdk_push-notifications_defold_1-1-0.txt",
    "summary": "Эта статья подробно описывает интеграцию и использование SDK push-уведомлений от RuStore для игры на платформе Defold. Основные разделы включают условия работы SDK, процесс подключения в проект, установку пакета, редактирование манифеста приложения, запрос разрешения на отображение push-уведомлений, инициализацию SDK, работу с сегментами пользователей, методы работы с push-токеном и push-топиком, а также получение информации из push-уведомлений. В статье также приведены примеры кода и указания по предварительной настройке проекта."
  },
  {
    "shortName": "/developers_tools_app-tracer_android_modules_disk-usage.txt",
    "summary": "Статья посвящена инструкции по использованию модуля \"Disk Usage\" в SDK Tracer от компании RuStore. Описывается процесс подключения зависимости в build.gradle, конфигурация класса DiskUsageConfiguration с возможными параметрами (включенность модуля, вероятность проверки, лимит занимаемого места, исключение путей). Обсуждаются определения путей в компоненте GlobalDirs."
  },
  {
    "shortName": "/developers_tools_remote-config_ab-testing_experiment-actions.txt",
    "summary": "Статья посвящена работе с A/B-тестированием в среде RuStore Remote Config. В ней подробно описываются шаги и процессы, необходимые для тестирования различных вариантов эксперимента, их копирования и остановки, а также удаления. Страница подразумевает применение статейного A/B-тестирования для предварительного тестирования изменений в приложении, с целью сравнения и анализа различных вариантов."
  },
  {
    "shortName": "/developers_monetization_sandbox_disable-test-mode.txt",
    "summary": "Эта статья описывает процесс отключения тестового режима в RuStore Консоль, включая необходимые шаги и последствия этого действия. Она подходит для раздела \"Монетизация\" в оглавлении, подразделяясь на две основные категории: \"Как отключить тестовый режим\" и \"Что происходит после отключения\"."
  },
  {
    "shortName": "/sdk_install-referrer_kotlin_6-0-0.txt",
    "summary": "Статья посвящена документации SDK Install Referrer версии 6.0.0 для Kotlin, инструменту атрибуции для рекламных и аналитических систем, отслеживающему количество установок приложения по рекламным ссылкам в RuStore. Описывается процесс подключения инструмента к проекту, создание и использование объекта InstallReferrerClient. Рассмотрены возможные ошибки, возникающие при работе SDK."
  },
  {
    "shortName": "/sdk_reviews-ratings_godot_1-0-0.txt",
    "summary": "Статья посвящена интеграции и использованию SDK для оценок и отзывов в приложении RuStore. Описывается, как пользователь может оставлять оценки и отзывы в приложении без выхода из него, а также как и когда следует запрашивать у пользователя его оценку и отзыв. В статье приводится пример реализации, условия корректной работы SDK, рекомендации по дизайну, инструкции по подключению SDK к проекту и работоспособности с оценками.\n\nТема описываемой статьи соответствует разделу \"РуStore SDK\" в оглавлении."
  },
  {
    "shortName": "/developers_tools_app-tracer_android_modules_systrace-profiler.txt",
    "summary": "Статья посвящена Systrace Profiler - инструменту для оптимизации производительности приложения на платформе RuStore SDK, используя Tracer SDK. Описывается процесс установки зависимости в проект, настройки SystraceProfilerConfiguration для управления профилированием и использование класса Condition и TracerEvents. Страница также содержит устаревшие опции настройки и ссылку на страницу \"Sampling Profiler\" для получения дополнительной информации."
  },
  {
    "shortName": "/sdk_updates_kotlin-java_6-0-0.txt",
    "summary": "Статья посвящена документации RuStore SDK 6.0.0 для интеграции функции обновлений в приложение. Обсуждаются общие сведения об обновлении приложения через SDK, примеры пользовательских сценариев и ключевые условия корректной работы SDK. Учтены различные способы подключения SDK, а также описаны методы для проверки наличия обновления, скачивания и установки обновления. Также описывается процесс установки обновления и приведены примеры сценариев отложенного, принудительного и тихого обновления. В конце статьи представлены методы обработки ошибок и описаны возможные ошибки."
  },
  {
    "shortName": "/developers_tools_app-tracer.txt",
    "summary": "Статья посвящена сервису Tracer от RuStore, который собирает и анализирует ошибки в мобильных приложениях в реальном времени для iOS и Android. Tracer помогает разработчикам быстрее и эффективнее устранять ошибки, проводит профилирование в продакшене, ищет причины утечек памяти и забытых файлов."
  },
  {
    "shortName": "/sdk_reviews-ratings_flutter_0-0-4.txt",
    "summary": "\"Документация оценивания и отзывов RuStore In-app Review SDK подробно описывает, как интегрировать систему оценки и отзывов в приложение, не выходя из него. Документация включает обзоры общих сведений, примеры реализации, условия работы SDK, рекомендации к дизайну, инструкции по подключению и работе с оценками. Указана команда для подключения пакета к проекту, а также описывается процесс работы с оценками, включая инициализацию плагина, запуск оценки и обработку возможных ошибок. Документация подразумевает использование SDK на платформах Android, поддерживает интеграцию с Flutter и другие фреймворки, и требует наличия актуальной версии RuStore и авторизации пользователя в нем.\""
  },
  {
    "shortName": "/users_start_change-theme.txt",
    "summary": "Статья описывает процесс изменения тем оформления в приложении RuStore. Могут быть выбраны темы: Светлая, Тёмная, Розовая и тема, которая соответствует системным настройкам. Изменение темы осуществляется через меню приложения. В конце статьи есть ссылки на другие руководства по использованию RuStore."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_declare-app-permissions.txt",
    "summary": "Эта статья из документации RuStore посвящена теме прозрачности и безопасности, особенно в контексте декларирования разрешений в приложениях. Основные мысли статьи: 1) RuStore обеспечивает безопасность пользовательских данных, проверяя все запрашиваемые разрешения приложений; 2) В системе реализована функция для получения информации о типах пользовательских данных, собираемых и передаваемых приложением; 3) Декларация разрешений и предоставление информации об использовании данных повышает прозрачность и понимание пользователей о том, как обрабатываются их данные."
  },
  {
    "shortName": "/developers_monetization_create-app-subscription.txt",
    "summary": "Эта статья из описания документации RuStore представляет руководство по созданию подписки в системе RuStore Консоль. Статья описывает шаги по созданию подписки, включая выбор раздела \"Монетизация\" и подраздела \"Подписки\", а также настройку дополнительных параметров подключаемых услуг. Основные моменты: создание подписки, управление платежами (включая определение периодов бесплатного и стартового доступа), настройка грэйс-периода и холд-периода для случаев неудачной оплаты, а также возможность изменения цены подписки. Статья завершается описаниями дополнительных настроек и ссылками на другие разделы документации."
  },
  {
    "shortName": "/developers_tools_remote-config_ab-testing_mytracker-connection.txt",
    "summary": "Статья посвящена инструкциям по подключению MyTracker к сервису RuStore для использования А/В экспериментов и отслеживания метрик для анализа результатов эксперимента. Она описывает шаги по подключению MyTracker, созданию и добавлению метрик, а также ссылается на информацию о регистрации в MyTracker через RuStore."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_app-publication_card-delete.txt",
    "summary": "Статья \"Как удалить карточку приложения в RuStore\" посвящена инструкции по удалению карточки приложения из консоли RuStore. Удаление доступно для приложений, в которых не проводилась модерация. Процесс включает переход в раздел \"Приложения\", выбор нужного приложения и нажатие на опцию \"Удалить приложение\". Единственным управляющим этой операцией может быть владелец аккаунта."
  },
  {
    "shortName": "/sdk_push-notifications_defold_2-1-1.txt",
    "summary": "Эта статья описывает интеграцию и использование SDK push-уведомлений от сервиса RuStore для платформы Defold. Она включает инструкции по установке SDK, конфигурации манифеста приложения, инициализации push-уведомлений, а также обсуждает работу с сегментами пользователей, методы работы с push-токенами и топиками, получение информации из push-уведомлений. Статья предназначена для разработчиков, которые хотят включить функционал push-уведомлений в свои приложения, используя платформу Defold."
  },
  {
    "shortName": "/users_app-management_auto-update.txt",
    "summary": "Эта статья из документации RuStore поясняет, как настроить и использовать функцию автообновления приложений в магазине RuStore. Она включает инструкции по включению автообновлений, настройке выбора сети для обновлений, а также по отключению автообновления. Отдельно описываются особенности автообновления для устройств Xiaomi, Redmi, Vivo, Asus и Honor."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_dealing-negative-reviews.txt",
    "summary": "Статья \"Эффективные методы работы с негативными отзывами в приложении RuStore\" дает руководство по отклику на негативные отзывы пользователей. В ней обсуждаются вредные последствия неправильного ответа и советуют избегать односложных ответов, формального тонка, и шаблонных ответов. Она подчеркивает важность показать понимание чувств пользователя, помочь ему, и быстро отвечать. Также статья советует обращаться в службу поддержки с отзывами, содержащими необъективную информацию, мат или оскорбления."
  },
  {
    "shortName": "/developers_tools_remote-config_ab-testing_experiment-result.txt",
    "summary": "Статья посвящена описанию и инструкциям по работе с функцией \"Результаты эксперимента\" в сервисе RuStore Remote Config. В ней подробно описаны шаги по просмотру и анализу результатов A/B-тестирования приложений, включая просмотр описания эксперимента, прокрасов метрик, результатов по всем метрикам. Также уделено внимание работе с метриками, включая изменение параметров, просмотр статистически значимых изменений и ложных прокрасов, а также анализ доверительных интервалов и MDE. Статья также содержит информацию о различных видах тестов, которые используются для различных типов метрик."
  },
  {
    "shortName": "/work-with-rustore-api_api-upload-publication-app_delete-draft.txt",
    "summary": "Статья посвящена методу удаления черновиков в API RuStore. Описывается процесс получения токена авторизации, загрузки и публикации приложений с использованием API. Также приводится процедура создания черновика версии и его удаления. Статья включает информацию о методах взаимодействия и ответа, а также приводится пример запроса для удаления черновика."
  },
  {
    "shortName": "/users_purchases-and-returns_subscribe.txt",
    "summary": "Эта статья из документации RuStore посвящена процессу оформления подписки в приложениях, доступных в магазине RuStore. Освещены способы оплаты подписок, регулярные платежи за услуги и управление подписками. Статья также включает информацию о том, как можно настроить способы оплаты и предупреждает о том, что регулярные платежи списываются в промежутке от 8 до 16 часов, незадолго до окончания подписки. Подробности о функционировании RuStore и политике конфиденциальности также обсуждаются в статье."
  },
  {
    "shortName": "/developers_tools_remote-config_ab-testing_experiment-create.txt",
    "summary": "В статье \"Создание эксперимента\" подробно описывается процесс создания A/B-экспериментов в системе управления параметрами приложений RuStore Remote Config. Статья начинается с инструкций о том, как открыть и перейти к вкладке \"A/B эксперименты\" в системе. Затем, авторы гайда приводят пошаговую инструкцию по созданию эксперимента, включая указание названия, цели, сегментации пользователей и целевых метрик. Они также объясняют, как управлять параметрами и условиями в эксперименте, а также как управлять датами и длительностью эксперимента."
  },
  {
    "shortName": "/sdk_push-notifications_defold_history.txt",
    "summary": "Статья \"История обновлений\" документации RuStore посвящена истории изменений в SDK и API веб-сервиса RuStore. В ней описаны различные обновления по отправке push-уведомлений, работе с сегментами пользователей, подключению отзывов и оценок, обновлению приложений и многим другим функциям. Статья включает в себя историю изменений для разных версий SDK и API, включая 2.3.0, 2.2.0, 2.1.1, 2.0.0 и 1.1.0."
  },
  {
    "shortName": "/developers_developer-account_user-roles_.txt",
    "summary": "Статья описывает процесс управления доступом в системе RuStore. Она объясняет, как добавлять, редактировать и удалять пользователей, а также назначать им разные роли. Рассматриваются шесть ролей пользователей: владелец компании, администратор, релиз-менеджер, разработчик, финансовый менеджер и специалист поддержки. Каждая роль имеет свои разрешения и функции, например, владельцы могут создавать и удалять приложения, а финансовые менеджеры могут управлять платежами. В конце статьи приведена таблица с разрешениями для каждой роли."
  },
  {
    "shortName": "/sdk_updates_godot_1-0-1.txt",
    "summary": "Статья обсуждает SDK для обновления приложений в системе RuStore. Основные темы включают обновления приложений в фоновом режиме (тихое обновление), отложенные обновления и принудительное обновление с пользовательским UI. Статья также включает инструкции по подключению SDK к проекту, созданию менеджера обновлений, проверке наличия обновлений, скачиванию и установке обновлений, а также обработке возможных ошибок."
  },
  {
    "shortName": "/users_start_install-on-tv_install-apk-on-tv.txt",
    "summary": "Статья описывает процесс установки приложения на ТВ через платформу RuStore. Указываются шаги от сканирования QR-кода или переключения по ссылке до запуска приложения. Подробно в статье расписаны методы загрузки и установки APK-файла, его перемещения на флешку и подключения к ТВ. Также описываются некоторые функции RuStore, такие как открытие флешки на телевизоре и запуск файла для установки."
  },
  {
    "shortName": "/sdk_push-notifications_unreal_history.txt",
    "summary": "Статья \"История обновлений\" включает в себя список изменений и обновлений в SDK и API RuStore по версиям 2.0.0, 1.4.0, 1.2.0 и 1.0.0. Основные темы обсуждения включают в себя обновления в push-уведомлениях, работу с сегментами пользователей, показ рекламных объявлений в уведомлениях, подключение отзывов и оценок, обновления SDK и совместимость с Unreal Engine."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_.txt",
    "summary": "Статья посвящена процессу публикации и проверки приложений в RuStore, бесплатной платформе для размещения мобильных приложений. Помимо этого раскрывается вопрос стоимости публикации - в RuStore платные услуги отсутствуют, приложения можно выложить бесплатно в обе формы: бесплатные и платные."
  },
  {
    "shortName": "/users_purchases-and-returns_paid-apps.txt",
    "summary": "Статья посвящена процессу покупки и установки платных приложений в RuStore. Описывается шаг за шагом процесс открытия приложения и выбора платного приложения в витрине, до совершения оплаты и начала установки на устройство. Статья содержит предупреждение о необходимости повторной оплаты приложений, купленных в других магазинах. В оглавлении рекомендуется разместить подраздел о покупке платных приложений в разделе \"Платные приложения\"."
  },
  {
    "shortName": "/developers_monetization_payment-callback_.txt",
    "summary": "Статья посвящена сервису \"Уведомления на сервер\" в RuStore, который обеспечивает реальное время отправку уведомлений об изменениях в статусах платежей в приложении. В ней описаны шаги по настройке сервера для получения уведомлений, включению и отключению их отправки, а также информация об ограничениях и гарантиях доставки уведомлений."
  },
  {
    "shortName": "/users_policies_review-moderation.txt",
    "summary": "Статья \"Почему отзыв не проходит модерацию в RuStore - Критерии и рекомендации\" излагает правила модерации отзывов в RuStore и подсказывает, как избегать нарушений при оставлении отзывов. Основные ключевые мысли: у каждого пользователя есть право оставить только один отзыв на одно приложение; отзыв должен быть личным опытом использования приложения, без ссылок на внешние ресурсы, рекламы, нецензурной брани и оскорблений. В случае отклонения отзыва, следует обратиться в службу поддержки."
  },
  {
    "shortName": "/sdk_push-notifications_defold_2-2-0.txt",
    "summary": "Статья посвящена инструкциям по интеграции SDK push-уведомлений от RuStore для проекта на платформе Defold. Она подробно описывает условия работы SDK, процесс подключения插件, настройки манифеста приложения, получение и обработку push-уведомлений, а также имплементацию функций управления сегментами пользователей и логированием событий. Кроме этого, статья предлагает руководство по использованию документации и API, включая методы для работы с push-токенами и топиками, а также содержит информацию о запросе разрешения на показ уведомлений в Android 13+. Она также предлагает гайд по инициализации SDK и настройке по умолчанию для заголовка и тела push-уведомлений."
  },
  {
    "shortName": "/developers_developer-account.txt",
    "summary": "Статья посвящена процессу регистрации разработчиков в RuStore Консоль, а также управлению ролями и VK ID. Обсуждаются методы узнавания VK ID, добавление дополнительных разработчиков и назначение ролей пользователям. Статья направлена на техническую аудиторию и может помочь в ознакомлении с основами работы на платформе RuStore. Уместно включить в оглавление раздел \"Регистрация и управление аккаунтом разработчика\"."
  },
  {
    "shortName": "/users_about-rustore_.txt",
    "summary": "Статья представляет собой обзор и руководство по использованию RuStore - официального российского магазина мобильных приложений для Android. В ней обсуждаются основные особенности магазина: огромный каталог приложений от российских и иностранных разработчиков, безопасность с использованием систем безопасности «Лаборатории Касперского», а также поддержка со стороны крупных IT-компаний и Минцифры РФ. Статья также содержит разделы по использованию функционала магазина, включая авторизацию, управление приложениями, покупки и возвраты."
  },
  {
    "shortName": "/work-with-rustore-api_api-subscription-payment_api-id-payment-method-v3_.txt",
    "summary": "Статья посвящена методу получения данных о подписке в API RuStore (версия V3). Текст описывает процесс и параметры запроса метода с использованием токена подписки, а также форматы параметров и ответа. В статье приведены URL запросов для реальных и тестовых подписок, а также описание необходимых параметров запроса и примеры их использования. Статья также объясняет, как работать с тестовыми платежами и подписками, а также какие ключевые атрибуты включаются в успешный ответ и возможные ошибки."
  },
  {
    "shortName": "/developers_tools_remote-config_roles.txt",
    "summary": "Статья \"Управление ролями и правами в Remote Config - полное руководство\" подробно описывает механизм управления доступами в сервисе Remote Config с использованием прав. Основной упор делается на выдачу прав на каждый отдельный приложение, а также на описание различных прав и их доступные действия. Включены разделы о роли владельца компании, выдаче прав пользователям и необходимом подтверждении изменений."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_collect-har-logs_opera.txt",
    "summary": "Сбор HAR и консольных логов в Opera: практическое руководство. Статья предлагает шаги по сбору HAR-логов и консольных логов в браузере Opera для анализа и отладки приложений. Процедура включает открытие инструментов разработчика, проверку и включение индикатора записи, сохранение логов и их последующее сохранение в выбранной папке."
  },
  {
    "shortName": "/sdk_push-notifications_react_2-1-1.txt",
    "summary": "Статья посвящена документации для React Native SDK Push Notifications от RuStore. Основная информация включает:\n\n1. Условия работы push-уведомлений, включая установку актуальной версии RuStore, поддержку функциональности push-уведомлений в приложении и разрешение на работу в фоновом режиме.\n   \n2. Процесс подключения React Native SDK к проекту, включая команды npm для установки пакета и редактирование AndroidManifest.xml для настройки иконки и цвета уведомлений.\n\n3. Запрос разрешения на показ уведомлений в версии Android 13 и инструкции по инициализации SDK push-уведомлений, включая вставку идентификатора проекта в AndroidManifest.xml.\n\n4. Получение и удаление push-токена, подписка и отписка от топиков, а также получение данных от SDK.\n\n5. Обработка ошибок, включая возможные исключения и методы нативной и пользовательской обработки ошибок.\n\n6. Информация о тестовом режиме и отправке тестовых push-уведомлений. \n\nСтруктура статьи включает подразделы по каждой функции, а также примеры кода и инструкции по настройке."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_paid-app?utm_source=direct_none.txt",
    "summary": "Статья \"Монетизация в RuStore - платные приложения и управление ценами\" излагает процесс добавления и монетизации платных приложений в системе RuStore и предоставляет подробные инструкции по изменению цен на приложения. Эта информация включена в раздел \"Платные приложения\" и \"Управление ценами\" оглавления документации."
  },
  {
    "shortName": "/developers_developer-account_registration-developer_registration#%D0%BA%D0%B0%D0%BA-%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%B8%D1%82%D1%8C-%D0%BF%D0%BB%D0%B0%D0%B3%D0%B8%D0%BD-%D0%BA%D1%80%D0%B8%D0%BF%D1%82%D0%BE%D0%BF%D1%80%D0%BE.txt",
    "summary": "Статья описывает процесс регистрации юридических лиц и индивидуальных предпринимателей на платформе RuStore Консоль, включая необходимые шаги, документы и инструменты. Основные темы: регистрация через VK ID, выбор формы регистрации (юридическое лицо или ИП), заполнение анкеты, подписание заявления с использованием плагина КриптоПро, получение доступа к личному кабинету и последующий сопровождающий процесс. Текст обозначает также, как установить плагин КриптоПро для электронной подписи. Документация включает в себя и ссылки на дополнительные ресурсы и руководства по технической поддержке."
  },
  {
    "shortName": "/users_authorization_login-yandex-id.txt",
    "summary": "Статья описывает процесс авторизации в сервисе RuStore через Яндекс. Она содержит пошаговую инструкцию и объясняет, как взаимодействовать с приложением для входа. Важные ключевые мысли включают инструкции по входу через Яндекс, проверку актуальности телефона, получение кода подтверждения по SMS и ввод его для окончания авторизации."
  },
  {
    "shortName": "/work-with-rustore-api_api-feedback-process_get-app-rating.txt",
    "summary": "Статья посвящена методу получения рейтинга приложения в API RuStore. Выделяются основные параметры для взаимодействия метода: Public-Token и packageName. Дополнительно описываются параметры ответа, включая код ответа, сообщение, время ответа и структуру ответа, включающую среднюю пользовательскую оценку, общее количество оценок, количество отзывов без ответов и детализированный список оценок. Приведены примеры запроса и ответа для использования API. Цель статьи - предложить инструкцию по использованию API для получения рейтинга приложения в RuStore."
  },
  {
    "shortName": "/users_start_update-rustore-app.txt",
    "summary": "Содержание статьи: \"Как обновить RuStore - Шаги по обновлению и отложенной версии\". Оно предлагает полный гид по обновлению приложения RuStore, включая процесс установки обновленной версии и откладывание обновления на потом. Статья также объясняет, как обновить отложенную версию приложения и что происходит, если установленная версия перестает поддерживаться."
  },
  {
    "shortName": "/developers_developer-account_your-vkid.txt",
    "summary": "Статья \"Как узнать VK ID\" в описании предоставляет пошаговую инструкцию по определению VK ID пользователя в социальной сети ВКонтакте. Важные моменты включают: вход в профиль ВКонтакте, переход в настройки, поиск блока \"Адрес страницы\", и последующее отображение номера страницы как VK ID. В случае проблем с авторизацией через Google, предлагается перезарегистрация через другие методы."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_declare-app-permissions_data-categories.txt",
    "summary": "Статья \"Категории и типы данных\" в документации RuStore посвящена объяснению и пониманию безопасности в системе. Она объясняет разницу и использование различных типов данных в приложениях, которые могут собирать и передавать. Включает в себя обзор типов данных, таких как личная информация, финансы, здоровье и фитнес, сообщения, фото и видео, файлы и документы, а также действия в приложении и другие данные. Цель статьи - помочь пользователям понять, как их данные используются и защищаются в приложениях RuStore."
  },
  {
    "shortName": "/sdk_updates_unity_2-0-0.txt",
    "summary": "Статья \"RuStore In-app updates SDK\" посвящена инструменту разработки, который позволяет поддерживать актуальную версию приложения на устройствах пользователей. Статья объясняет, как интегрировать и использовать SDK для обновления приложений, описывает сценарии использования, условия для корректной работы SDK, а также приводит инструкции по созданию менеджера обновлений, проверке и скачиванию обновлений, применению слушателей и установке обновлений. Статья также описывает типы обновлений (отложенное, тихое и принудительное), их пользовательские сценарии и условия применения, и предоставляет информацию о возможных ошибках, которые могут возникнуть при использовании SDK."
  },
  {
    "shortName": "/sdk_updates_kotlin-java_history.txt",
    "summary": "Статья \"История обновлений\" содержит информацию о всех версиях SDK для платформы RuStore, начиная с версии 0.1.1 и заканчивая 3.0.0. Описание включает внутренние обновления и новые функции в каждой версии, такие как внесение функционала тихих обновлений, поддержка передачи типа Long VersionCode и введение функции форс апдейтов."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_app-publication_choose-region.txt",
    "summary": "Статья \"Как выбрать регион для публикации приложения в RuStore\" посвящена вопросу выбора региона для публикации приложений в магазине RuStore. Она описывает шаги, необходимые для настройки публикации приложений в России и других странах, включая процесс отображения приложений, выбор и проверку территорий для публикации."
  },
  {
    "shortName": "/sdk_payments_react_3-1-0.txt",
    "summary": "Статья посвящена интеграции платежной системы \"RuStore\" в мобильное приложение с использованием разнообразных фреймворков и языков программирования (Kotlin/Java, Unity, Godot, React Native и др.). Описывается процесс подключения SDK платежей, инициализация системы, обработка deeplink и deeplink с внешних приложений.\n\nСтатья подробно описывает основные этапы интеграции \"RuStore\" в приложение: подключение SDK, инициализация, работа с deeplinks, а также базовые операции с платежами. \n\nВажные моменты, изложенные в статье: \n1. Важность и условия работы платежей в \"RuStore\", включая авторизацию пользователя и поддержку покупок в консоли.\n2. Процесс подключения и инициализации SDK в приложении, включая команды для установки пакета и настройки параметров инициализации.\n3. Обработка deeplinks для корректной работы оплаты через сторонние приложения.\n4. Детальное описание работы с API \"RuStore\", включая получение списка продуктов, покупку продукта, получение списка покупок и подтверждение покупки.\n5. Условия работы и спецификации продукта, включая статусы продукта, типы продуктов и структуру подписок.\n\nСтатья также останавливается на возможных ошибках и ограничениях, с которыми могут столкнуться разработчики при интеграции платежной системы \"RuStore\". \n\nТаким образом, данная статья представляет собой руководство по интеграции платежной системы \"RuStore\" в мобильное приложение с подробным описанием ключевых шагов и нюансов процесса."
  },
  {
    "shortName": "/sdk_rustore-geo_map-display-services_interactive-map_options#styleimageinterface-%D1%81%D0%BF%D0%B5%D1%86%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%86%D0%B8%D1%8F-%D0%B4%D0%BB%D1%8F-%D1%80%D0%B0%D0%B7%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D1%87%D0%B8%D0%BA%D0%BE%D0%B2.txt",
    "summary": "Эта статья изучает подробные свойства и опции, используемые в SDK для карт, разработанном компанией RuStore. Объяснения включают в себя такие ключевые понятия как accessToken для доступа к карте, baseApiUrl для начального API URL, workerCount для числа веб-воркеров на странице, maxParallelImageRequests для максимального количества параллельно загружаемых изображений, supported для проверки поддержки браузера, version для текущей версии SDK, setRTLTextPlugin для установки плагина поддержки RTL, getRTLTextPluginStatus для проверки статуса плагина, clearStorage для очистки кэша и другие параметры. Статья также исследует группы параметров, такие как AnimationOptions, CameraOptions, PaddingOptions, RequestParameters и другие спецификации для разработчиков."
  },
  {
    "shortName": "/sdk_rustore-geo_additional-services_search-for-a-zip-code.txt",
    "summary": "Статья посвящена сервису определения почтового индекса в рамках документации RuStore. В ней подробно описывается как подключить и использовать сервис, а также детально расписаны параметры запроса и ответа. Включены примеры запросов и ответов, а также описания полей в ответе, включая информацию о почтовом отделении, адресах и часовых поясах, которые можно найти с его помощью. \n\nОсновная информация, которую следует выделить в оглавлении: \"Сервис определения почтового индекса в RuStore SDK\"."
  },
  {
    "shortName": "/guides_sign-apk.txt",
    "summary": "Статья обсуждает важность и преимущества подписи приложений в контексте обеспечения безопасности, целостности и доверия пользователей. Она подробно объясняет, как настроить подписание приложений для публикации на платформах, таких как RuStore, Google Play и Huawei AppGallery. Делится шагами и инструкциями для создания хранилища ключей с ключом подписи и настройки подписи релизной версии приложения с помощью инструментов keytool и Android Studio, а также настройки через файл build.gradle. В конце статьи уточняются последующие шаги после настройки и обсуждается проверка подписи при работе с SDK RuStore."
  },
  {
    "shortName": "/users_policies.txt",
    "summary": "Статья посвящена политикам и правилам сервиса RuStore, включая защиту устройства и модерацию отзывов. Освещаются вопросы: необходимость разрешения установки из неизвестных источников и работы в фоновом режиме, причины отказа в модерации отзывов."
  },
  {
    "shortName": "/sdk_reviews-ratings_react_2-0-0.txt",
    "summary": "Статья о Descriptions \"RuStore In-app Review SDK\" представляет обзор инструмента для получения отзывов и оценок пользователей в приложении прямо из самого приложения. Включает в себя разделы: общие сведения, примеры реализации и сценариев, условия корректной работы, рекомендации по дизайну, инструкции по подключению в проект и работа с оценками. Данный SDK поддерживает Android 7.0 и выше, требует актуальную версию RuStore у пользователя и опубликованное в RuStore приложение. Статья также включает информацию о возможных ошибках и как их обрабатывать. В оглавлении место для этой статьи может быть посвящено разделу \"Разработчикам\" или \"SDK и API\", в зависимости от глубины описания и целевой аудитории."
  },
  {
    "shortName": "/developers_tools_app-tracer_.txt",
    "summary": "Статья \"Tracer в RuStore - анализ ошибок в мобильных приложениях в реальном времени\" посвящена сервису Tracer, предлагающему возможность автоматического сбора и анализа ошибок в мобильных приложениях под iOS и Android для более быстрого и эффективного исправления. Сервис позволяет проводить профилирование для определения причин лагов и фризов, обнаруживать утечки памяти и забытые/утекшие файлы."
  },
  {
    "shortName": "/legal_privacy-policy-developers.txt",
    "summary": "Эта статья - Политика конфиденциальности для разработчиков, предоставляемая платформой RuStore. Она объясняет, как соблюдается конфиденциальность информации разработчиков при использовании платформы. Политика описывает, какие данные собираются от разработчиков при использовании сервиса, основания для обработки этих данных, а также способы их использования. Важно отметить, что разработчики должны согласиться с условиями политики, прежде чем начать использование сервиса. \n\nИзлагаются и принципы обработки данных, способы и условия обработки, которые следуют определенным правилам и нормам. Также уточняется, что персональные данные разработчиков могут передаваться третьим лицам, при условии соблюдения целей обработки и учета законодательства. \n\nДокумент также содержит разделы о передаче и получении информации от сторонних сервисов и партнеров, о сборе и обработке cookies, обработке информации о местоположении разработчика, а также о предоставлении разработчикам прав доступа к своим данным и их изменению. \n\nВ конце статьи уточнены права разработчиков и процедуры обращения в случае вопросов или претензий. Политика регулируется российским законодательством и может быть изменена без предварительного уведомления разработчиков."
  },
  {
    "shortName": "/sdk_updates_flutter_3-0-0.txt",
    "summary": "Статья \"Руководство по интеграции и использованию SDK обновлений RuStore\" включает в себя подробные инструкции по работе с инструментом обновления приложений от RuStore. Основное внимание уделено этапам подключения SDK к проекту, проверки наличия обновлений, процессам скачивания и установки обновлений с различными уровнями интерактивности для пользователя (отложенное, тихое и принудительное обновление), а также обработке ошибок. Также в статье приведен список зависимостей и права использованные в SDK."
  },
  {
    "shortName": "/sdk_push-notifications_user-segments_segments-api.txt",
    "summary": "Статья описывает инструкции и API для работы с сегментами в системе RuStore. Она объясняет, как создать и настроить проект экспорта с использованием сервисного токена и API-ключа от MyTracker для выгрузки сегментов пользователей. Статья также описывает создание сегмента для экспорта, получение данных сегментов из MyTracker, и отправку уведомлений в сегмент с использованием API. Ключевые моменты включают в себя использование сервисного токена и API-ключа MyTracker, а также структуру и формат запросов и ответов к API."
  },
  {
    "shortName": "/developers_tools_remote-config.txt",
    "summary": "Статья \"RuStore Remote Config - Полное руководство по SDK, условиям и параметрам\" посвящена инструкции по использованию сервиса Remote Config от RuStore. Содержит информацию о принципах работы SDK, конфигурации приложений, A/B-тестировании, подключении IOS приложений, управлении параметрами и условиями, настройке подтверждения, а также о роли и правах пользователей сервиса. Статья также включает лицензионное соглашение и политику конфиденциальности сервиса."
  },
  {
    "shortName": "/work-with-rustore-api_api-subscription-payment_api-token-payment-method_.txt",
    "summary": "Статья посвящена методу получения данных платежа в системе RuStore. Описывается основной принцип работы API и приведены параметры для обмена данными в реальных и тестовых сценариях. Описаны основные атрибуты ответа метода, включая код ответа, сообщение, тело ответа и другие важные детали. Такое описание может быть использовано для описания \"Метод получения данных платежа\" в оглавлении документации RuStore."
  },
  {
    "shortName": "/developers_tools_remote-config_ab-testing_metrics.txt",
    "summary": "Статья посвящена разделу \"Метрики\" в системе Remote Config от RuStore. Она объясняет, как создавать и управлять метриками, использовать поиск и фильтры для их нахождения, а также подчеркивает важность подключения MyTracker для корректной работы метрик."
  },
  {
    "shortName": "/users_app-management.txt",
    "summary": "Статья \"Как устанавливать, обновлять и настраивать автообновление в RuStore\" описывает процесс установки, обновления и настройки автообновления приложений в сервисе RuStore. Она также включает информацию о проверке безопасности приложений, обработке сбоев при обновлении и написании отзывов. Основной упор делается на управлении приложениями в RuStore от поиска до автообновления, предоставляя полезные советы и инструкции для пользователей."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_app-publication_adding-an-app-for-a-tv-device.txt",
    "summary": "Статья \"Добавление приложения для устройства ТВ\" в описании Документации RuStore, содержит подробную инструкцию по публикации приложений для телевизионных устройств на платформе RuStore. Процесс начинается с открытия консоли RuStore и переключения на вкладку «Приложения». Здесь разработчик выбирает тип приложения: «Универсальный» или «Только для ТВ». Затем следует ввод названия приложения и указание категорий, возрастного ограничения и описание. Учтено, что для ТВ доступны только бесплатные приложения, а загрузка нового APK может производиться только с одним именем пакета для обеих версий приложения. После заполнения необходимых полей, приложение отправляется на модерацию и затем может быть опубликовано."
  },
  {
    "shortName": "/developers_tools_remote-config_sdk_kotlin_0-1-0.txt",
    "summary": "Эта статья описывает документацию для SDK и API сервиса RuStore Remote Config, который используется для модификации поведения и внешнего вида приложений без необходимости обновления приложения. Основная часть посвящена инструкциям по интегрированию SDK и API в приложение, а также подробностям функционирования и настройки сервиса. Важные моменты включают в себя примеры реализации, ключевые особенности сервиса, процедуру подключения и инициализации SDK, опции конфигурации, различные поведения SDK, реализацию параметров для синхронизации конфигурации, а также обрабатываемые ошибки."
  },
  {
    "shortName": "/sdk_payments_react_5-0-0.txt",
    "summary": "Эта статья посвящена интеграции платежной системы RuStore в мобильные приложения. Главные темы, обсуждаемые в статье, включают:\n\n1. Обзор доступных интегрированных SDK для различных платформ (Kotlin/Java, Unity, Godot, React Native, Flutter, Unreal Engine, Defold) и поддержки платежей in-app и подписок.\n2. Приводится информация об обновлениях, включая нововведения в версии 5.0.0.\n3. Описывается процесс подключения SDK к проекту, включая команды установки и реализация deeplink в AndroidManifest.xml для правильной обработки оплаты сторонними приложениями.\n4. Рассмотрены этапы инициализации библиотеки и использование методов для проверки доступности платежей, получения списка продуктов, покупки продукта и получения списка покупок. \n5. Обсуждаются статусы покупки и возможные исключения в процессе работы с SDK.\n6. Представлены примеры реализации и ключевые концепции работы с платежами в RuStore, включая условия для успешной работы платежей и важность корректной обработки ошибок.\n\nСтатья может быть размещена в разделе \"Инструкции и руководства\" в оглавлении."
  },
  {
    "shortName": "/sdk_general-push-notifications_send-push-notifications_api.txt",
    "summary": "Статья посвящена API для отправки универсальных push-уведомлений через различные платформы, такие как RuStore, Firebase Cloud Messaging (FCM), Huawei Mobile Services (HMS) и Apple Push Notification Service (APNS). В ней описываются основные требования и шаги для подключения к API, а также подробно разъясняются параметры запроса, включая разные провайдеры и их токены. В конце статьи приведены примеры отправки push-уведомлений и описание возможных ошибок и их решений."
  },
  {
    "shortName": "/sdk_payments_defold_5-0-1.txt",
    "summary": "Статья обсуждает интеграцию платежных функций в мобильные приложения с использованием сервиса RuStore. Основные разделы включают:\n\n1. Подключение в проект и обработка deeplink.\n2. Инициализация SDK и проверка доступности работы с платежами.\n3. Работа с SDK, включая получение списка продуктов, покупку продукта, получение списка покупок и многие другие функции.\n4. Обработка ошибок и коды ошибок.\n5. Спецификации и ограничения для работы с платежами за пределами России.\n6. Ведение журнала событий и смена темы интерфейса.\n\nТаким образом, статья содержит подробные инструкции по интеграции и использованию сервиса RuStore для обработки платежей в мобильных приложениях."
  },
  {
    "shortName": "/developers_tools_remote-config_sdk_defold_1-1-1.txt",
    "summary": "Данная статья посвящена документации SDK и конфигурации приложения для инструмента Remote Config от сервиса RuStore. Структурированное описание включает:\n\n1. **Введение в Remote Config**: Определение сервиса, его цели и принцип работы.\n2. **Принципы работы SDK Remote Config**: Детализация запросов конфигурации с сервера, кэширования и фонового обновления.\n3. **Примеры и инструкции по интеграции**: Помощь в подключении плагина к проекту, использование в Defold и настройка параметров.\n4. **Ключевые особенности SDK**: Описание механизмов обновления конфигурации, возможности указания прогресса распространения, передачи дополнительной информации и настройки параметров.\n5. **Инициализация и использование SDK**: Практические примеры и руководства по созданию RemoteConfigClient и инициализации SDK в различных языках программирования.\n6. **Опциональные параметры и настройки**: Детальное описание параметров RemoteConfigClientBuilder, включая Account и Language, и их влияние на работу SDK.\n7. **Синхронизация в Lua**: Введение в автоматическую инициализацию SDK при запуске системы плагинов Defold и возможность динамической передачи параметров.\n8. **Обратные вызовы и события**: Список событий, которые SDK можно подписаться на, чтобы получать обратные вызовы о работе SDK.\n9. **Получение и использование конфигурации**: Руководство по вызову метода get_remote_config и обработке полученной конфигурации.\n10. **Возможные ошибки и обработка**: Описание ошибок, которые могут возникнуть при работе SDK и рекомендации по их обработке.\n\nСтатья подходит для раздела \"SDK и конфигурация приложения\", в подразделе \"SDK Remote Config для Defold (версия 1.1.1)\" в оглавлении."
  },
  {
    "shortName": "/users_start_app-install.txt",
    "summary": "Статья описывает процесс установки приложения RuStore на устройства с операционной системой Android и Harmony OS 4, акцентируя внимание на безопасности. Она включает инструкции по скачиванию и установке через официальный сайт, предупреждает о небезопасных способах загрузки и объясняет, что приложения в RuStore проходят модерацию и проверку с помощью систем безопасности \"Лаборатории Касперского\". Также приводятся шаги по решению возникающих проблем при установке."
  },
  {
    "shortName": "/work-with-rustore-api_api-upload-publication-app_apk-file-upload.txt",
    "summary": "Эта статья из документации разработчика описывает процесс загрузки и публикации приложений на платформу с использованием API RuStore, включая загрузку APK/AAB файлов, иконки приложения, скриншотов. Также описывается проверка загруженных файлов на наличие запрещенных и чувствительных разрешений. В случае обнаружения таких разрешений, документ описывает действия, необходимые для исправления ситуации."
  },
  {
    "shortName": "/sdk_payments_unreal_history.txt",
    "summary": "Статья \"История обновлений\" из документации RuStore SDK описывает вкладки с историей обновлений для каждого SDK, включая Kotlin/Java, Unity, Godot, React Native, Flutter, Unreal Engine, и Push-уведомления. Обновления включают новые функции, исправления багов, внутренние обновления и другие улучшения. Вкладки посвящены различным версиям SDK, от 5.0.0 до 0.1.7, с подробностями о внесенных изменениях в каждую версию."
  },
  {
    "shortName": "/sdk_updates_unreal_1-0-0.txt",
    "summary": "Статья посвящена документации RuStore In-app updates SDK, использованию и настройке для обновления приложений на устройствах пользователей. Обсуждаются различные сценарии обновлений (отложенное, тихое, принудительное) и условия их корректной работы. Также описывается процесс подключения SDK в проект, создание и инициализация менеджера обновлений, проверка инициализации, проверка наличия обновлений, скачивание и установка обновлений, и использование слушателей для отслеживания статуса скачивания и установки. Статья подробно рассказывает о структуре и возможных состояниях объектов, используемых в SDK. Упоминаются и обрабатываются возможные ошибки в процессе работы SDK."
  },
  {
    "shortName": "/users_app-management_app-safety.txt",
    "summary": "Статья \"Как проверить безопасность приложений\" от RuStore обсуждает процесс проверки безопасности установленных приложений на устройстве пользователя. Она включает руководства по автоматической и ручной проверке безопасности через антивирусный сканер Kaspersky. Статья также описывает процесс удаления небезопасных приложений после проверки и подчеркивает, что проверка безопасности выполняется ночью. Статья не требует глубинного знания технических спецификаций, но может быть полезна для пользователей, которые заинтересованы в оценке безопасности своих приложений."
  },
  {
    "shortName": "/developers_tools_remote-config_sdk_flutter_1-0-0.txt",
    "summary": "Статья посвящена документации по интеграции и использованию SDK Remote Config для Flutter версии 1.0.0. SDK Remote Config представляет собой облачный сервис, который позволяет изменять поведение и внешний вид приложения без необходимости обновления приложения. В статье подробно описываются основные концепции и функции SDK: принципы работы, составные части, как подключить пакет к проекту, инициализировать RemoteConfigClient, использовать конфигурации, а также возможность настраивать различные параметры и обрабатывать ошибки. Имеются примеры кода для лучшего понимания и интерпретации документации."
  },
  {
    "shortName": "/developers_monetization_sandbox.txt",
    "summary": "Статья посвящена процессу тестирования платежей в приложении RuStore. Основные возможности включают управление тестовым режимом через RuStore Консоль, тестирование покупок в изолированной среде с использованием тестовых карт, просмотр истории тестовых платежей и специфические технические особенности. Важно отметить, что перед тестированием приложение должно пройти модерацию."
  },
  {
    "shortName": "/sdk_general-push-notifications_send-push-notifications_examples.txt",
    "summary": "Статья \"Примеры запросов для отправки универсальных push-уведомлений\" включает в себя д示范性实例展示如何使用 RuStore SDK API 发送跨平台的推送通知。内容涵盖了成功推送通知请求的示例、无效提供商（如缺少项目ID或授权令牌）导致的错误示例、无效消息（如缺少通知标题或正文）的示例以及来自推送提供商（如FCM）的错误示例。文章旨在帮助开发者理解如何正确构造和发送推送通知请求，以及如何处理可能遇到的错误。该文章适合放在“发送跨平台推送通知”或“RuStore SDK API示例”部分的文档中。"
  },
  {
    "shortName": "/work-with-rustore-api_api-authorization-token_.txt",
    "summary": "Статья описывает процедуру получения токена авторизации в системе RuStore API, используя метод POST /public/auth/. Объясняются параметры взаимодействия, необходимость сгенерировать приватный ключ и создать цифровую подпись. Рассмотрен пример кода на Python и Java для создания токена. Описываются также параметры ответа, возможные ошибки и примеры запроса и ответа. Статья является частью документации для разработчиков по работе с RuStore API и предоставляет подробную инструкцию по получению токена для авторизации. Это может быть разделом под названием \"Получение доступа к API RuStore\"."
  },
  {
    "shortName": "/work-with-rustore-api_api-authorization-process_.txt",
    "summary": "Статья посвящена процессу авторизации и использованию принципов работы API RuStore. Описывается способ получения токена авторизации с использованием пары ключей, генерируемой в RuStore Консоли. Затем разъясняется, как использовать этот токен для доступа к возможностям API. Текст содержит подробные инструкции по созданию и изменению ключей, а также по получению и использованию токена."
  },
  {
    "shortName": "/users_purchases-and-returns_payment-method_mobile-balance.txt",
    "summary": "Статья рассказывает о возможности оплаты приложений и товаров в сервисе RuStore с баланса мобильного телефона. Описывается процесс покупки: от выбора товара до ввода номера телефона и подтверждения оплаты. Указывается, что данная оплата доступна только для пользователей операторов Билайн, Мегафон и Теле2, и оператор может удерживать комиссию. Статья также упоминает о возможности добавления номера телефона в список сохраненных способов оплаты."
  },
  {
    "shortName": "/developers_monetization_payment-callback_disable-notifications.txt",
    "summary": "Статья \"Отключение отправки уведомлений\" включает информацию о том, как настройка и отключение функции отправки уведомлений в приложении RuStore. Шаги включают вход в RuStore Консоль, выбор меню \"Монетизация\" и \"Уведомления на сервер\", и деактивацию переключателя \"Отправлять уведомления\". Документация призывает пользователей заметить, что при отключении сервиса уведомления не копятся, но в любой момент функцию можно включить, воспользовавшись RuStore API для запроса недостающей информации."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_app-publication_setting-up-publication_instant-app-publishing.txt",
    "summary": "Эта статья из документации RuStore посвящена управлению публикацией версий приложений в магазине. Освещаются два метода публикации: автоматический и ручной. В случае автоматической публикации, приложение автоматически публикуется в течение часа после прохождения модерации, и пользователь получает уведомление. В случае ручной публикации, статус версии приложения после модерации становится \"Готова к публикации\", и затем нужно нажать на кнопку \"Опубликовать\". Статья также упоминает, что можно снять текущую версию приложения с публикации, но пользователи продолжат пользоваться обновленной версией до деактивации."
  },
  {
    "shortName": "/developers_tools_app-tracer_android_start_quick-start.txt",
    "summary": "Эта статья из документации RuStore в разделе \"Начало работы\" посвящена инструкции по быстрому старту с использованием инструмента Tracer. Процесс начинается с регистрации и создания или вступления в организацию. Затем учащиеся узнают, как добавить андроид проект в систему (требуя от администратора или владельца организации), а также как включить зависимости Tracer в проект на уровне `settings.gradle` и `build.gradle`. \n\nПосле подключения зависимостей учащиеся узнают об основах конфигурации плагинов Tracer в `Application.kt`, включая стандартные параметры и возможность настройки каждого отдельного плагина. \n\nСтатья подробно описывает возможные настройки плагинов Tracer, такие как опции ядра Tracer, сборка и анализ крешей, настройка Systrace-профайлера, анализ потребления дискового пространства и семплирующий профайлер. \n\nКлючевые моменты статьи: регистрация, подключение проекта к Tracer, конфигурация плагинов, настройка параметров каждого плагина."
  },
  {
    "shortName": "/sdk_updates_unity_0-2-1.txt",
    "summary": "Статья посвящена документации по использованию библиотеки RuStore In-app updates SDK для управления обновлениями приложений. Отмечены общие сведения, пример пользовательского сценария обновлений, условия корректной работы SDK, процесс подключения SDK в проект, создание менеджера обновлений, проверка доступности обновлений, скачивание и установка обновлений, использование слушателя статуса скачивания, запуск скачивания обновления, отложенное обновление, установка обновления, обработка ошибок, список возможных ошибок и зависимости для обновления приложения."
  },
  {
    "shortName": "/developers_tools_remote-config_sdk_defold_1-0-0.txt",
    "summary": "Эта статья посвящена документации SDK и конфигурации приложения для инструмента RuStore Remote Config. SDK позволяет изменять поведение и внешний вид приложения без необходимости обновления приложения самим пользователям. Она описывает принципы работы с SDK, процесс подключения и интеграции его в проект, а также ключевые особенности и функции. Статья также дает информацию о создании и инициализации RemoteConfigClient, значениях и различиях в значениях UpdateBehaviour, принципах работы с опциональными параметрами и динамическими параметрами, а также о обратных вызовах SDK и способах получения конфигурации."
  },
  {
    "shortName": "/users_.txt",
    "summary": "Статья \"Что такое RuStore и как он работает\" представляет собой обзор российского магазина приложений RuStore. Она начинается с определения RuStore как розничного магазина приложений на Android, предлагающего почти 5 000 игр и сервисов от различных разработчиков. Затем обсуждается цель и функции RuStore - обеспечение безопасного доступа к приложениям, играм и услугам, а также возможность для разработчиков монетизировать свои приложения. Статья также описывает процесс установки и использования приложения, а также предоставляет информацию о возможности оставлять отзывы и добавлять платежные карты для удобной оплаты."
  },
  {
    "shortName": "/sdk_general-push-notifications_kotlin_2-0-0.txt",
    "summary": "Статья посвящена документации SDK универсальных push-уведомлений для Kotlin от компании RuStore версии 2.0.0. В ней описываются возможности и методы работы с несколькими провайдерами push-уведомлений в одном приложении, главными из которых являются RuStore, Firebase Cloud Messaging (FCM) и Huawei Mobile Services (HMS). \n\nСтатья содержит руководства по подключению и настройке SDK для каждого провайдера, а также инструкции по интеграции SDK в проекты на веб- и мобильных платформах. Включены примеры кода для каждого шага и описания основных методов работы с push-уведомлениями. \n\nСодержание включает в себя разделы по инициализации, проверке доступности провайдеров, управлению push-токенами и топиками. Также описывается обработка получаемых уведомлений, обработка ошибок и поддержка совместимости с другими SDK и сервисами."
  },
  {
    "shortName": "/work-with-rustore-api_.txt",
    "summary": "Статья \"RuStore API | Документация RuStore\" представляет собой подробное руководство для разработчиков и пользователей, описывающее функции и взаимодействие с API RuStore. Оно объясняет, как авторизоваться и взаимодействовать с API, а также предоставляет подробные инструкции по работе с различными элементами, такими как получением данных о платежах и подписках, загрузкой и публикацией приложений, обработкой отзывов и управлением доступами пользователей. Ключевые моменты включают методы извлечения информации о платежах и подписках, загрузки и публикации приложений, обработки отзывов и управления доступами пользователя."
  },
  {
    "shortName": "/sdk_updates_flutter_2-0-0.txt",
    "summary": "Статья посвящена документации для инструмента обновления приложений `RuStore In-app updates SDK` версии 2.0.0. В ней подробно описываются основные функции SDK, такие как поддержка актуальной версии приложения, отложенное, тихое и принудительное обновление. \n\nАвторы приводят примеры пользовательских сценариев для реализации обновлений и условия корректной работы SDK. Объясняется, как подключить пакет к проекту и как проверить наличие обновлений. \n\nДокументация также содержит информацию о статусах скачивания и установки обновлений, а также описывает сценарии отложенного, принудительного и тихого обновления. \n\nПомимо этого, в статье приведен список возможных ошибок и описаны зависимости для обновления приложения. В конце документации приведен список ссылок на другие версии SDK и предыдущие страницы документации.\n\nМожно расположить эту статью в разделе \"Документация разработчиков\" или в разделе \"RuStore SDK\" в оглавлении."
  },
  {
    "shortName": "/developers_monetization_sandbox_test-bank-cards.txt",
    "summary": "Описание статьи:\nСтатья описывает функцию тестовых банковских карт в сервисе RuStore, предназначенную для проверки оплаты. Оно включает в себя разнообразные карты для успешной оплаты, карты, которые возвращают ошибки после трех неудачных попыток, и карты с минимальным балансом. Данные карты помогают проверить работу платежной системы и выявить возможные ошибки или проблемы в процессе оплаты приложений в RuStore."
  },
  {
    "shortName": "/developers_developer-account_registration-developer_registration-fl.txt",
    "summary": "Статья пошагово описывает процесс регистрации физического лица на учет в системе RuStore. Включает инструкции по входу через VK ID или созданию нового аккаунта, выбору типа аккаунта, заполнению необходимых полей, верификации личности с помощью документа удостоверяющего личность и подписи политики конфиденциальности. Особое внимание уделено необходимости верификации для физических лиц."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_app-publication_setting-up-publication.txt",
    "summary": "Статья описывает различные способы настройки публикации приложений в RuStore: автоматическая, ручная, отложенная и поэтапная публикация. Цель - помочь разработчикам выбрать наиболее подходящий вариант публикации для оптимального контроля и управления процессом."
  },
  {
    "shortName": "/developers_tools_mytracker_quick-start.txt",
    "summary": "Содержимое статьи описывает процесс подключения и настройки нового аккаунта MyTracker в приложении RuStore. В ней объясняется, как создать аккаунт, если его еще нет, и как подключить существующий аккаунт MyTracker к приложению. Также уделено внимание процессу подключения SDK MyTracker к приложению RuStore."
  },
  {
    "shortName": "/sdk_rustore-geo_map-display-services_interactive-map_react.txt",
    "summary": "Статья описывает процесс включения React-тура в приложения, используя MMR GL JS для визуализации карт. Она начинается с создания структуры React-приложения и настройки HTML-каркаса. Затем переходит к объяснению настройки состояния приложения и отрисовки карты. Далее описывается процесс сохранения и отображения координат пользователя на карте. В конце статьи приводится примеры кода, необходимого для реализации этих шагов в приложении."
  },
  {
    "shortName": "/sdk_payments_unity_3-1-0.txt",
    "summary": "Статья содержит подробные инструкции по интеграции, использованию и настройке платежного SDK для мобильных приложений, разработанного компанией RuStore. Она включает в себя следующие ключевые разделы:\n\n1. **Проверка доступности работы с платежами** - объясняет, как проверить, может ли приложение использовать платежные функции RuStore.\n\n2. **Работа с SDK** - описывает, как включить SDK, как получить список продуктов и покупок, как получить информацию о конкретной покупке, как покупать продукты и подтверждать покупки, а также как отменить покупку.\n\n3. **Обработка ошибок** - предоставляет список возможных ошибок и инструкции по их обработке.\n\n4. **Инициализация и подготовка к работе** - объясняет, как инициализировать SDK и подготовить проект для использования платежных функций.\n\n5. **Обработка deeplink** - дает инструкции по правильной обработке deeplink для реализации оплаты через сторонние приложения.\n\n6. **Смена темы интерфейса** - предлагает методы для динамической смены темы интерфейса в приложении.\n\n7. **Подтверждение покупки** и **Отмена покупки** - описывают процесс подтверждения и отмены покупок.\n\nЭта статья является обучающим ресурсом для разработчиков, которые хотят интегрировать платежные функции в свои мобильные приложения с использованием SDK от RuStore."
  },
  {
    "shortName": "/sdk_rustore-geo_map-display-services_interactive-map_options#paddingoptions-%D0%B3%D1%80%D1%83%D0%BF%D0%BF%D0%B0-%D0%BF%D0%B0%D1%80%D0%B0%D0%BC%D0%B5%D1%82%D1%80%D0%BE%D0%B2.txt",
    "summary": "Статья в описании SDK (Software Development Kit) RuStore описывает различные свойства и опции, которые могут быть использованы при работе с GL JS картами. Структура документации включает в себя такие разделы, как accessToken для доступа к карте, baseApiUrl для API URL, workerCount для количества веб-воркеров, maxParallelImageRequests для максимального количества параллельно загружаемых изображений и другие параметры, такие как supported, version, setRTLTextPlugin и getRTLTextPluginStatus для работы с арабским и еврейским языками, а также функции для очистки кэша и обновления SDK. Документация также описывает группы параметров, такие как AnimationOptions для управления анимацией, CameraOptions для настроек камеры и PaddingOptions для настроек отступов. Статья также подробно описывает спецификации для разработчиков как StyleImageInterface для динамически генерируемых изображений и CustomLayerInterface для кастомизации стиля слоев. Ключевые мысли в статье - это предоставление информации для разработчиков о различных функциях и опциях SDK, которые могут быть использованы для настройки и интеграции GL JS карт в приложения."
  },
  {
    "shortName": "/sdk_updates_godot_1-0-0.txt",
    "summary": "Эта статья представляет собой документацию для инструмента обновления приложений RuStore. Основные темы включают интеграцию SDK обновлений в проект, условия корректной работы SDK, методы подключения, создание и использование менеджера обновлений, процесс проверки доступности обновления, стадии скачивания и установки обновления, а также способы обработки ошибок. Статья также описывает различные сценарии обновления: отложенное, тихое и принудительное, и проходит по шагам по подготовке и выполнению этих сценариев."
  },
  {
    "shortName": "/developers_developer-statistics_push-notification-stat.txt",
    "summary": "Статья посвящена анализу статистики push-уведомлений в RuStore Консоли. Основные ключевые мысли: статистика рассчитывается на основе данных для каждого приложения с push-уведомлениями; для просмотра статистики необходимо открыть Консоль RuStore, выбрать \"Приложения\" и перейти на вкладку \"Push-уведомления → Статистика по Push-уведомлениям\". Статистика включает количество отправленных и доставленных уведомлений, а также пользователей, перешедших в приложение по нажатию на уведомление. Данные доступны для просмотра по различным периодам времени."
  },
  {
    "shortName": "/sdk_updates_kotlin-java_3-0-0.txt",
    "summary": "Статья посвящена инструкциям по интеграции и использованию обновления приложений через SDK RuStore для разработчиков мобильных приложений. Она делится на разделы, включая общие сведения о функции поддержки актуальной версии приложения, примеры пользовательских сценариев (отложенное, тихое и принудительное обновление), условия корректной работы SDK, подключение SDK к проекту, создание менеджера обновлений, проверку наличия обновлений, скачивание и установку обновлений, использование слушателя для контроля статуса скачивания обновлений, удаление слушателя статуса, запуск скачивания обновлений, различные сценарии обновления (отложенное, принудительное и тихое), а также установка обновлений и обработка ошибок."
  },
  {
    "shortName": "/sdk_push-notifications_godot_1-0-0.txt",
    "summary": "Содержимое статьи описывает интеграцию и использование SDK (Software Development Kit) для работы с push-уведомлениями в приложениях Godot Engine, которое предлагается компанией RuStore. Описывается процесс получения и отправки push-уведомлений, а также спецификации для работы с ними в Godot Engine, включая подготовку проекта, настройку манифеста приложения, инициализацию SDK, и как следить за правильной работой push-уведомлений.\n\nТекст содержит руководство по подключению и использованию SDK для Godot Engine, включая процесс инициализации, работы с токенами и топиками, проверки возможности получения уведомлений, а также работу с уведомлениями в Android 13+ и обработку ошибок. Он также объясняет, как создать каналы для отправки уведомлений и как открыть активити при нажатии на уведомление.\n\nТекст предоставляет подробные инструкции для разработчиков, включая примеры кода, чтобы помочь им интегрировать SDK в свои приложения."
  },
  {
    "shortName": "/sdk_rustore-geo_routing-services_distance-matrix.txt",
    "summary": "Статья включает подробное объяснение о сервисе \"Матрица расстояний\" в мобильном SDK RuStore. Описывается, как сервис позволяет рассчитывать время и расстояние между парами точек отправления и назначения, включая поддержку разных типов запросов (один ко многим, многие ко многим и многие к одному). Следует указать, что обязательными для запроса являются ключевые параметры URL, такие как API-ключ и данные о точках отправления и назначения. В теле запроса также необходимы обязательные поля, включая тип транспорта, идентификатор запроса и опции расчета маршрута. Дополнительные параметры включают единицы измерения расстояния и ограничения маршрута. В ответе сервис вернет идентификатор запроса, данные о точках отправления и назначения, рассчитанную матрицу расстояний и времени, а также общую длину маршрута и его общее время выполнения."
  },
  {
    "shortName": "/developers_tools_remote-config_how-it-works.txt",
    "summary": "Статья \"Принцип работы RuStore Remote Config: основы и применение\" посвящена работе инструмента для динамической конфигурации приложений компании RuStore. Эта документация объясняет, как приложение должно быть адаптировано для работы с RuStore Remote Config, и как при запуске SDK отправляет запрос в RuStore и получает конфиг в виде JSON. Конфиг содержит параметры, влияющие на поведение приложения, и приложение сохраняет хэш этого конфига для последующих запросов. Затем, Remote Config сравнивает полученный хэш с хэшем конфига, который нужно отдать, и возвращает \"not modified\" если конфиг не изменился. Получив конфиг, приложение отрисовывает интерфейс или изменяет фичи в соответствии с параметрами конфига. Важно отметить, что изменения в интерфейсе в реальном времени не будут видны пользователям, они появятся только после перезапуска приложения."
  },
  {
    "shortName": "/users_purchases-and-returns_payment-history.txt",
    "summary": "Статья описывает функционал \"История платежей\" в приложении RuStore - как просмотреть список покупок, списания по подпискам и возвраты средств. В статье изложены шаги для просмотра истории платежей, получение сведений о платеже и чека о покупке. Также уточняется, как просмотреть историю возвратов платежей и как отличить возврат от обычного платежа."
  },
  {
    "shortName": "/sdk_reviews-ratings_defold_2-0-0.txt",
    "summary": "Статья \"RuStore In-app Review SDK\" обсуждает интеграцию инструмента от Rozdil, который позволяет пользователям приложения оставлять отзывы и оценки встроенными функциями без необходимости покидать приложение. Описание включает в себя общие сведения об SDK, примеры его использования и инструкции по интеграции. Пользователи узнают, как правильно задействовать оценки и отзывы, придерживаясь определенных рекомендаций и условий работы SDK. Статья также описывает процесс работы с оценками и обработку возникающих ошибок."
  },
  {
    "shortName": "/sdk_updates_defold_1-0-1.txt",
    "summary": "Статья содержит инструкцию по использованию SDK обновлений для приложений от RuStore. Основные темы включают подключение SDK, инициализацию менеджера обновлений, проверку наличия обновлений, функции скачивания и установки обновлений, а также различные сценарии обновления: отложенный, тихий и принудительный. Статья также объясняет работу с обратными вызовами и обработку ошибок. Структура статей соответствует процессу интеграции SDK и его использования в разработанном приложении."
  },
  {
    "shortName": "/sdk_reviews-ratings_react_1-0-0.txt",
    "summary": "Эта статья является технической документацией по интеграции RuStore In-app Review SDK в приложение. SDK позволяет пользователям оставлять оценки и отзывы непосредственно в приложении, не выходя из него. Статья содержит информацию о назначении и принципах работы SDK, сценариях использования, условиях корректной работы, рекомендациях к дизайну и инструкциях по подключению в проект. Также описывается работа с оценками и обработка возможных ошибок."
  },
  {
    "shortName": "/developers_tools_remote-config_sdk_kotlin_1-1-1.txt",
    "summary": "Статья посвящена документации SDK и API облачного сервиса RuStore Remote Config. Этот сервис позволяет изменять поведение и внешний вид приложений без необходимости обновлять саму приложение. Она включает в себя описание процесса интеграции SDK, обзор ключевых функций и методов, а также определение различных политик обновления конфигурации. Статья включает в себя подробные инструкции по созданию RemoteConfigClient, конфигурации параметров, обработке ошибок и получению конфигурации, а также обсуждает концепцию фоновой синхронизации конфигурации."
  },
  {
    "shortName": "/developers_tools_remote-config_sdk_react.txt",
    "summary": "Статья посвящена работе с функцией React Native Remote Config в разработке приложений. Она объясняет процесс создания и инициализации RemoteConfigClient, получение конфигурации, фоновую синхронизацию и обработку ошибок SDK RemoteConfig. Основные ключевые мысли включают в себя методы эффективного использования React Native для работы с Remote Config."
  },
  {
    "shortName": "/developers_monetization_enable-monetization.txt",
    "summary": "Статья \"Подключение монетизации в RuStore - шаг за шагом руководство\" пошагово описывает процесс подключения монетизации для юридических лиц в магазине приложений RuStore. В ней детально разъясняются требования к электронной подструктуре (УКЭП) и машинночитаемой доверенности (МЧД), необходимые для оформления заявления. Статья также указывает на специфические условия для юридических лиц, зарегистрированных в РФ, и предлагает руководство по заполнению заявления и его подтверждению через с помощью специализированных программ. В конце приводятся ссылки на дополнительную информацию по монетизации в других категориях и приглашение к скачиванию образца заявления."
  },
  {
    "shortName": "/developers_monetization_create-paid-product-in-application.txt",
    "summary": "Статья \"Как создать платный товар в приложении\" в руководстве по монетизации в RuStore предлагает шаги по созданию платных товаров в приложении. Оно начинается с открытия консоли RuStore, переключения на приложения и перехода в раздел \"Монетизация\" для выбора \"Разовые покупки\". Затем пользователь создает новый товар, вводит его информацию и публикует его. Постепенное руководство включает в себя иностранные и русские языки, а также поддерживает возможность редактирования информации о товаре перед публикацией."
  },
  {
    "shortName": "/users_authorization_without-authorization.txt",
    "summary": "Статья \"Использование RuStore - Возможности без авторизации и безопасность\" обсуждает функции платформы RuStore для пользователей, не прошедших процедуру авторизации. Она подчеркивает возможности использования сервиса без регистрации, такие как загрузка и обновление бесплатных игр и приложений, просмотр оценок и отзывов к приложениям и использование антивирусного сканера Kaspersky. Важность авторизации обсуждается в контексте установки платных приложений и внесения отзывов."
  },
  {
    "shortName": "/work-with-rustore-api_api-feedback-process_get-feedback.txt",
    "summary": "Статья представляет собой документацию по API методу получения отзывов приложения в системе RuStore. Описание включает в себя технические детали и спецификации API, такие как параметры запроса и ответа. Метод позволяет получить список отзывов для приложения, отображая до 100 отзывов на странице с возможностью настройки параметров пагинации и фильтрации. В ответ на запрос возвращаются основные данные отзывов, включая имя автора, оценку, дату публикации, текст отзыва, количество лайков и дизлайков. Документация также включает примеры запросов и ответов для наглядности процесса взаимодействия с API."
  },
  {
    "shortName": "/users_start_parental-control.txt",
    "summary": "Статья \"Детский режим в RuStore - включение, настройка пин-кода и возрастные ограничения\" раскрывает процедуры включения и настройки режима контроля для детей в приложении RuStore. Включает шаги по установке пин-кода и разделение приложений по возрастным категориям. Также предложены инструкции для изменения пин-кода и восстановления его при забывании, а также сведения о возможности отключения режима. Упоминаются ограничения, включая невозможность совершать покупки или устанавливать приложения по внешним ссылкам без ввода пин-кода."
  },
  {
    "shortName": "/developers_tools_remote-config_sdk_defold_history.txt",
    "summary": "Статья \"История обновлений\" из документации для разработчиков RuStore описывает все внесенные изменения и обновления в версиях SDK и конфигурации приложения Remote Config. В статье подробно описываются улучшения и исправления, внесенные в версии 1.1.1, 1.1.0 и 1.0.0. Включены также сведения о новых функциях, таких как подключение IOS-приложений и работа с параметрами и условиями в Remote Config."
  },
  {
    "shortName": "/sdk_updates_defold_3-0-0.txt",
    "summary": "Статья посвящена документации инструмента обновления приложений `RuStore In-app updates SDK`. В ней подробно описываются возможности SDK по обеспечению обновлений приложений на устройствах пользователей, а также шаги по его интеграции в проекты. Основные сценарии использования SDK приведены в виде примеров: отложенное, тихое и принудительное обновление приложений, где каждый из них подразумевает разное поведение приложения и пользовательского интерфейса. \n\nОсновные ключевые мысли включают: поддержание актуальности приложения, использование SDK для легкого и быстрого обновления приложения, интеграция SDK в разные среды для разработки (Kotlin/Java, Unity, Godot, React Native, Flutter, Unreal Engine, Defold) и описание основных методов и функций SDK, а также их параметры и возвратные значения.\n\nСтатья может быть размещена в разделе \"Документация разработчика\" или подразделе \"SDK для разработчиков\" в оглавлении."
  },
  {
    "shortName": "/sdk_rustore-geo_map-display-services_interactive-map_events#maptouchevent.txt",
    "summary": "Статья посвящена контексту и деталям работы событий в системе карт и геосервисов RuStore SDK. Она обсуждает методы добавления и удаления слушателей событий, а также обсуждает различные виды событий, связанных с мышью, касаниями, \"boxzoom\", данными и волком. Каждое событие обозначено своими свойствами и методами, такими как 'lngLat', 'originalEvent' и 'preventDefault()'. Статья также включает примеры применения этих событий в контексте React-приложений."
  },
  {
    "shortName": "/users_authorization_login-alfa-id.txt",
    "summary": "Статья посвящена процессу авторизации в системе RuStore через Альфа Банк. Она подробно объясняет, как перейти к авторизации, выбрав \"Войти в аккаунт\" на домашнем экране устройства, и далее шаг за шагом упрощает процесс: от выбора \"Alfa ID\", до ввода кода из SMS для подтверждения номера телефона."
  },
  {
    "shortName": "/users_purchases-and-returns_payment-method_fast-payment.txt",
    "summary": "Статья описывает процесс оплаты приложений и товаров внутри приложений через систему быстрых платежей (СБП). Включает инструкции по привязке банковских карт и подключению карт VK ID, Сбер ID и настройке способы оплаты. Оплата происходит через мобильное приложение банка, после выбора банка для оплаты. Статья включается в раздел \"Оплата через СБП\" в оглавлении."
  },
  {
    "shortName": "/sdk_payments_dependencies.txt",
    "summary": "Статья предоставляет список зависимостей для SDK RuStore, требуемых для работы приложений на различных платформах (Kotlin/Java, Unity, Godot, React Native, Flutter, Unreal Engine, Defold) и для поддержки функций вроде платежей in-app, подписок, push-уведомлений и обновлений приложения. Все зависимости основаны на различных лицензиях Apache Software License."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_app-publication_apk-signature.txt",
    "summary": "Статья \"Работа с подписями APK в RuStore\" обсуждает принципы работы с цифровыми подписями в приложениях Android для публикации в магазине приложений RuStore. Она раскрывает, что каждое приложение APK должно быть подписано цифровым сертификатом для идентификации автора, и подчеркивает важность хранения этого сертификата с такой же степенью защиты, как личные данные. \n\nСтатья включает информацию о том, как Android использует цифровые отпечатки сертификатов для проверки версий приложений и о том, что подпись файла ААВ загружается отдельно. Она обсуждает, когда и почему может возникнуть проблема с обновлением приложений из-за использования разных подписей в различных сторах, и рекомендует способы решения этой проблемы, включая использование одного сертификата для всех версий приложения, обновление подписи через службу поддержки RuStore или использование Google Play App Signing, если такая опция доступна.\n\nВ конце статьи приведены советы по работе с разными подписями при публикации приложений в RuStore и Google Play."
  },
  {
    "shortName": "/developers_developer-account_registration-developer_registration_#%D0%BA%D0%B0%D0%BA-%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%B8%D1%82%D1%8C-%D0%BF%D0%BB%D0%B0%D0%B3%D0%B8%D0%BD-%D0%BA%D1%80%D0%B8%D0%BF%D1%82%D0%BE%D0%BF%D1%80%D0%BE.txt",
    "summary": "Статья \"Регистрация юридических лиц и ИП в RuStore Консоль - подробная инструкция\" описывает пошаговый процесс регистрации юридических лиц и индивидуальных предпринимателей в системе RuStore Консоль. Статья начинается с инструкций по входу в систему через VK ID и регистрации нового аккаунта, если его еще нет. Затем приводятся шаги по заполнению необходимых полей при регистрации, выбору сертификата подписи и установке плагина КриптоПро для проверки и подтверждения регистрации. В конце статьи представлены подробности по установке плагина КриптоПро, который необходим для компаний, зарегистрированных в России. В целом, статья предназначена для гидов по регистрации в RuStore Консоль и поддерживает оффер \"Начало работы\" в оглавлении."
  },
  {
    "shortName": "/sdk_updates_unreal_history.txt",
    "summary": "Статья \"История обновлений\" включает в себя подробный лог изменений и улучшений в SDK и API RuStore по версиям 3.0.0, 2.0.0, 1.0.1 и 1.0.0. Излагаются аспекты, такие как обновления методов установки обновлений, добавление исходного кода и асинхронных вариантов методов, исправления в перечислениях ошибок и состояний, а также изменения в файле конфигурации."
  },
  {
    "shortName": "/users_authorization_login-gosuslugi-id.txt",
    "summary": "Статья описывает процесс авторизации в приложении RuStore через Госуслуги. Она пошагово объясняет, как пользователь должен нажать на кнопки \"Войти в аккаунт\" и \"Госуслуги\", ввести учетные данные, получить и ввести код подтверждения из SMS, а также ввести пароль от своего аккаунта VK ID или код push-уведомления."
  },
  {
    "shortName": "/work-with-rustore-api_api-access-control_access-details.txt",
    "summary": "Статья посвящена методу в API RuStore для получения информации о выданных доступах по приложению. Она подробно описывает параметры взаимодействия, такие как URL, параметры запроса и ответа, а также предоставляет код запроса и ответа в примерах."
  },
  {
    "shortName": "/users_app-management_app-from-rustore.txt",
    "summary": "Эта статья является практическим руководством по установке приложений из RuStore. Она включает подразделы об авторизации, настройке установки приложений из внешних источников, установке и обновлении приложений, проверке их безопасности, письме отзывов и использовании мини-приложений VK. Статья также описывает процесс покупок и возвратов, а также политику и правила RuStore. В оглавлении подойдет под раздел \"Управление приложениями\" или \"Инструкции по установке и использованию приложений в RuStore\"."
  },
  {
    "shortName": "/developers_advertising-and-promotion_rustore-button.txt",
    "summary": "Статья \"Добавление кнопки «Скачайте из RuStore»: инструкция и примеры\" излагает методы и инструкции по включению кнопки \"Скачайте из RuStore\" на веб-сайтах и ресурсах для привлечения пользователей к приложению. Описывается процесс выбора и загрузки двухцветной или одноцветной версии логотипа кнопки, а также инструкции по вставке кода на веб-сайт с указанием ссылки на приложение и расположением кнопки. Статья рекомендует размер изображения для оптимального отображения и включает примеры использования."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_requirement-apps.txt",
    "summary": "Статья \"Гайд по требованиям к приложениям в RuStore\" содержит перечень необходимых и обязательных требований для приложений, которые целят публикацию в RuStore. Главные разделы этой инструкции относятся к работе приложения (работоспособность, содержание, безопасность и защита пользователей, конфиденциальность данных устройства), типу приложения (платные или бесплатные), названию и описанию, а также требованиям к иконке и скриншотам.\n\nС начала статьи акцентируется внимание на стабильной работе приложения и его корректной функциональности, отсутствии рекламы и возможности авторизации без сторонних ресурсов. Указываются также специфические требования, например, приложения не могут содержать ссылок на сторонние магазины приложений или витрины, а также должны быть адаптированы под большинство современных мобильных устройств.\n\nДалее статья описывает ограничения на содержимое приложения и ожидания по его безопасности, включая правила относительно конфиденциальности и защиты пользовательских данных. Также оговариваются предельные условия и требования к типу приложения, включая платные приложения и возможность предоставления информации о платежах и возвратах.\n\nДля названия и описания приложения выделены специфические требования по использованию русского языка, отсутствию товарных знаков, ссылок на сторонние магазины и оскорблений. \n\nСтатья также устанавливает правила для иконки и скриншотов приложения, включая запрет на имитацию иконок государственных приложений, использование товарных знаков и ограничение использования артов без связи с интерфейсом. \n\nВ заключении, статья подчеркивает необходимость соблюдения всех указанных требований для успешной публикации приложения в RuStore."
  },
  {
    "shortName": "/work-with-rustore-api_api-subscription-payment_api-token-substatus-method_.txt",
    "summary": "Статья посвящена методу получения статуса подписки в API RuStore. Она описывает, как правильно запросить информацию о статусе подписки по токену подписки, используя оба вида API - публичный и для тестирования. Представлены параметры взаимодействия, ответа, включая коды ответа и статус подписки. Представлены также примеры успешного и ошибочного ответа, а также валидация запроса с указанием требований."
  },
  {
    "shortName": "/developers_monetization_monetization-report.txt",
    "summary": "Статья описывает процесс подготовки и использования отчета по монетизации в системе RuStore для контроля и анализа доходов от продаж приложений. Отчет включает детализированные данные о платежах, возвратах, вознаграждении компании и долге перед ней, а также инструкции по его расчету. Это руководство поможет пользователям понять и интерпретировать свои финансовые данные, обеспечивая прозрачность и контроль за финансовыми операциями. Отчеты предоставляются разработчикам ежемесячно и включают в себя важные параметры, такие как начальный и конечный баланс, общие и перечисленные платежи, вознаграждение компании и возвраты."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_app-publication.txt",
    "summary": "Статья посвящена процессу публикации приложений в RuStore. Основной фокус - на шагах загрузки и проверки приложений, а также на требованиях к файлам (.apk и .aab), их размерах, подписи и иконке. Также представлены инструкции по заполнению информации об приложении, включая наименование, категорию, возрастное ограничение, описание и медиафайлы, такие как скриншоты и видео. Статья завершается разделами о создании и редактировании черновиков версий приложений и о требованиях к добавлению разработчиков."
  },
  {
    "shortName": "/developers_tools_remote-config_ab-testing_metric-create.txt",
    "summary": "Статья посвящена процессу создания метрик в сервисе RuStore Remote Config. Процесс включает в себя подключение к MyTracker, переход во вкладку \"Метрики\", добавление новой метрики и указание ее названия и типа. Типы метрик представлены различными критериями: день-фунал, соотношение, пропорция, остаток, среднее число действий в уникальных событиях и среднее число посещений в уникальных событиях. Статья также упоминает, что при указании параметра для события, оно должно совпадать с указанным в MyTracker. Если нет параметра в MyTracker, его невозможно указать для события. Статья содержит иллюстрации и предупреждения об условиях использования сервиса и конфиденциальности."
  },
  {
    "shortName": "/sdk_general-push-notifications_kotlin_history.txt",
    "summary": "\"История обновлений\" документации RuStore включает в себя подробный отчет о всех внесенных изменениях и обновлениях в SDK RuStore начиная с версии 1.0.0 до 2.2.0. В статье отмечены обновления SDK, включая интеграцию универсальных push-уведомлений, подключение отзывов и оценок, обновление приложения, работу со встроенной геосервисами и другими функциями. Упомянуты и изменения в Task API, обновление версии ru.rustore.sdk:core и потенциальная несовместимость с другими SDK."
  },
  {
    "shortName": "/sdk_reviews-ratings_flutter_1-0-0.txt",
    "summary": "Документация описывает интеграцию ruStore In-app Review SDK в приложение. SDK позволяет пользователям оставлять отзывы и оценки прямо в приложении, без необходимости покидать его. Документация включает в себя общий обзор, примеры реализации, условия использования, рекомендации по дизайну, инструкции по подключению и работе с SDK. Также приведены возможные ошибки и информацию о работе с оценками."
  },
  {
    "shortName": "/work-with-rustore-api_api-feedback-process_get-csv-feedback.txt",
    "summary": "Статья \"Получение отзывов в формате .csv\" входит в раздел RuStore API и посвящена методу получения отзывов, записанных в CSV-формате. В ней обсуждаются ограничения для выбора периода времени, в течение которого нужно выгрузить отзывы, а также описываются параметры взаимодействия и ответа при использовании этого метода. Статья также объясняет структуру файла CSV, включающую такие поля, как имя приложения, версия приложения, дата и время публикации отзыва, статус модерации и другие детали. В конце статьи приведен пример запроса и даны ссылки на другие страницы с описанием связанных методов работы с отзывами."
  },
  {
    "shortName": "/sdk_rustore-geo_map-display-services_static-map_collection-of-pins.txt",
    "summary": "Статья \"Коллекция булавок\" из документации RuStore SDK описывает различные типы булавок, используемых в сервисах отображения карт. Она объясняет, как создавать и использовать булавки, включая указание на дополнительные булавки, доступные по запросу. Текст также упоминает о ограничениях при использовании некоторых сервисов и предлагает обратиться в поддержку RuStore для получения дополнительных булавок."
  },
  {
    "shortName": "/sdk_payments_payment-issues-faq.txt",
    "summary": "Статья содержит вопросы и ответы по использованию и настройке RuStore SDK. Основные темы включают: проблемы с модерацией приложений, авторизацию и ошибки авторизации, проблемы с подписями в приложениях, обработка ошибок при покупке и продаже товаров, серверная валидация покупки, обработка 404 ошибок, проблемы с методами confirmPurchase и deletePurchase, проверка совпадения консольного id приложения и id из консоли RuStore, методы отмены подписки, использованием и совместимостью с другими SDK, различия между Java и Kotlin, типы покупок, которые нужно подтверждать, и разные аспекты работы с приложениями в различных магазинах."
  },
  {
    "shortName": "/sdk_push-notifications_godot_history.txt",
    "summary": "Содержимое статьи представлено в форме истории обновлений для SDK и API RuStore. Документ подробно описывает каждое обновление с указанием версии SDK и обновленных функций. Ключевые мысли включают обновления в области push-уведомлений, работу с пользовательскими сегментами, улучшения в обработке ошибок и усовершенствования в областях, связанных с Godot и другими SDK."
  },
  {
    "shortName": "/sdk_rustore-geo_map-display-services_interactive-map_geometry.txt",
    "summary": "Статья посвящена подробному описанию объектов и методов, используемых в географических и геометрических операциях в API мобильного SDK компании RuStore. В частности, она объясняет работу объектов `LngLat` (долгота и широта), `LngLatBounds` (область в географических координатах), `Point` (точка на карте), `MercatorCoordinate` (координаты в системе меркатора) и `EdgeInsets` (отступы для вьюпорта). Документация включает в себя описание параметров этих объектов, их статических методов и методов экземпляра. Также рассматривается концепция `LngLatLike` и `LngLatBoundsLike`, представляющих гибкие типы данных для обработки координат. Важные аспекты, такие как преобразование координат и расстояний, включены в разделы обработчиков и источников."
  },
  {
    "shortName": "/sdk_rustore-deeplinks.txt",
    "summary": "Статья \"RuStore Deeplinks\" объясняет, как использовать deeplinks для открытия определенных экранов приложения RuStore из других приложений. Основные ключевые мысли включают: использование deeplinks для открытия экранов в RuStore, поддерживаемые браузеры, список доступных deeplinks и их назначение. Статья также содержит информацию о совместимости с другими SDK и предоставляет информацию об истории изменений и поддержке конфиденциальности и пользовательского соглашения."
  },
  {
    "shortName": "/users_authorization_trust-rustore.txt",
    "summary": "Статья \"Можно ли доверять RuStore - Защита и безопасность в магазине приложений\" освещает вопросы доверия и безопасности в магазине приложений RuStore. Основные ключевые мысли включают поддержку законодательства РФ, минимизацию сбора данных, использование современных технологий для защиты и резервирования данных, регулярные внутренние учения, имитацию атак и участие в программе \"bug bounty\". Статья обсуждает процедуры идентификации для партнеров и антивирусную проверку приложений для обеспечения защиты пользователей. Также затрагиваются вопросы обработки споров по вопросам оплаты, оценки приложений на соответствие законодательству и читаемости отзывов. Важное внимание уделено безопасности при установке приложений с официального сайта, подчеркивая, что приложения для Android полностью безопасны."
  },
  {
    "shortName": "/work-with-rustore-api_api-upload-publication-app_get-version-status.txt",
    "summary": "Статья посвящена методу получения статусов версий приложений в SDK RuStore, включая необходимые параметры запроса и ответа. Описывается ограничение на количество версий, которые могут отображаться на одной странице, и условия использования пагинации и фильтрации. Указываются атрибуты взаимодействия GET для запроса и атрибуты ответа, включая статус версии, номер версии, настройки публикации и другие метаданные. Приведены примеры запроса и ответа в JSON формате."
  },
  {
    "shortName": "/developers_developer-statistics_monetization-stat_.txt",
    "summary": "Статья посвящена использованию финансовых данных и статистики по монетизации в Консоли RuStore. Цель - показать, как анализировать доходы и возвраты приложений с помощью встроенной статистики, включая статистику по платежам, возвратам и монетизации. Основные моменты статьи включают описание необходимых условий для просмотра статистики по монетизации, инструкции по просмотру статистики и условия отображения данных для статистики по платежам."
  },
  {
    "shortName": "/sdk_push-notifications_topic-notifications.txt",
    "summary": "Статья посвящена API для отправки push-уведомлений по топикам в системе RuStore. В ней описываются основные аспекты работы с топиками, такие как получение необходимых артефактов (project_id и ss_token), а также процедуры подписки на и отписки от топика. Далее представлены детали в запросах и ответах для отправки push-уведомлений в топик, подписки на и отписки от топика. Каждая процедура сопровождается примерами запросов и ответов. В конце статьи приведены примеры ошибок, которые могут возникнуть при выполнении операций."
  },
  {
    "shortName": "/developers_monetization_monetization-foreign-company.txt",
    "summary": "Статья \"Монетизация для нерезидентов в RuStore - подключение и управление\" подробно описывает процесс подключения монетизации для иностранных компаний в системе RuStore. Основные моменты включают: условия подключения, необходимые документы и данные (торговое и юридическое название компании, контактные данные, бухгалтерские отчеты и банковские реквизиты), а также процедуру подачи заявки. Также упоминается взимаемая комиссия и порядок конвертации валюты при выплате, а также важность ознакомления с и подписания дополнительного соглашения. В конце статьи приведены рекомендации по обращению с возможными вопросами и проблемами."
  },
  {
    "shortName": "/sdk_reviews-ratings_unity_2-0-0.txt",
    "summary": "Статья посвящена документации для разработчиков, описывающей интеграцию и использование SDK для получения отзывов и оценок пользователей в приложении через платформу RuStore. Основные разделы включают обзор функционала SDK, примеры его визуализации, условия для правильной работы SDK, рекомендации по дизайну процесса, инструкции по подключению SDK, а также руководство по работе с оценками и обработке ошибок."
  },
  {
    "shortName": "/sdk_updates_godot_3-0-0.txt",
    "summary": "Статья описывает функционал и использование библиотеки RuStore In-app updates SDK, которая позволяет поддерживать актуальную версию приложения на устройствах пользователей. Это включает в себя различные способы обновления приложения, такие как отложенное, тихое и принудительное обновление. \n\nВ статье подробно описываются шаги интеграции SDK в проект, а также процесс создания менеджера обновлений и взаимодействия с ним для проверки и скачивания обновлений. \n\nТакже, статья подробно разбирает методы и классы SDK, включая проверку наличия обновлений, скачивание и установку обновлений, а также обработку возможных ошибок. Эта информация полезна для разработчиков, которые хотят интегрировать поддержку обновлений в свои приложения. \n\nВ конце статьи приведены примеры сценариев использования SDK, в том числе использование слушателей для отслеживания статуса скачивания и установки обновлений.\n\nСтатья может быть расположена в разделе \"Документация разработчиков\" или \"Руководства по интеграции\" в оглавлении."
  },
  {
    "shortName": "/developers_monetization_monetization-self-employed#%D0%BF%D0%BE%D1%80%D1%8F%D0%B4%D0%BE%D0%BA-%D0%B2%D1%8B%D0%BF%D0%BB%D0%B0%D1%82.txt",
    "summary": "Статья описывает процесс подключения и настройки монетизации для самозанятых в RuStore. Она объясняет, кто может подключить монетизацию и как это делать, делится информацией о подключении \"VK Pay Самозанятые\" и добавлении карты для выплат. Страница также описывает порядок выплат, что делать, если выплаты не приходят, и упоминает ограничения для самозанятых."
  },
  {
    "shortName": "/sdk_updates_unity_3-0-0.txt",
    "summary": "Статья подробно описывает инструменты обновления для приложений RuStore. Внеся упор на интеграцию и использование SDK для Android, статья также обсуждает различные сценарии обновления, включая отложенное, тихое и принудительное обновления. Важные аспекты включают подключение SDK в проект, создание менеджера обновлений, проверку наличия обновлений и установку обновлений. Статья также затрагивает ошибки и их обработку. В заключении, приводится список зависимостей для обновления приложения. Эта информация может быть полезна для разработчиков, которые хотят интегрировать обновление приложений в свои проекты."
  },
  {
    "shortName": "/work-with-rustore-api_api-subscription-payment_api-token-subget-approve.txt",
    "summary": "Статья \"Подтверждение получения подписки\" включает в себя информацию об API-методе для подтверждения выдачи контента по подписке. Этот процесс не является обязательным для работы подписок. Документация описывает необходимые параметры для запроса и ответа, а также валидацию запроса. Имеются примеры ответов, включая успешный и ошибочный."
  },
  {
    "shortName": "/sdk_rustore-geo_map-display-services_interactive-map_sources.txt",
    "summary": "Статья посвящена разделу \"Источники\" (Sources) в пользовательской документации RuStore. Она подробно объясняет, как добавлять и управлять различными типами источников данных на карте, включая GeoJSONSource, VideoSource, ImageSource и CanvasSource. Для каждого типа источника приведены примеры использования, описания методов и параметров. Статья подходит для чтения разработчиками и пользователями RuStore, стремящимися глубже понять работу SDK и карты."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_paid-app.txt",
    "summary": "Эта статья в описании ревью процесса монетизации приложений в системе RuStore, фокусируясь на платных приложениях. Она объясняет, как разработчики могут добавить монетизацию в свои приложения, указывая на выбор типа приложения (Универсальный или Только для ТВ) и настройку цены. Также приводится информация о том, как изменить цену приложения, а также указывается, что комиссия RuStore составляет 15% от дохода разработчика. Статья включает в себя руководства по изменению цен и опубликованию приложений, а также ссылки на другие разделы документации."
  },
  {
    "shortName": "/sdk_rustore-geo_maps-mobile-sdk_mobile-sdk-ios.txt",
    "summary": "Статья посвящена инструкции по интеграции и использованию Maps Mobile SDK для iOS разработчиков. В ней подробно описаны шаги по установке SDK с помощью Swift Package Manager, а также преимущества этого метода. Далее, проходит пошаговая инструкция по созданию и конфигурации объекта `MapView`, включая указание API-ключа, координат, начального уровня зума и стиля тайлов. \n\nДалее, описываются методы управления картой, включая установку текущих координат и направления пользователя, управление камерой с помощью функции `flyTo`, настройку направления карты, фиксацию севера карты сверху, скрытие маркера текущей локации и установку уровня зума. \n\nСтатья также обсуждает различные режимы следования, дополнительные возможности карты, такие как управление элементами управления, настройка вида логотипа, включая его выравнивание и умение его учитывать при наличии уведомлений. \n\nТема статьи также включает детальное описание работы с маркерами, включая добавление, удаление, настройку выравнивания и отслеживание события нажатия на маркер. \n\nВ разделе \"GeoJSON\" описываются методы отрисовки полигонов и линий из GeoJSON источника на карте, включая добавление источника данных, отрисовку слоев и настройку цвета, прозрачности и других параметров.\n\n\"Пробки и изолинии\" обсуждают функции отображения пробок на дорогах, линий метро и уровней высот (изолинии) на карте. \n\nТакже в статье приводится информация о геокодировании, обработка ошибок, а также описывается интеграция Maps SDK в SwiftUI. В конце статьи приведены ограничения использования Maps SDK."
  },
  {
    "shortName": "/sdk_reviews-ratings_flutter_0-0-3.txt",
    "summary": "Статья посвящена интеграции SDK оценок и отзывов от RuStore в приложение. Оно позволяет пользователям оценивать и оставлять отзывы о приложении прямо из него. Статья объясняет принципы работы, условия, при которых SDK функционирует корректно, и рекомендации по дизайну. Она также указывает на примеры интеграции и предоставляет указания по подключению пакета к проекту с использованием Flutter. Кроме того, приводится информация об обработке ошибок, которые могут возникнуть при использовании SDK."
  },
  {
    "shortName": "/sdk_push-notifications_flutter_6-0-1.txt",
    "summary": "Статья посвящена документации по использованию SDK push-уведомлений для Flutter. В ней обсуждаются условия работы push-уведомлений, инструкции по подключению пакета к проекту, инициализации, настройки ProGuard, проверки возможности получения push-уведомлений, а также методы работы с push-токеном и push-уведомлениями. Структура уведомления и создание канала для отправки уведомлений также детально описаны. Статья подразумевает наличие предыдущей и следующей страницы для перехода между различными сценариями использования и версиями SDK."
  },
  {
    "shortName": "/sdk_rustore-geo_map-display-services_interactive-map_events#mapmouseevent.txt",
    "summary": "Статья \"Events (события)\" в рамках документации RuStore посвящена подробному описанию различных типов событий, с которыми можно работать при взаимодействии с картами в различных приложениях. В ней разбираются методы добавления и удаления слушателей событий, а также представлены различные типы событий, такие как MapMouseEvent (события, связанные с мышью), MapTouchEvent (события касаний), MapBoxZoomEvent (события с boxzoom), MapDataEvent (события связанные с данными карты) и MapWheelEvent (события, связанные с прокруткой). В статье приведены примеры использования этих событий и их свойства."
  },
  {
    "shortName": "/sdk_reviews-ratings_flutter_6-0-0.txt",
    "summary": "Справка представляет собой руководство для разработчиков по интеграции в приложение системы отзывов и оценок от RUStore. Основные темы включают общее описание системы, примеры ее применения, требования для корректной работы, рекомендации по дизайну, инструкции по подключению к проекту, а также описание работы с оценками, включая инициализацию, запуск процесса и обработку возможных ошибок."
  },
  {
    "shortName": "/work-with-rustore-api_api-feedback-process_change-feedback-answer.txt",
    "summary": "Статья \"Изменение ответа на отзыв\" излагает методы взаимодействия с отзывами приложения через API RuStore. Опишено как изменить текст ответа на отзыв, включая указание обязательных параметров для взаимодействия, таких как токен доступа, идентификатор пакета приложения и идентификатор ответа на отзыв. Рассмотрено содержание ответа API, включая код ответа, сообщение, время ответа и обновленный идентификатор ответа. Представлены пример запроса и ответа для наглядности."
  },
  {
    "shortName": "/sdk_push-notifications_kotlin-java_history.txt",
    "summary": "Вот краткое саммари:\n\nСтатья представляет историю обновлений SDK (Software Development Kit) RuStore, включающую в себя внесение исправлений, добавление новых функций, обновления зависимостей и улучшения кодовой базы. Основное внимание уделяется обновлениям SDK для Kotlin и Java с 0.1.0 до 2.3.0. Документация подробно описывает каждое обновление, включая исправленные баги, добавленные функции, соответствующие версии SDK и другие изменения, которые могут повлиять на совместимость и использование SDK."
  },
  {
    "shortName": "/sdk_payments_flutter_6-0-0.txt",
    "summary": "Эта статья предлагает руководство по интеграции платежной системы RuStore в мобильное приложение на Flutter. Обсуждаются различные аспекты работы с RuStore, включая подключение SDK, интеграцию push-уведомлений, обработку deeplink, инициализацию и использование API для работы с платежами. \n\nСтатья разбита на следующие разделы: \n\n1. **Введение в платежи RuStore**: Объясняет, что RuStore позволяет интегрировать платежи и предлагает гайд для изучения перед началом работы. \n\n2. **Подготовка к работе**: Приводит инструкцию по добавлению SDK в проект при помощи Flutter и указания схемы deeplink в AndroidManifest.xml.\n\n3. **Сценарий работы с платежами**: Список условий для успешной работы платежей на устройстве пользователя.\n\n4. **Инициализация**: Описывает методы инициализации библиотеки billing-клиента и ввода конечного кода приложения из консоли разработчика RuStore.\n\n5. **Работа с SDK**: Включает методы для получения списка продуктов, покупки продукта, списка покупок, сведений о покупке и подтверждения покупки.\n\n6. **Создание списка продуктов**, **Покупка продукта**, **Получение списка покупок**, **Получение сведений о покупке**, **Подтверждение покупки** и **Продукты, требующие подтверждения** - рассмотрены методы работы с платформой для получения и обработки информации о продуктах и покупках.\n\n7. **Валидация покупок на сервере** и **Ведение журнала событий** - подробно описывается процедура валидации покупок на сервере и включение журналирования в Flutter SDK.\n\n8. **Обработка ошибок** - перечислены возможные ошибки, которые могут возникнуть при работе с платформой.\n\nСтатья представляет собой подробное руководство по интеграции платежной системы RuStore в мобильное приложение на Flutter, включая процесс установки и настройки SDK, а также описание методов работы с платформой для различных сценариев, таких как покупка продуктов, управление списком покупок и проверка статуса покупки.\n\nСсылка на статью в оглавлении должна быть размещена в разделе \"Работа с SDK\" или \"Руководство по работе с платежной системой RuStore\", в зависимости от конкретного места в описании структуры документации."
  },
  {
    "shortName": "/developers_tools_remote-config_ab-testing_metric-actions.txt",
    "summary": "Статья посвящена инструкциям по работе с метрикой в системе RuStore Remote Config. Освещаются основные действия: переход к редактированию, копированию и удалению метрики. Для работы с метрикой необходимо предварительно подключить MyTracker. Текст включает в себя шаги по каждой операции с метрикой, а также указывает на необходимость подключения MyTracker для дальнейшей работы и делится информацией о предыдущей и следующей страницах руководства."
  },
  {
    "shortName": "/sdk_push-notifications_unity_1-0-0.txt",
    "summary": "Статья посвящена инструкции по интеграции SDK push-уведомлений от RuStore для проектов на Unity. Статья подробно разбирает условия работы push-уведомлений (требования к версии приложения, поддержка функционала и разрешения на работу в фоновом режиме), процесс подключения SDK к проекту, настройку и инициализацию, а также предоставляет примеры кода. Описание включает инструкции о том, как проверить возможность получения push-уведомлений, как работать с push-токенами, подписаться и отписаться от push-уведомлений по топикам, а также содержит описание структуры уведомления и методов обработки ошибок."
  },
  {
    "shortName": "/sdk_reviews-ratings_godot_1-0-1.txt",
    "summary": "Эта статья описывает интеграцию и использование SDK для обработки отзывов и оценок в приложении через платформу RuStore. Основные темы включают:\n\n1. **Общие сведения** - Описание функционала SDK, позволяющего пользователям оставлять оценки и отзывы в приложении.\n2. **Примеры реализации** и **Пример пользовательского сценария** - Примеры интеграции и использования SDK.\n3. **Условия корректной работы SDK** - Требования для работы SDK, включая ОС, версию RuStore и авторизацию пользователя.\n4. **Когда запрашивать оценку и отзыв** - Рекомендации по времени запроса оценки и отзыва у пользователя.\n5. **Рекомендации к дизайну** - Гид по визуальной интеграции и отображению процесса.\n6. **Подключение в проект** и **Работа с оценками** - Инструкции по интеграции SDK в проект и управлению оценками.\n7. **Обработка ошибок** - Список возможных ошибок и их описание.\n\nДокументация подходит для разработчиков, которые ищут информацию по интеграции отзывов и оценок в своё приложение через RuStore."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_app-publication_setting-up-publication_instant-app-publishing#%D0%BF%D1%83%D0%B1%D0%BB%D0%B8%D0%BA%D0%B0%D1%86%D0%B8%D1%8F-%D0%B2%D1%80%D1%83%D1%87%D0%BD%D1%83%D1%8E.txt",
    "summary": "Эта статья из документации RuStore описывает процесс управления публикацией версий приложений. Содержание включает в себя описание автоматической и ручной публикации приложений, отложенной публикации и поэтапной публикации. Оба метода публикации доступны при начальной публикации версии и при обновлении ранее загруженной версии. Статья также обсуждает процесс снятия версии с публикации и последствия такого действия для пользователей."
  },
  {
    "shortName": "/users_start_install-on-tv.txt",
    "summary": "Статья описывает процесс установки сборки на ТВ через интерфейс RuStore, акцентируя внимание на удобстве и адаптивности интерфейса для телевизионного экрана."
  },
  {
    "shortName": "/developers_monetization_create-paid-product-in-application_.txt",
    "summary": "Эта статья - руководство для разработчиков по созданию платных товаров в RuStore. Оно повествует о процессе публикации и проверки приложений, монетизации, создании платных товаров, управлении платежами, тестировании платежей, уведомлениях на сервер и приеме платежей без установки RuStore. Также обсуждаются вопросы рекламы и продвижения приложений."
  },
  {
    "shortName": "/developers_tools_remote-config_ios-apps_ios.txt",
    "summary": "Статья посвящена инструкциям по подключению IOS приложений к сервису Remote Config в RuStore. Она объясняет процесс добавления IOS приложения, подключения MyTracker и SDK. Также описывается работа с параметрами и условиями в конфигурации, настройка обязательного подтверждения, роли и права пользователей, а также базовые параметры лицензионного соглашения и политики конфиденциальности сервиса."
  },
  {
    "shortName": "/sdk_rustore-geo_map-display-services_interactive-map_labels-controls.txt",
    "summary": "Статья \"Метки и элементы управления\" в документации RuStore SDK касается интерфейсов управления на картах и геосервисах. Это включает в себя подробные описания и примеры использования различных объектов управления, таких как маркеры, всплывающие окна и элементы управления (IControl, NavigationControl, ScaleControl, GeolocateControl, FullscreenControl). \n\nКлючевые мысли включают в себя:\n\n1. Введение в создание и управление маркерами на карте, включая их свойства и методы, а также управление поведением и внешним видом маркеров.\n\n2. Описание всплывающих окон, включая их параметры, методы и события.\n\n3. Введение в спецификацию для разработчиков, включая классы и методы для создания пользовательских элементов управления на карте.\n\n4. Описание элементов управления, таких как кнопки масштабирования (NavigationControl), встраиваемые панели для точного определения местоположения (GeolocateControl) и управление полноэкранным режимом (FullscreenControl).\n\nВ целом, статья предназначена для разработчиков и пользователей, которые хотят улучшить взаимодействие с картами и геосервисами в приложениях."
  },
  {
    "shortName": "/developers_advertising-and-promotion_iframe.txt",
    "summary": "Статья посвящена способам встраивания произвольных подборок приложений из RuStore на сторонние ресурсы, такие как сайты и порталы. В ней подробно описывается процесс создания и интеграции подборок приложений, включая необходимость введения параметров в URL и использование iframe для отображения. Также указывается, что подборка не может содержать более 20 приложений одновременно."
  },
  {
    "shortName": "/sdk_payments_flutter_5-0-2.txt",
    "summary": "Статья посвящена интеграции платежных систем в мобильные приложения с использованием SDK от RuStore. Основные темы, обсуждаемые в тексте:\n\n1. **Платежи in-app и подписки**: Основные концепции и условия работы платежей в приложении и подписок на них.\n\n2. **Сценарии использования**: Подробные инструкции по интеграции и работе с платежными системами, включая примеры реализации и сценарии использования.\n\n3. **SDK и API**: Список доступных SDK для разных платформ и их использование для интеграции платежей в приложение. \n\n4. **История обновлений**: Следует за изменениями и обновлениями в SDK и API RuStore.\n\n5. **Работа с платежами**: Включает в себя описание как работают платежи, как убедиться в доступности работы с платежами и какие шаги следует предпринять для их использования.\n\n6. **SDK и API интеграция**: Описывает процесс добавления и инициализации SDK в проект, обработку deeplinks, а также инструкции по работе с методами SDK.\n\n7. **Проверка доступности работы с платежами**: Условия и методы для проверки возможности выполнения платежей в приложении.\n\n8. **Приложение-пример**: Показывает, как правильно интегрировать SDK платежей в приложение.\n\n9. **Обработка ошибок**: Описание возможных ошибок и исключений, которые могут возникнуть при работе с платежами и как с ними справиться.\n\n10. **Ведение журнала событий**: Рассказывает о включении и использовании логирования для отладки и отслеживания активности в приложении.\n\nСтатья может быть включена в разделы \"Платежи и покупки\", \"Интеграция и настройка\", \"Управление приложением\" и \"Поддержка и отладка\" в оглавлении."
  },
  {
    "shortName": "/sdk_payments_unity_5-0-1.txt",
    "summary": "Эта статья является инструкцией по интеграции платежной системы RuStore в мобильные приложения. Процесс включает в себя подключение SDK платежей, подготовку проекта под его работу, инициализацию библиотеки, а также обработку различных сценариев работы с платежами, таких как проверка доступности платежей, получение списка продуктов и покупок, подтверждение покупок и отмена платежей. Имеются также разделы, посвященные обработке ошибок, поддержке темы интерфейса и сценариям работы с deeplinks. Эта документация может быть использована как руководство для разработчиков или в качестве справки для пользователей при работе с платформой RuStore."
  },
  {
    "shortName": "/developers_monetization_manage-payments#%D0%B2%D0%BE%D0%B7%D0%B2%D1%80%D0%B0%D1%82-%D0%BF%D0%BB%D0%B0%D1%82%D0%B5%D0%B6%D0%B0.txt",
    "summary": "Статья \"Управление платежами в RuStore - просмотр, поиск и возврат\" посвящена работе с платежами в платформе RuStore. Она включает инструкции о том, как отследить информацию о платежах по каждому приложению с монетизацией через веб-консоль, применять фильтры для поиска платежей по различным критериям, и возвращать платежи покупателям, изменяя их статус на \"возвращено\". Имеются уточнения о различных статусах платежей и предупреждение о том, что возврат платежа не деактивирует товар или подписку у пользователя. В конце статьи приведены ссылки на следующие и предыдущие темы."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_app-publication_app-publication-aurora_.txt",
    "summary": "Содержание статьи посвящено процессу публикации приложений для операционной системы Аврора в магазине приложений RuStore. Статья подробно описывает необходимые шаги, начиная от открытия консоли RuStore до загрузки файлов RPM и настройки публикации. Особое внимание уделено требованиям к файлам RPM, специфике загрузки первой и последующих версий, а также описанию раздела «Что нового?» в приложении. Статья также дает указания по созданию и заполнению информации о приложении, включая названия, возрастные категории, описание и медиафайлы. В конце приведены инструкции по публикации версии приложения и отправке на модерацию."
  },
  {
    "shortName": "/developers_monetization_manage-payments#%D0%BF%D0%BE%D0%B8%D1%81%D0%BA-%D0%BF%D0%BB%D0%B0%D1%82%D0%B5%D0%B6%D0%B0.txt",
    "summary": "Статья \"Управление платежами в RuStore\" включает инструкции о просмотре, фильтрации и поиске платежей, а также о процессе возврата платежей в системе RuStore. Статья объясняет, как просматривать информацию о покупках, включая дату, время, способ оплаты и статус платежа, и подсказывает, как фильтровать и искать платежи с использованием различных параметров. Также приведены инструкции по возврату платежа, включающие шаги открытия консоли, выбора приложения и товара для возврата."
  },
  {
    "shortName": "/developers_monetization_manage-payments.txt",
    "summary": "Статья описывает процедуры управления платежами в системе RuStore. Включает руководство по просмотру, поиску и возврату платежей, а также объяснение статусов платежей и процесса возврата. Предназначено для пользователей системы RuStore, в частности для разработчиков и менеджеров монетизации. Основные темы: Меню и вкладки управления платежами в RuStore Консоли, функционал поиска платежей по различным параметрам, статусы платежей (в обработке, отменено, оплачено, возвращено), и процесс возврата платежа."
  },
  {
    "shortName": "/sdk_rustore-geo_map-display-services_interactive-map.txt",
    "summary": "Статья посвящена документации по использованию интерактивной карты в рамках SDK и API RuStore. Основные разделы включают введение, инструкции по быстрому старту, описания свойств и опций карты, меток и элементов управления, географии и геометрии, обработчиков и источников, событий, а также использование карты в React-приложениях. Также в статье описаны стили карт, сервисы маршрутизации, и другие дополнительные объекты."
  },
  {
    "shortName": "/sdk_payments_flutter_5-0-0.txt",
    "summary": "Статья \"Руководство по интеграции платежей в мобильное приложение с помощью SDK RuStore\" содержит подробные инструкции по установке и настройке SDK для обработки встроенных покупок и подписок в мобильных приложениях. \n\nСтатья структурирована следующим образом:\n\n1. Описание доступных SDK и платформ (Flutter, Kotlin/Java, Unity, Godot, React Native, и Flutter).\n2. Описания функций и возможностей SDK и его взаимодействия с другими системами (платежи in-app и подписки, push-уведомления, подключение отзывов и оценок). \n3. Процесс установки SDK с примером команды `flutter pub add flutter_rustore_billing`.\n4. Инструкции по обработке deeplinks и инициализации SDK.\n5. Пояснения о работе с платежами, включая проверку доступности платежей и методы работы с SDK, такие как получение списка продуктов и покупка продукта.\n6. Описание структур данных, возвращаемых в результате работы SDK.\n7. Инструкции по получению списка покупок и сведений о покупке.\n8. Методы подтверждения покупки и валидации покупок на сервере.\n9. Рекомендации и уведомления о предусловиях для работы SDK, таких как версия и установка RuStore, а также обработке ошибок с помощью параметра `allowNativeErrorHandling`.\n \nИсходя из содержания статьи, она может быть размещена в разделе \"Руководства по разработке\" с подзаголовком \"SDK и интеграция\" в оглавлении документации."
  },
  {
    "shortName": "/developers_tools_app-tracer_android_additional-features.txt",
    "summary": "Статья \"Хелп Гайд - дополнительные возможности и расширение функционала Tracer\" излагает методы расширения функционала инструмента Tracer для управления приложением. Делится на две основные части: \"Добавление информации к событиям\" и \"Собственное логирование Tracer\". Предназначена для пользователей, желающих усовершенствовать управление приложением с помощью инструмента Tracer, предлагая конкретные методы и техники для его применения."
  },
  {
    "shortName": "/work-with-rustore-api_api-subscription-payment_api-id-payment-method.txt",
    "summary": "Статья \"Получение данных подписки (V2)\" изучает метод предоставления информации об оплате и подписке через API RuStore. Метод позволяет получить данные о подписке при предоставлении токена подписки. Статья обсуждает параметры взаимодействия для метода, включая токен авторизации, наименование пакета приложения, ID подписки и токен подписки. Она также описывает параметры успешного ответа, включая время предоставления подписки, время истечения срока действия, статус оплаты и другие подробности. Кроме того, статья включает информацию о возможных ошибках и пример успешного ответа."
  },
  {
    "shortName": "/sdk_rustore-geo_maps-mobile-sdk_mobile-sdk-android.txt",
    "summary": "Статья посвящена инструкции по использованию Android-версии Maps Mobile SDK от RuStore. Основные темы включают подключение SDK, установку глобальных настроек и стартовых параметров карты, размещение различных виджетов управления и отображения, а также использование методов для вручную управлять картой. Статья содержит примеры кода для иллюстрации процесса использования SDK. Важным ограничением указывается поддерживаемая версия Android - минимум 7.0 (min sdk 24)."
  },
  {
    "shortName": "/sdk_rustore-geo_map-display-services_interactive-map_handlers.txt",
    "summary": "Статья посвящена обработчикам (handlers) в рустреве, чтобы обеспечить интерактивность карты. Страница содержит объяснения и примеры использования различных обработчиков, включая BoxZoomHandler, ScrollZoomHandler, DragPanHandler, DragRotateHandler, KeyboardHandler, DoubleClickZoomHandler, TouchZoomRotateHandler и TouchPitchHandler. Каждый обработчик обладает уникальными способами взаимодействия с картой, такими как масштабирование, панорамирование и вращение. Структура документации позволяет найти конкретные обработчики и их методы для реализации нужных функций в приложениях."
  },
  {
    "shortName": "/work-with-rustore-api_api-upload-publication-app_apk-icon-upload.txt",
    "summary": "Статья посвящена описанию метода загрузки иконки приложения в интегрированной системе RuStore. Основные ключевые мысли:\n\n1. Метод позволяет загрузить иконку приложения.\n2. Существуют определенные ограничения: файл должен иметь формат .jpeg или .png, размер файла не должен превышать 3 МБ и размер изображения должен составлять 512x512 пикселей.\n3. Способ взаимодействия - POST запрос к URL-адресу, который включает в себя идентификатор приложения, версию приложения, токен доступа и файл иконки.\n4. Структура ответа включает в себя код ответа, сообщение, время ответа и другие параметры, такие как timestamp.\n5. Приведен пример запроса POST для загрузки иконки.\n6. Подключение к API осуществляется в соответствии с пользовательским соглашением и политикой конфиденциальности VK."
  },
  {
    "shortName": "/sdk_updates_godot_2-0-0.txt",
    "summary": "Эта статья представляет собой документацию для интеграции инструмента обновлений приложений RuStore в разные платформы, такие как Android, iOS, Unity, Godot и другие, на примере Kotlin и Java. Статья включает инструкции по подключению SDK обновлений к проекту, методы проверки и запуска обновлений, включая отложенные, тихие и принудительные обновления, а также отдельный раздел по обработке ошибок, включая перечень возможных ошибок."
  },
  {
    "shortName": "/developers_check-apk-signature.txt",
    "summary": "Статья описывает методы проверки и получения отпечатка подписи приложения APK, необходимого для большинства SDK. Приведены инструкции для использования Android Studio, apksigner и keytool для расшифровки и извлечения данных. Также упоминается необходимость совпадения отпечатка подписи с данными в проекте пуш-уведомлений."
  },
  {
    "shortName": "/developers_tools_app-tracer_android_modules_sampling-profiler.txt",
    "summary": "Статья \"Sampling Profiler: эффективное профилирование с Tracer SDK\" посвящена инструменту Sampling Profiler, компоненту Tracer SDK, позволяющему проводить эффективное профилирование приложений. \n\nВ статье подробно описаны основные шаги подключения Sampling Profiler к проекту и настройки SamplingProfilerConfiguration, включая параметры включения/выключения профилирования, настройки буфера и интервала сбора данных, а также опции Condition для управления запуском и отправкой результатов профилирования.\n\nТакже представлены примеры использования Sampling Profiler для создания собственных событий и ручного профилирования, с использованием специальных системных событий, включая \"app_start_begin\", \"app_start_end\", \"app_freeze\", \"app_anr\" и другие. \n\nСтатья подойдет для разработчиков, желающих проводить эффективное профилирование приложений с использованием Tracer SDK, а также тех, кто ищет информацию о настройке Sampling Profiler в рамках системы Tracer."
  },
  {
    "shortName": "/developers_monetization_create-app-subscription#%D0%B4%D0%BE%D0%BF%D0%BE%D0%BB%D0%BD%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D1%8B%D0%B5-%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B8.txt",
    "summary": "Статья описывает процесс создания подписок в системе RuStore. В ней подробно описаны шаги для создания подписки, а также представлены настройки, связанные с ней, такие как бесплатный период, стартовый период, грэйс и холд. Статья также обсуждает условия списания регулярных платежей, которые происходит каждые 8 часов до окончания подписки. Структура статьи позволяет легко найти и использовать информацию о конкретной процедуре или настройке."
  },
  {
    "shortName": "/sdk_payments_unity_5-0-2.txt",
    "summary": "Статья посвящена интеграции платежной системы RuStore в мобильные приложения на платформах Android и iOS. Основные разделы включают подключение SDK, инициализацию и настройки, обработка deeplink, методы работы с платежами (получение списка продуктов, покупка, подтверждение и отмена покупок), обработка ошибок и смена темы интерфейса. \n\nКлючевые мысли в статье:\n1. Прежде чем начать интеграцию, необходимо скачать и импортировать SDK в проект.\n2. Для корректной работы необходимо правильно настроить зависимости, включая настройки в Gradle и использование внешнего менеджера зависимостей.\n3. Инициализация SDK осуществляется через метод Init(), где можно передать опциональные настройки.\n4. Обработка deeplink включает в себя настройку AndroidManifest.xml и переопределение класса UnityPlayerActivity для обработки входящих intent.\n5. Работа с платежами включает проверку доступности покупок, получение списка продуктов, покупку продукта, подтверждение и отмену покупок, а также валидацию покупок на сервере.\n6. Обработка ошибок осуществляется через обработчик методов onFailure, а при отключенном nativeErrorHandling - через диалог с пользователем."
  },
  {
    "shortName": "/sdk_rustore-geo_map-display-services_interactive-map_options#cameraoptions-%D0%B3%D1%80%D1%83%D0%BF%D0%BF%D0%B0-%D0%BF%D0%B0%D1%80%D0%B0%D0%BC%D0%B5%D1%82%D1%80%D0%BE%D0%B2.txt",
    "summary": "Эта статья из документации описывает различные свойства и опции для использования при работе с картами в SDK RuStore. Обсуждаются такие ключевые концепции, как токен доступа (accessToken), базовый URL API (baseApiUrl), количество веб-воркеров (workerCount), максимальное количество параллельно загружаемых изображений (maxParallelImageRequests), поддержка браузера (supported), и версия SDK (version). Также статья включает описание дополнительных параметров для управления картой, например, тип анимации (AnimationOptions), настройки камеры (CameraOptions), отступы для карты (PaddingOptions), параметры запросов (RequestParameters), интерфейсы стиля изображений и слоев (StyleImageInterface и CustomLayerInterface), а также функции, связанные с предварительной загрузкой (prewarm) и очисткой ресурсов (clearPrewarmedResources)."
  },
  {
    "shortName": "/sdk_rustore-geo_additional-services_determining-the-time-zone.txt",
    "summary": "Статья описывает сервис определения часового пояса в любой точке мира и смещения времени относительно UTC в рамках SDK RuStore. В ней подробно описаны параметры запроса и ответа для использования этого сервиса, а также приведен пример запроса и ответа."
  },
  {
    "shortName": "/sdk_updates_react_6-0-0.txt",
    "summary": "Статья описывает документацию для библиотеки обновлений, RuStore In-app updates SDK, которая позволяет автоматически обновлять приложение на устройствах пользователей. Она описывает процесс интеграции SDK в приложение, основные сценарии использования обновлений (отложенное, тихое и принудительное), а также предоставляет руководство по работе с обновлениями, включая инициализацию SDK, проверку наличия обновлений, скачивание и установку обновлений, использование слушателей для отслеживания состояния скачивания обновлений и методы обработки ошибок. Статья также включает в себя информацию о требованиях к использованию SDK, таких как версия операционной системы и версия RuStore на устройстве."
  },
  {
    "shortName": "/sdk_push-notifications_user-segments_segments-mytracker.txt",
    "summary": "Статья \"Подключение MyTracker и создание сегментов\" в ruStore документации посвящена интеграции двух систем: SDK push-уведомлений от ruStore и MyTracker, а также созданию сегментов пользователей в MyTracker для более эффективного управления и рассылки push-уведомлений. \n\nВ статье подробно описываются шаги для подключения MyTracker к приложению и созданию сегментов пользователей через его интерфейс. Важно также подключить API MyTracker для работы со сегментами через API push-уведомлений ruStore. \n\nТакже статья включает информацию о получении и использовании ID сегмента в запросах для управления ими через API.\n\nДанный материал идеально подходит для раздела \"Сценарии использования SDK ruStore\" в оглавлении, так как представляет собой практическую инструкцию по интеграции и работе с MyTracker, что является расширением возможностей использования SDK ruStore."
  },
  {
    "shortName": "/developers_tools_remote-config_setting-parameters.txt",
    "summary": "Статья \"Настройка обязательного подтверждения\" из документации RuStore посвящена функционалу Remote Config, который позволяет включать обязательное подтверждение параметров/условий и тестирование вариантов в экспериментах. Документация включает инструкции по включению и отключению данной функции, а также описание последствий каждой настройки."
  },
  {
    "shortName": "/sdk_rustore-geo_map-display-services_interactive-map_events#mapdataevent.txt",
    "summary": "Статья \"Events (события)\" из документации RuStore посвящена обработке событий на интерактивной карте. Основные темы обсуждения включают:\n\n1. Методы добавления и удаления слушателей (listeners), такие как `off`, `on`, и `once`.\n2. Детальное описание свойств различных событий, включая `lngLat`, `originalEvent`, `point`, `preventDefault()`, `target`, и `type`.\n3. Описание конкретных событий, включая `MapMouseEvent` (события, связанные с мышью), `MapTouchEvent` (события, связанные с касаниями), `MapBoxZoomEvent` (события связанные с `boxzoom`), `MapDataEvent` (события, связанные с данными карты), и `MapWheelEvent` (события, связанные с `wheel`).\n\nСтатья описывает ключевые методы и свойства, которые разработчикам могут использовать для обработки и управления событиями на интерактивной карте в контексте платформы RuStore."
  },
  {
    "shortName": "/sdk_rustore-geo_map-display-services_interactive-map_options.txt",
    "summary": "Эта статья из пользовательской документации RuStore SDK. Основное содержание описано в разделе \"Свойства и опции\", который объясняет различные параметры и свойства, которые могут быть использованы при работе с картами в приложениях. \n\nВ разделе приведены следующие ключевые свойства и опции:\n\n1. `accessToken` - токен доступа к карте.\n2. `baseApiUrl` - начальный API URL для получения тайлов, стилей, спрайтов и глифов.\n3. `workerCount` - количество веб-воркеров на странице с GL JS картами. \n4. `maxParallelImageRequests` - максимальное количество изображений для параллельной загрузки.\n5. `supported` - проверка поддержки браузером GL JS.\n6. `version` - версия текущей сборки MMR GL.\n7. `setRTLTextPlugin` и `getRTLTextPluginStatus` - функции для установки и проверки статуса плагина для поддержки RTL.\n8. `clearStorage` - функция для очистки кэша тайлов.\n9. А также представлены группы параметров для анимации карт (`AnimationOptions`), настроек камеры (`CameraOptions`), отступов (`PaddingOptions`) и параметров запросов (`RequestParameters`).\n\nВ разделе также приведены примеры использования этих свойств и опций в коде."
  },
  {
    "shortName": "/sdk_push-notifications_unreal_1-2-0.txt",
    "summary": "Эта статья представляет руководство для разработчиков Unreal Engine, использующих push-уведомления через SDK RuStore. Она содержит несколько ключевых разделов:\n\n1. **Условия работы SDK**: Здесь описаны требования для корректной работы push-уведомлений, включая установку актуальной версии RuStore и разрешение приложения работать в фоновом режиме.\n\n2. **Пример реализации**: Обозначена ссылка на приложение-пример для правильной интеграции SDK push-уведомлений.\n\n3. **Подключение в проект**: Это включает в себя процедуры копирования SDK, перезагрузки Unreal Engine и включения необходимых плагинов.\n\n4. **Редактирование манифеста приложения**: Описывается процесс внесения изменений в AndroidManifest.xml для редактирования иконки, цвета уведомлений и создания канала уведомлений.\n\n5. **Запрос разрешения на показ уведомлений**: В этом разделе описывается процесс добавления нового разрешения в манифест приложения для отображения push-уведомлений на Android версии 13 и выше.\n\n6. **Инициализация**: Приводится пример инициализации SDK и указания идентификатора проекта.\n\n7. **Деинициализация**: Описаны методы для освобождения памяти и завершения всех запросов.\n\n8. **Логирование событий**: Предоставлены методы для логирования событий и создания собственного класса для логгирования.\n\n9. **Работа с сегментами пользователей**: Рассказано о создании сегментов пользователей и их использовании в SDK.\n\n10. **Методы для работы с push-токеном и push-топиком**: Описаны методы для получения и удаления push-токена, а также подписки и отписки от push-уведомлений по топику.\n\n11. **Получение данных от RuStore SDK**: Описаны методы получения данных от SDK и обработка ошибок.\n\n12. **Структура уведомления**: Приведены детали структуры push-уведомления и его полей.\n\n13. **Обработка ошибок**: Описан процесс обработки ошибок и возможность их передачи в нативное SDK для визуализации.\n\nЭта статья является подробной инструкцией по использованию SDK RuStore для Unreal Engine, предоставляя полезные сведения о настройке и использовании push-уведомлений в приложениях."
  },
  {
    "shortName": "/developers_monetization_sandbox_enable-test-mode.txt",
    "summary": "Статья посвящена процедуре включения тестового режима для тестирования платежей в RuStore Консоль. Изначально уточняются требования к приложению и версиям SDK и RuStore, необходимые для проведения тестов. Затем описывается процесс включения режима тестирования в приложении: открытие RuStore Консоли, выбор приложения, переключение на вкладку \"Монетизация - Тестовые платежи\", активация переключателя в столбце \"Режим тестирования\". Следует учесть, что режим тестирования включается только для владельца приложения и доступен только для его обладания. Включение тестового режима позволяет проводить тестовые покупки в приложении и тестировать еще не опубликованные товары."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_collect-har-logs_safari.txt",
    "summary": "Сбор HAR и консольных логов в Safari: руководство для пользователей. Текст статьи описывает, как собрать HAR-логи и консольные логи в браузере Safari. Для сбора HAR-логов необходимо зайти в меню \"Разработка\", выбрать \"Подключить веб-инспектор\", перейти в вкладку \"Сеть\" и активировать функцию \"Сохранить журнал\". Для сбора консольных логов следует выбрать \"Разработка\", затем \"Подключить веб-инспектор\" и открыть вкладку \"Консоль\". После этого у пользователя есть возможность сохранить выбранные логи."
  },
  {
    "shortName": "/sdk_rustore-geo_routing-services_route-optimization.txt",
    "summary": "Статья \"Оптимизация маршрута\" посвящена сервису, который позволяет решить задачу коммивояжёра и рассчитать оптимальный маршрут для набора целевых точек. Методы расчёта включают автомобильный, пешеходный и велосипедный графы. В предложенном примере запроса и ответа детально описывается, как использовать этот сервис, включая параметры запроса и ответа в формате JSON."
  },
  {
    "shortName": "/sdk_updates_unreal_3-0-0.txt",
    "summary": "Эта статья описывает интеграцию и использование SDK обновлений в приложении RuStore для пользователей и разработчиков. Основные темы включают подключение SDK, методы и события управления обновлениями, а также статусы и ошибки обновлений. Рассмотрены различные сценарии обновления включая отложенное, тихое и принудительное обновление. Статья объясняет, как инициализировать менеджер обновлений, проверять наличие обновлений, скачивать и устанавливать обновления, а также обрабатывать статусы и ошибки процесса обновления."
  },
  {
    "shortName": "/developers_tools_app-tracer_android_additional-features_logging.txt",
    "summary": "Статья \"Собственное логирование в Tracer SDK - Описание HasTracerLogger и TracerLoggerDelegate\" объясняет, как встроить и настроить собственное логирование в Tracer SDK, используя интерфейсы HasTracerLogger и TracerLoggerDelegate. Описывается, как подменить стандартный механизм логирования и изменить уровень логирования, а также как полностью переопределить логирование в собственном коде. Дополнительно, статья указывает на предыдущую и следующую страницы в документации."
  },
  {
    "shortName": "/sdk_updates_unreal_1-0-1.txt",
    "summary": "Статья описывает интеграцию и использование SDK ruStore для обновления приложений на платформе Unreal Engine. Центральное внимание уделяется маршруту процесса обновления: от проверки наличия обновления до завершения его установки. Обсуждаются разные способы обновления, включая отложенные, тихие и принудительные обновления, а также процедуры проверки статуса скачивания обновления и обработки возможных ошибок. Пользователи могут настроить обновление по своему усмотрению, выбирая между UI от ruStore или его отсутствием."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_category.txt",
    "summary": "Статья \"Выбор категорий для приложений в RuStore: инструкция и рекомендации\" содержит подробные указания о том, как правильно выбрать категории для приложений в магазине RuStore. В статье излагаются рекомендации и требования для каждой из категорий, включая бизнес-сервисы, государственные приложения, приложения для еды и напитков, здравоохранения, образования и многих других. Также представлены примеры приложений, которые могут быть включены в каждую категорию. Важно выбирать категории таким образом, чтобы приложения были правильно отображены в магазине и легко находились пользователями."
  },
  {
    "shortName": "/work-with-rustore-api_api-feedback-process_feedback-process.txt",
    "summary": "Статья \"Общий процесс работы с отзывами\" объясняет, как разработчики могут использовать API RuStore для получения и управления отзывами пользователей. Основные темы включают получение отзывов и ответов на них, получение статусов модерации, изменение и удаление ответов, а также получение рейтинга приложения. Статья также обсуждает необходимость получения токена доступа к API и возможные коды ошибок."
  },
  {
    "shortName": "/sdk_reviews-ratings_defold_1-0-1.txt",
    "summary": "Статья посвящена интеграции и использованию RuStore In-app Review SDK для получения отзывов и оценок пользователей в приложении в рамках магазина RuStore. Описание включает общую информацию о SDK, условия его корректной работы, примеры его использования, рекомендации по дизайну, инструкции по подключению в проект, а также детали работы с оценками и обработки возможных ошибок. Ключевыми темами статьи являются интеграция SDK, управление процессом получения отзывов и оценок, и обработка ошибок, которые могут возникнуть в процессе использования."
  },
  {
    "shortName": "/sdk_rustore-geo_routing-services_reachability-area.txt",
    "summary": "Статья посвящена сервису областей достижимости в платформе RuStore. Сервис рассчитывает контуры областей, которые можно посещать из заданной точки в течение определенного времени или расстояния, используя встроенные алгоритмы. Документация подробно описывает, как правильно форматировать и отправлять запрос, а также как расшифровывать ответ сервиса. Включает в себя информацию об обязательных и дополнительных полях в JSON-запросе, необходимых параметрах для корректной работы сервиса, и структуру ответа."
  },
  {
    "shortName": "/sdk_push-notifications_unreal_1-0-0.txt",
    "summary": "Статья посвящена инструкции по интеграции и использованию push-уведомлений в приложении Unreal Engine с использованием SDK RuStore. Основные темы включают условия работы SDK, установку и подключение SDK в проект, настройку манифеста приложения, обработку разрешений на показ уведомлений в Android 13 и выше, инициализацию и деинициализацию SDK, логирование событий, проверку возможности получения push-уведомлений, методы обработки push-токенов и топиков, а также получение и синхронизация данных от SDK."
  },
  {
    "shortName": "/developers_developer-statistics_monetization-stat.txt",
    "summary": "Статья в описании рассказывает о функциональностях ревью финансовой статистики в системе RuStore Консоль. Она обсуждает, как просматривать и анализировать доходы и возвраты, подчеркивая, что для этого требуется подключить виды монетизации, а пользователь должен быть авторизован. Текст также показывает процедуру открытия и просмотра статистики, подчеркивая ключевые сведения, которые отображаются, включая общие и возвратные доходы от различных источников монетизации. В статье также описаны различные опции для выбора периода просмотра статистики."
  },
  {
    "shortName": "/developers_monetization_without-rustore-app.txt",
    "summary": "Статья \"Приём платежей без установки RuStore\" обсуждает новую функцию в системе RuStore, позволяющую пользователям оплачивать покупки и подписки в приложении, даже если у них не установлен RuStore. Это может увеличить объем выручки и привлечь лояльную аудиторию. Преимущества включают возможность оплаты покупок без установки RuStore и возможность продолжать принимать платежи при публикации приложений на разных платформах. Статья также обсуждает технические особенности функции, включая необходимость авторизации пользователя по VK ID и спецификации SDK платежей версии 6.0.0 и выше."
  },
  {
    "shortName": "/sdk_reviews-ratings_unreal_1-0-0.txt",
    "summary": "Статья описывает интеграцию и использование SDK оценок и отзывов в приложении через сервис RuStore. Основные темы статьи включают:\n1) Введение в SDK отзывов и оценок RuStore, который позволяет пользователям приложения оценивать и оставлять отзывы в RuStore.\n2) Рекомендации и условия для корректной работы SDK, включая требования к ОС, версию приложения и пользовательский опыт.\n3) Примеры реализации и пользовательского сценария для интеграции SDK.\n4) Детали подключения SDK к проекту, включая инструкции об использовании и настройку в Unity, Unreal Engine и других платформах.\n5) Инструкции по работе с оценками включая инициализацию, запуск процесса запроса оценки, обработку ошибок и тестирование.\n6) Описание структуры ошибок и возможные ошибки, которые могут возникнуть при использовании SDK.\nТаким образом, данная статья направлена на разработчиков и технического персонала, заинтересованных в использовании SDK для улучшения взаимодействия с пользователями в приложении через сервис RuStore."
  },
  {
    "shortName": "/developers_tools_remote-config_parameters-and-conditions_.txt",
    "summary": "Статья \"Remote Config: эффективное управление параметрами и условиями\" вкладывается в раздел \"Инструменты\" в оглавлении, в подраздел \"RuStore Remote Config\". Основной контент статьи состоит в описании того, как Remote Config позволяет эффективно управлять параметрами и условиями приложения, предотвращая непреднамеренные изменения. Обсуждаются такие аспекты как принцип работы, подключение SDK, настройка работы с параметрами и условиями, а также разграничение прав и доступов для операций изменения подтверждения."
  },
  {
    "shortName": "/developers_tools_sdk-catalog.txt",
    "summary": "Статья «Catalog of SDK» посвящена каталогу SDK (Software Development Kit), который объединяет все доступные в RuStore библиотеки кода для разработки программного обеспечения. SDK экономит время и ресурсы разработчиков, ускоряя интеграцию функций и инструментов в приложения. Каталог содержит информацию о библиотеках от RuStore, MyTracker, MyTarget и VK Maps, включая интеграцию платежей, обновление приложений, работу с отзывами, push-уведомления, настройки A/B тестов и управление рекламой. Страница для каждой библиотеки предлагает детализированную информацию, включая возможности, начало работы, требования к разрешениям и зависимости, а также ссылки на документацию и репозиторий."
  },
  {
    "shortName": "/work-with-rustore-api_api-feedback-process_delete-feedback-answer.txt",
    "summary": "Статья описывает метод удаления ответа на отзыв в API RuStore. Она объясняет, как использовать DELETE запрос для удаления ответа на отзыв, используя URL со именем пакета приложения и ID ответа на отзыв. Статья также описывает параметры взаимодействия, ответа и приводит примеры запроса и ответа. Этот метод включается в сценарии использования RuStore API и может быть полезен для разработчиков и пользователей API для управления отзывами в приложениях."
  },
  {
    "shortName": "/developers_advertising-and-promotion_.txt",
    "summary": "Статья \"Эффективная реклама в RuStore - как продвигать и привлекать внимание\" обсуждает способы продвижения и привлечения внимания к приложениям в RuStore. Она включает в себя обзор различных методов рекламы, включая добавление кнопки \"Скачайте из RuStore\", VK рекламу и подачу заявок на события. Цель статьи - помочь разработчикам и пользователям улучшить видимость их контента в справочнике."
  },
  {
    "shortName": "/developers_advertising-and-promotion_featuring.txt",
    "summary": "Статья \"Рекомендации по фичерингу\" в RuStore описывает процесс отбора приложений и игр для включения в тематические подборки. Фичеринг - это механизм подбора и выделения в RuStore качественных и интересных приложений, что увеличивает их видимость, количество установок и узнаваемость. В статье подробно рассматривается, какие приложения могут попасть в фичеринг: те, у которых уже есть большая популярность, активность пользователей, большое количество положительных отзывов и оценок, регулярно обновляются и соответствуют требованиям RuStore. Также акцентируется внимание на необходимости правильного оформления карточки приложения. Важно отметить, что включение в фичеринг не гарантируется, так как это решение принимает редакция."
  },
  {
    "shortName": "/developers_tools_remote-config_parameters-and-conditions_conditions.txt",
    "summary": "Статья \"Атомарные условия и полное руководство по созданию Remote Config\" вводит читателей в работу с Remote Config - инструментом для управления настройками и параметрами приложения удаленно. Основной упор делается на понимание и создание условий, которые определяют, как именно обновляются приложения. \n\nКлючевые мысли, изложенные в статье, включают в себя: \n1. Условия важны для применения параметров на определенный сегмент пользователей. \n2. Создание и редактирование условий требует особых осторожностей, так как неудачные изменения могут повлиять на работу приложения.\n3. Условия можно создавать с использованием атомарных условий, которые могут быть текстовыми или числовыми и обладать различными операторами.\n4. Условия нужно подтверждать или управлять их изменением, в зависимости от роли пользователя.\n5. В конце статьи приведены инструкции по удалению и отклонению изменений в условиях.\n\nСтатья подходит для раздела \"Руководства по использованию\" в оглавлении."
  },
  {
    "shortName": "/sdk_reviews-ratings_unity_1-0-0.txt",
    "summary": "Эта статья предоставляет документацию о \"RuStore In-app Review SDK\", инструменте для встроенной оценки и отзывов пользователей в приложении через SDK. В ней рассматриваются следующие темы: общие сведения о функционировании, примеры реализации, условия для корректной работы, оптимальные моменты для запроса оценки и отзывы, рекомендации по дизайну, подключение SDK к проекту, работа с оценками, и обработка возможных ошибок. Статья подразумевает, что разработчики могут использовать SDK для интеграции функционала обработки отзывов и оценок непосредственно из приложения, улучшая взаимодействие с пользователями."
  },
  {
    "shortName": "/sdk_payments_flutter_3-0-0.txt",
    "summary": "Статья \"Руководство по интеграции платежей в мобильное приложение с использованием SDK RuStore\" подробно описывает процесс интеграции платежной системы в мобильные приложения на различных платформах (Flutter, Kotlin/Java, Unity, Godot, React Native, Unreal Engine, Defold и Push-уведомления). \n\nСтатья объясняет установку и конфигурацию SDK в проекте, подключение push-уведомлений и работы с deeplinks для оплаты через сторонние приложения. Она также содержит примеры кода для инициализации SDK, обработки deeplink и использования методов для работы с платежами - получение списка продуктов, покупка продуктов и получение списка покупок.\n\nВажными моментами статьи являются проверка доступности платежей, условия для работы платежей и описание структур данных, возвращаемых в ответах на запросы."
  },
  {
    "shortName": "/sdk_push-notifications_godot_1-2-0.txt",
    "summary": "Текст статьи представляет собой руководство по интеграции и использованию SDK для пуш-уведомлений в приложениях Godot Engine версии 1.2.0. Оно включает в себя информацию о условиях работы SDK, процессе подключения в проект, редактировании манифеста приложения, запросе разрешения на показ уведомлений в версии Android 13+, инициализации плагина, логировании событий, работе с сегментами пользователей, проверке возможности получения push-уведомлений, методами работы с push-токеном и push-топиком, получением данных от RuStore SDK, структурой уведомления, созданием канала для отправки уведомлений, открытием активности при нажатии на уведомление, а также обработкой ошибок."
  },
  {
    "shortName": "/developers_monetization_manage-payments#payment-status.txt",
    "summary": "Суммарно, статья посвящена управлению платежами в RuStore и включает в себя следующие ключевые моменты:\n\n1. **Просмотр и поиск платежей**: Статья объясняет, как в RuStore Консоли можно просмотреть платежи по приложению с монетизацией, а также как проводить поиск платежей по различным критериям.\n\n2. **Статусы платежей**: Уточняется, какие статусы могут принимать платежи в RuStore.\n\n3. **Возврат платежей**: Описано, как возвращать платежи покупателям в случае необходимости.\n\nТаким образом, это руководство описывает основные операции с платежами в системе RuStore, включая их просмотр, поиск, а также процесс возврата."
  },
  {
    "shortName": "/work-with-rustore-api_api-subscription-payment_api-token-subscription-method.txt",
    "summary": "Статья посвящена методу получения данных о подписке через API от сервиса RuStore. Освещаются параметры взаимодействия с API, включая URL запроса и необходимые параметры (токен подписки). Рассмотрены ответы API: статус коды, поля и структура тела ответа, включающего информацию о подписке (ID, статус, цена, дата следующего платежа и т.д.). В статье также приведены примеры ответов API в случае успешного запроса и ошибки, а также описывается валидация запроса на стороне сервера."
  },
  {
    "shortName": "/work-with-rustore-api_api-authorization-token.txt",
    "summary": "Заголовок: \"Метод получения токена авторизации в RuStore API\"\n\nСтатья излагает процесс генерации JWT-токена в системе RuStore с использованием приватного ключа, полученного через их консоль. Для успешного выполнения запроса необходимо сгенерировать приватный ключ. Описаны параметры взаимодействия, включая `companyId` и `keyId`, а также пример генерации параметра `signature`. \n\nСтатья объясняет, как формируется `signature`, включая шаги для ее создания и проверки. Представлены примеры кода на Python и Java для генерации токена, а также информация о примере запроса и ответа API. \n\nВ статье также описываются возможные ошибки и как их исправить. Заключается в примерах запроса и ответа API для успешной авторизации.\n\nСлужит руководством для разработчиков при работе с RuStore API и получении токена авторизации."
  },
  {
    "shortName": "/sdk_rustore-geo_map-display-services_interactive-map_events.txt",
    "summary": "Статья посвящена документации о событиях (events) в SDK RuStore. Основное внимание уделено методам управления слушателями событий, таким как добавление (on), удаление (off) и одноразовое добавление (once). Рассматриваются также различные типы событий, связанных с мышью (MapMouseEvent), касаниями (MapTouchEvent), управляющими операциями типа перемещения и прокрутки (MapBoxZoomEvent, MapWheelEvent), а также событиями изменения данных карты (MapDataEvent). В конце статьи приведены примеры использования каждого типа события."
  },
  {
    "shortName": "/developers_tools_remote-config_ios-apps_enable-mytracker.txt",
    "summary": "Статья посвящена процессу подключения MyTracker для сбора данных метрик в контексте использования RuStore SDK и API. В ней изложены шаги по созданию аккаунта в MyTracker, синхронизации аккаунтов MyTracker и Remote Config, а также добавлению метрик в приложение. Основные ключевые мысли включают в себя необходимость предварительной синхронизации приложения с Remote Config и подключения SDK для IOS, а также процесс подключения MyTracker и добавления метрик."
  },
  {
    "shortName": "/sdk_reviews-ratings_kotlin-java_2-0-0.txt",
    "summary": "Статья посвящена документации по использованию встроенной в приложение RuStore функции ввода отзывов и оценок. Основные ключевые мысли включают:\n\n1. Описание процесса оценки и оставления отзывов пользователями в приложении, включая предустановленные параметры и рекомендации по реализации.\n2. Условия, необходимые для корректной работы функции оценок и отзывов, включая системные требования на стороне устройств пользователей и требования к приложение для публикации в RuStore.\n3. Рекомендации по запуску процесса оценки, включая время и способы запуска.\n4. Инструкции по подключению SDK в проект на языках программирования Kotlin и Java, а также примеры конфигурационного кода.\n5. Процесс работы с оценками включает подготовку к работе и запуск формы оценки приложения.\n6. Обсуждение обработки ошибок SDK, включая возможные исключения.\n7. Ссылки на примеры реализации и пользовательские сценарии, а также страницы документации для следующих тем и SDK."
  },
  {
    "shortName": "/work-with-rustore-api_api-upload-publication-app_apk-file-upload_file-upload-aab.txt",
    "summary": "Статья посвящена процессу загрузки AAB-файлов для публикации приложений в системе RuStore API. Обсуждаются ограничения загрузки файлов, необходимость подписанного файла и структура взаимодействия через POST-запрос с параметрами в заголовке и телом запроса. Приведен пример запроса и ответа, а также перечислены следующие и предыдущие страницы документации."
  },
  {
    "shortName": "/sdk_rustore-geo_additional-services_main.txt",
    "summary": "Список статьи посвящен дополнительным сервисам для приложений RuStore. Включает в себя разнообразные сервисы, такие как определение высоты, местоположения по IP-адресу, часового пояса, почтового индекса, а также сервисы, связанные с обновлением приложения и картами. Эта информация может быть полезна для разработчиков и пользователей, ищущих дополнительные функции для использования в своих приложениях."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_age-restrictions.txt",
    "summary": "Статья посвящена системе возрастных ограничений в RuStore, одной из крупнейших русскоязычных магазинов приложений. Она объясняет, как указывать и выбирать возрастные ограничения при публикации приложений, чтобы помочь пользователям понять, подходит ли данное приложение для их возраста. Указывается, что возрастные ограничения не указывают на сложность игр и рекомендуется родителям или опекунам ориентироваться на возрастное ограничение при выборе приложений для детей."
  },
  {
    "shortName": "/users_purchases-and-returns_link-bank-card.txt",
    "summary": "Статья \"Привязка банковской карты в RuStore: Удобные способы оплаты\" пошагово объясняет процесс привязки банковской карты к приложению RuStore для удобной оплаты товаров и услуг в приложении. В ней излагаются ключевые мысли о том, как активировать функцию \"Способы оплаты\" в RuStore, а также базовые инструкции для подключения карт через SberPay и прямой ввод данных карты."
  },
  {
    "shortName": "/sdk_payments_flutter_4-0-0.txt",
    "summary": "Статья представляет собой подробное руководство по интеграции платежной системы RuStore в мобильные приложения. Основные темы включают:\n\n1. **Описание**: Рассказывается о возможностях системы RuStore, позволяющей интегрировать платежи в мобильные приложения, и упоминается, что для полного понимания следует изучить гайды.\n\n2. **Пример реализации**: Предлагается посмотреть на приложение-пример для понимания, как правильно интегрировать SDK платежей.\n\n3. **Условия работы платежей**: Указываются требования для успешной работы платежных систем на устройстве пользователя.\n\n4. **Подготовка к работе**: Описаны шаги по подключению пакета платежей к проекту, включая использование команды \"flutter pub add flutter_rustore_billing\" и настройку AndroidManifest.xml.\n\n5. **Обработка deeplink**: Разъясняется, как правильно настроить deeplink для корректной оплаты через сторонние приложения.\n\n6. **Инициализация**: Процесс инициализации библиотеки Billing-клиента настроек.\n\n7. **Работа с SDK**:\n    - **Получение списка продуктов**.\n    - **Покупка продукта**.\n    - **Получение списка покупок**.\n    - **Получение сведений о покупке**.\n    - **Подтверждение покупки**.\n\n8. **Обработка ошибок**: Описаны возможные ошибки и как их обрабатывать в нативном SDK.\n\n9. **Ведение журнала событий**: Указывается, что логирование включено по умолчанию и его можно просмотреть по тегу \"RuStoreFlutterBillingPlugin\".\n\nСтатья подходит для включения в раздел \"Инструкции по интеграции платежей в приложение\" или \"Руководство по использованию SDK RuStore\" в оглавлении."
  },
  {
    "shortName": "/sdk_task-api.txt",
    "summary": "Статья посвящена документации по использованию Task API в RuStore SDK. В ней излагаются основы работы асинхронных задач, возвращающихся ошибкой или результатом, и их обработка с помощью callback-слушателей, таких как onSuccessListener, onFailureListener и onCompletionListener. Также описывается работа с многопоточностью и синхронное выполнение задач, а также обработка API через сопроцессы."
  },
  {
    "shortName": "/sdk_task-api_.txt",
    "summary": "Статья посвящена документации по Task API в среде RuStore. В ней обсуждаются концепции асинхронных задач (Task) и их использование в различных API RuStore, такие как платежи in-app и подписки, push-уведомления, управление отзывами и обновлениями приложения. Обсуждаются методы управления результатом выполнения задачи (обработка успеха и ошибок), многопоточность, синхронное выполнение и обработка Task API через сопроцессы. Предоставляются примеры кода для лучшего понимания концепции."
  },
  {
    "shortName": "/sdk_reviews-ratings_unreal_2-0-0.txt",
    "summary": "Статья описывает интеграцию и использование SDK оценок и отзывов в приложении в среде RuStore. В ней обсуждаются основы использования, включая условия для корректной работы, моменты для запуска процесса оценки, рекомендации к дизайну, инструкции по подключению в проект и действия по работе с оценками и ошибками. Статья содержит примеры реализации и кодовую базу для изучения."
  },
  {
    "shortName": "/work-with-rustore-api_api-subscription-payment_api-token-subscription-method_.txt",
    "summary": "Статья посвящена методу получения данных о подписке через API в системе RuStore. Она детально описывает, как происходит запрос на получение информации о подписке по токену, включая необходимые параметры запроса и ответа. Также приводится информация о валидации запроса и возможных ошибках. \n\nКлючевые мысли, изложенные в статье, включают:\n- Описание процесса получения данных о подписке по токену;\n- Повторная ссылка на руководства по работе с платежами и SDK;\n- Список параметров взаимодействия, включая токен авторизации и токен подписки;\n- Формат ответа API и его составляющие (код ответа, сообщение, тело ответа и др.);\n- Примеры ответов API, включая успешный ответ и ответ с ошибкой;\n- Описание валидации запроса и необходимых условий для его корректного выполнения."
  },
  {
    "shortName": "/developers_tools_app-tracer_android_modules_crash-anr.txt",
    "summary": "Эта статья посвящена процессу эффективного разрешения проблем, связанных с исключениями Crash и ANR в системе Tracer SDK. Она подробно описывает, как подключить нужные зависимости в вашем проекте, а также объясняет, как использовать классы CrashReportConfiguration и CrashFreeConfiguration для настройки отчетов о критических ошибках и подсчета \"безошибочных пользователей\". Далее уделено внимание опциям классов и их возможным заменителям. В заключении, статья обсуждает использование класса TracerCrashReport для отчетов об ошибках и оставляет ссылку на следующую тему - Heap Dumps."
  },
  {
    "shortName": "/developers_tools_remote-config_parameters-and-conditions_parameters.txt",
    "summary": "Статья посвящена управлению параметрами в сервисе RuStore Remote Config и процессу их настройки. Она объясняет, как подключать и конфигурировать SDK для изменения параметров в приложении в зависимости от выполнения определенных условий. Описаны шаги по созданию нового параметра, его подтверждению и тестированию. Также рассказывается о возможностях управления и удаления параметров. Статья подходит для раздела \"Работа с параметрами и условиями в Remote Config\" в оглавлении."
  },
  {
    "shortName": "/developers_developer-account_registration-developer_.txt",
    "summary": "\"Статья изложает процесс регистрации разработчиков в системе RuStore Консоль, подразделяя её на регистрацию юридических лиц и физических лиц. Подчеркивается различие в целях использования аккаунтов между коммерческими предприятиями, государственными компаниями и профессиональными разработчиками (для юридических лиц) и студентами, любителями и полупрофессиональными разработчиками (для физических лиц). Статья также рассказывает о требованиях подтверждения регистрации для юридических лиц и удаленной верификации для физических лиц. В конце статьи содержится предупреждение для пользователей о переносе способов входа в учетную запись в случае неработоспособности авторизации через Google.\""
  },
  {
    "shortName": "/sdk_reviews-ratings_unreal_1-0-1.txt",
    "summary": "Статья описывает интеграцию SDK для отзывов и оценок в приложение через сервис RuStore. Основные разделы включают: общие сведения о функционале SDK, примеры его использования, условия для корректной работы, рекомендации по дизайну, инструкции по подключению в проект, работы с оценками, обработки ошибок и доступ к документации по версиям SDK."
  },
  {
    "shortName": "/developers_monetization_payment-callback#delivery-guarantee.txt",
    "summary": "Статья посвящена сервису \"Уведомления на сервер\" в RuStore, который отправляет в режиме реального времени уведомления об изменениях в статусах платежей в приложении. Процесс настройки сервера и включения отправки уведомлений описан в статье. Также обсуждаются ограничения и гарантии доставки уведомлений, включая автоматическую повторную отправку в случае отсутствия ответа и максимальное количество попыток."
  },
  {
    "shortName": "/sdk_payments_defold_5-0-0.txt",
    "summary": "Эта статья представляет документацию для интеграции платежной системы RuStore в мобильные приложения на различных платформах (Android, iOS, Unity, Godot, React Native, Flutter, Unreal Engine, Defold). Документация включает сведения о подключении SDK платежей, работе с платежами, обработке deeplinks, инициализации и работы SDK, а также информацию по обработке различных сценариев использования. Основные разделы включают подключение в проект, обработка deeplinks, инициализацию SDK, работа с платежами, получение списка продуктов, покупку продуктов, получение списка покупок, подтверждение покупок, обработку ошибок и коды ошибок."
  },
  {
    "shortName": "/developers_tools_remote-config_parameters-and-conditions_conditions#atomic-conditions.txt",
    "summary": "Статья \"Remote Config - атомарные условия и полное руководство по созданию\" посвящена инструкции по использованию функции Remote Config в RuStore. Рассматриваются понятия \"Условия\" и \"Параметры\", а также процесс создания нового условия. Условия используются для определения, как именно обновится приложение для определенной группы пользователей. В статье подробно описаны типы атомарных условий, включая текстовые и числовые, и их применение. Также уделено внимание процессу подтверждения, редактирования и удаления условий, а также отклонения изменений в случае ошибок. Основной упор делается на детальном руководстве по созданию условий в.Remote Config."
  },
  {
    "shortName": "/developers_tools_remote-config_ios-apps_enable-sdk.txt",
    "summary": "Эта статья посвящена процессу подключения SDK RuStore Remote Config в приложение на платформе iOS. Статья начинается с описания процесса установки SDK через Swift Package Manager или Cocoapods. Затем подробно объясняется, как и куда вставить `appID` приложения и настроить конфигурацию клиента, включая выбор стратегии фонового обновления значений remote config.\n\nКлючевые мысли статьи включают в себя:\n\n1. Использование Swift Package Manager или Cocoapods для установки SDK.\n2. Включение `appID` приложения для подключения к серверу remote config.\n3. Конфигурация клиента: выбор стратегии фонового обновления и передача параметра `account` с помощью замыкания `requestParametersProvider`.\n4. Стратегии фоновых обновлений: `Default`, `Snapshot` и `Actual`.\n5. Получение значений remote config и их чтение.\n6. Подписка на события в работе SDK.\n7. Ответы на вопросы пользователей.\n\nПомимо описания процесса подключения SDK, статья также дает ссылки на другие страницы в документации, а также предлагает связаться с поддержкой в случае возникновения вопросов."
  },
  {
    "shortName": "/sdk_updates_unreal_2-0-0.txt",
    "summary": "Статья посвящена обсуждению API обновления приложений в системе RuStore. Основными темами являются: понятие обновления приложений с использованием SDK и API RuStore, условия для корректной работы SDK, методы подключения его в проект, создание и инициализация менеджера обновлений, а также различные способы запуска и установки обновлений: отложенное, тихое и принудительное. В конце статьи описываются методы обработки ошибок и возможные ошибки при выполнении обновлений."
  },
  {
    "shortName": "/sdk_payments_kotlin-java_migration_2-2-0-mirgation.txt",
    "summary": "Статья \"Обновление до версии 2.2.0 и миграция SDK | Документация RuStore\" посвящена инструкциям по переходу на новую версию платежного SDK от компании RuStore. Главные темы: обновление зависимости SDK в проекте, изменения в API методах получения списка продуктов, покупки и потребления продуктов, а также обновление модели результата этих операций. Внесены также изменения в обработку ошибок и обновлены сценарии потребления и отмены покупки. Эта информация предназначена для разработчиков, которые собираются обновить свою поддержку до новой версии SDK и должны знать о всех внесенных изменениях для корректной работы своих продуктов."
  },
  {
    "shortName": "/sdk_payments_godot_history.txt",
    "summary": "Эта статья \"История обновлений\" представляет собой список версий различных SDK и API для платформы RuStore, включая платежи in-app и подписки, а также SDK для Unity, Godot и других. Ключевые мысли включают в себя обновления вроде добавления функций песочницы платежей, смены тем оформления, типизированных структур данных и серверной валидации покупок. Статья также упоминает внутренние обновления и багфиксы."
  },
  {
    "shortName": "/developers_tools_.txt",
    "summary": "Статья \"Инструменты RuStore - оптимизация и управление приложениями\" обсуждает возможности и преимущества использования инструментов от RuStore для оптимизации и управления приложениями. Здесь описываются функции вовлечения пользователей, удаленного управления приложением, аналитики, поиска сбоев и проблем, а также упрощения и ускорения разработки с использованием SDK. Также судя по описанию, инструменты доступны только пользователям с правами владельца организации. Статья включает инструкции по подключению и работе с инструментами, включая Push-уведомления, RuStore Remote Config, Tracer, аналитику MyTracker, авторизацию VK ID, карты и геосервисы, а также SDK."
  },
  {
    "shortName": "/developers_vk-id-sdk.txt",
    "summary": "Статья посвящена интеграции VK ID в приложение для пользовательской авторизации. Она подчеркивает преимущества включений VK ID, включая широкую аудиторию, удобные способы входа и валидацию данных пользователей. В статье излагаются шаги по интеграции VK ID SDK: от открытия RuStore Консоли и выбора приложения до регистрации и настройки SDK."
  },
  {
    "shortName": "/sdk_push-notifications_user-segments_work-with-segments-push-api.txt",
    "summary": "Статья посвящена теме работы с \"Сегментами пользователей\" в контексте платформы RuStore. Рассмотрены особенности настройки и использования сегментов для выделения определенных групп пользователей на основе определенных параметров, таких как доход или версия Android. Статья также обсуждает возможности работы с сегментами через API RuStore и интеграцию с MyTracker для анализа и таргетированной рекламы. В конце представлено оглавление следующих тем, связанных с интеграцией MyTracker и созданием сегментов."
  },
  {
    "shortName": "/sdk_payments_unity_history.txt",
    "summary": "Статья \"История обновлений\" содержит список версий SDK RuStore с указанием внесенных исправлений багов, добавленных функций и внутренних обновлений. Значимыми изменениями являются добавление нового статуса покупок для подписок, функциональность изменения темы, изменение формата возвращаемых значений в некоторых методах и добавление новых параметров и полей в классы и функции SDK."
  },
  {
    "shortName": "/developers_tools_remote-config_sdk_react_6-0-0.txt",
    "summary": "Эта статья посвящена документации SDK Remote Config версии 6.0.0 для React Native от RuStore. В ней обсуждаются основные особенности и процесс интеграции SDK в приложение, а также подробно описывается, как работать с конфигурацией и настраивать различные параметры. \n\nСтруктура документации включает:\n\n- Определение SDK Remote Config и его основных функций.\n- Описание подключения SDK к проекту, инициализации и работы с ключами конфигурации.\n- Информация об опциональных параметрах для более точной настройки конфигурации в приложении.\n- Рассмотрение различных сценариев использования и возможностей интеграции SDK в разные типы приложений.\n- Обзор методов получения и обновления конфигурации.\n- Пояснение об ошибочных ситуаций и сообщениях об ошибках, которые могут возникнуть при работе SDK.\n\nДокументация также включает примеры кода для облегчения понимания процесса интеграции и использования SDK."
  },
  {
    "shortName": "/work-with-rustore-api_api-subscription-payment_api-token-payment-method.txt",
    "summary": "Статья посвящена методу получения данных платежа через API RuStore. В ней описывается процесс получения информации о конкретном платеже по его токену покупки. Метод поддерживает реальные и тестовые платежи. Для выполнения операции требуется токен авторизации. Указаны параметры взаимодействия для реальных и тестовых платежей. В статье детально описаны атрибуты взаимодействия и ответа, включая коды ответов и поля ответа. Также приведены примеры ответов при успешной операции и при получении ошибки. В конце упоминаются требования для валидации запроса, такие как проверка токена авторизации и соответствия кода приложения владельцу, получившему токен."
  },
  {
    "shortName": "/sdk_updates_defold_2-0-0.txt",
    "summary": "Эта статья представляет собой документацию для интеграции \"RuStore In-app updates SDK\" в приложение. Статья начинается с краткого обзора, объясняющего, как SDK помогает пользователям видеть и оценивать обновления приложений, а также улучшает производительность и исправляет ошибки. Затем в статье описывается пример пользовательского сценария, показывающий, как SDK может быть интегрирован в приложение для разных способов обновления, включая отложенные, тихие и принудительные обновления.\n\nСтатья затем переходит к описанию условий корректной работы SDK, таких как необходимость обновления на устройстве пользователя до определенной версии и наличие авторизации в RuStore. Затем приводится инструкция по подключению SDK в проект.\n\nДалее в статье описываются методы и функции SDK, включая создание менеджера обновлений, проверку наличия обновлений, скачивание и установку обновлений, а также использование слушателей для отслеживания процесса обновления. \n\nПоследние разделы статьи описывают различные сценарии обновления: отложенное, принудительное и тихое обновление. В конце статьи приводится информация о обработке ошибок и возможные ошибки, которые могут возникнуть при использовании SDK.\n\nВ целом, статья служит подробным руководством по использованию \"RuStore In-app updates SDK\", подробно излагающим весь процесс от подключения SDK до работы с обновлениями и обработки ошибок."
  },
  {
    "shortName": "/developers_tools_remote-config_license-agreement.txt",
    "summary": "Статья представляет собой лицензионное соглашение для сервиса RuStore Remote Config, предназначенного для удаленной настройки конфигурации мобильных приложений. Оно регулирует отношения между компанией ООО «ВК» (Лицензиаром) и пользователями сервиса (Лицензиатами), определяя условия использования сервиса.\n\nСоглашение подробно описывает функциональность сервиса, процедуры регистрации и авторизации, права и обязанности обеих сторон, а также ключевые аспекты использования в области авторских и смежных прав, конфиденциальности и ответственности.\n\nТакже оно устанавливает условия присоединения, предоставления и использования лицензии, ограничения использования, а также правила и процедуры расторжения соглашения. Кроме того, в документе присутствуют информация об изменениях в соглашении и ответственности сторон в случае нарушения условий."
  },
  {
    "shortName": "/sdk_reviews-ratings_godot_2-0-0.txt",
    "summary": "Статья описывает интеграцию функции \"Ревью и оценка\" в приложение с помощью SDK от RuStore. Статья подразделяется на разделы: общие сведения, примеры реализации, условия для корректной работы, оптимальное время для запуска запроса на оценку, рекомендации по дизайну, инструкции по подключению в проект и работе с оценками. В конце приведена информация об ошибках и как с ними работать."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_app-publication_app-publication-aurora_dev-certificate_generate-csr.txt",
    "summary": "Статья посвящена процессу генерации файла-запроса на сертификат для подтверждения прав на размещение приложений в магазине RuStore. Она разбита на две части: генерация ключа и генерация запроса. Пользователям предлагается использовать стандарт OpenSSL для генерации ключа и CSR (фила запроса) на собственном рабочем месте или в среде разработки Aurora IDE. Основное внимание уделено правильному заполнению поля \"COMMON_NAME\" в запросе, которое должно удовлетворять определенным требованиям. Разделы статьи завершаются ссылками на документацию ОС Аврора для получения дополнительной информации."
  },
  {
    "shortName": "/users_purchases-and-returns_payment-method_tinkoff-pay.txt",
    "summary": "Статья \"Оплата через Tinkoff Pay в RuStore\" излагает процесс оплаты приложений и товаров в магазине RuStore с использованием сервиса Tinkoff Pay. Она предлагает подробные шаги для авторизованных пользователей и тех, кто использует другой способ авторизации. Статья подходит для раздела \"Покупки и возвраты\" в оглавлении."
  },
  {
    "shortName": "/users_purchases-and-returns_vk-connect.txt",
    "summary": "Статья \"Управление картами VK ID в RuStore - Подключение, отключение, VK Pay\" излагает процесс подключения и отключения банковских карт из VK ID на платформе RuStore. Рассматриваются два способа подключения карт: при первичной авторизации через VK ID и после начала использования приложения RuStore. Также описывается процесс отключения карты, с учетом конечного состояния VK Pay и его влияния на текущие подписки в RuStore."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_collect-har-logs_microsoft-edge.txt",
    "summary": "Текст статьи описывает процесс сбора HAR-логов и консольных логов в Microsoft Edge. В статье приведены шаги по открытию инструментов разработчика и настройке его для собирания логов. Также описывается процесс сохранения логов в отдельные файлы. Статья подходит для раздела \"Инструменты\" в оглавлении, поскольку объясняет методы, позволяющие разработчикам отладить и анализировать работу Microsoft Edge."
  },
  {
    "shortName": "/developers_publishing-and-verifying-apps_app-publication_testing.txt",
    "summary": "Статья \"Тестирование приложений в RuStore Консоль: лучшие практики\" посвящена процессу и рекомендациям по закрытому тестированию апликаций до их публикации в магазине приложений RuStore. Тестирование осуществляется в два этапа: сначала в RuStore Консоли, а затем через витрину RuStore. В статье подробно описываются шаги по загрузке версии приложения для тестирования и добавлению тестировщиков. Также есть разделы о тестировании через витрину приложения и завершении тестирования. Статья консультативна и направлена на технически грамотную аудиторию, желающую улучшить процесс тестирования своих приложений перед публикацией."
  },
  {
    "shortName": "/developers_tools_app-tracer_android_modules_heap-dumps.txt",
    "summary": "Статья \"Heap Dumps: эффективный мониторинг и управление с Tracer SDK\" посвящена инструментам мониторинга и управления при помощи библиотеки Tracer SDK. В ней обсуждаются методы подключения зависимостей к проекту и использование модуля Heap Dumps. Пользователи узнают, как настроить HeapDumpConfiguration для эффективной отправки хипдампов при обнаружении перегрузки памяти и получат информацию о безопасной работе с устаревшими опциями."
  }
]